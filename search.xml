<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据链路层与交换机的工作原理</title>
      <link href="/posts/1fb3b75b/"/>
      <url>/posts/1fb3b75b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、数据链路层"><a href="#一、数据链路层" class="headerlink" title="一、数据链路层"></a>一、数据链路层</h1><ol><li><p>位置：位于OSI模型的第二层</p></li><li><p>传输单元：帧</p></li><li><p>帧结构，如下图所示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201030132905.png" alt=""></p></li><li><p>一个帧的最大容载量：<code>6 + 6 + 2 + 1500 + 4 = 1518字节</code>（仅限国内）</p></li><li><p>帧格式：</p><ul><li>有线传输：<code>802.3</code>（<code>802</code>代表国际有名的802个科学家）</li><li>无线传输：<code>802.11</code> </li></ul></li><li><p>帧头内容：目标MAC地址 + 源MAC地址（本机）</p></li><li><p>帧头中的类型的作用：识别上层协议，为上层提供服务</p></li><li><p>MAC地址：</p><ul><li>MAC地址 = 厂家标识 + 该厂家网卡的唯一标识（全球唯一）</li><li><strong>MAC地址</strong>也叫做<strong>物理地址</strong></li><li>长度48位，6字节（<code>8bit=1byte</code>）</li></ul></li></ol><h1 id="二、交换机的工作原理"><a href="#二、交换机的工作原理" class="headerlink" title="二、交换机的工作原理"></a>二、交换机的工作原理</h1><ol><li><p>工作在<strong>数据链路层</strong>的设备：交换机 / 网卡</p></li><li><p>交换机不能隔离网段，必须连接同一网段；路由器必须要隔离网段，即每个接口的网段必须不一致</p></li><li><p>交换机工作原理简图1：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201030134912.png" alt=""></p></li><li><p>交换机工作原理简图2：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201030135857.png" alt=""></p></li><li><p>交换机工作原理说明：</p><ul><li>交换机收到一个数据帧后</li><li>首先学习帧中的源MAC地址来形成MAC地址表</li><li>然后检查帧中的目标MAC地址，并匹配MAC地址表，如表中有匹配项，则<strong>单播</strong>转发；如表中无匹配项，则除接收端口外<strong>广播</strong>转发</li><li>MAC地址表的<strong>老化时间</strong>（超时）默认是300秒（可修改）</li></ul></li><li><p>交换机的端口：</p><ul><li>E：10Mb</li><li>F：100Mb</li><li>G：1000Mb</li><li>Te：10000Mb</li><li>例如：F0/2：（<code>F</code>百兆接口；<code>0</code>模块号；<code>2</code>该模块中的接口号）</li></ul></li><li><p>交换机接口速率自适应：1000/100/10M自适应；速率工作模式可以为10，100，1000任何一种状态</p></li><li><p>交换机端口状态：up / down（开启/关闭）</p></li><li><p>交换机端口处于关闭状态的3中可能：</p><ul><li>人工关闭端口</li><li>端口速率不匹配</li><li>双工模式不匹配 （老式交换机设备中的模式，比较落后，但是新版的也有，为了兼容）</li></ul></li><li><p>交换机的双工模式说明：</p><ul><li>单工模式：只能打或只能听</li><li>半双工模式：一个打一个听，需要等待对方说完才能说</li><li>全双工模式：打字对骂，无需等待对方说完</li><li>新版的交换机中，有半双工和全双工的自适应设置，若自适应没打开，接口就会不通</li></ul></li></ol><h1 id="三、交换机基本工作模式"><a href="#三、交换机基本工作模式" class="headerlink" title="三、交换机基本工作模式"></a>三、交换机基本工作模式</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201030160353.png" alt=""></p><h2 id="用户模式"><a href="#用户模式" class="headerlink" title="用户模式"></a>用户模式</h2><ul><li><p>说明：进入设备的命令窗口，就进入了用户模式</p></li><li><p>作用：可以查看交换机的基本简单配置，且不能做任何修改配置！</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="特权模式"><a href="#特权模式" class="headerlink" title="特权模式"></a>特权模式</h2><ul><li><p>说明：在用户模式下，输入<code>enable</code>命令，可进入特权模式</p></li><li><p>作用：可以查看所有的配置，但不能修改配置，可以做测试、保存、初始化操作！</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>&gt; enable</span><br><span class="line"><span class="keyword">switch</span>#</span><br></pre></td></tr></table></figure></li></ul><h2 id="全局配置模式"><a href="#全局配置模式" class="headerlink" title="全局配置模式"></a>全局配置模式</h2><ul><li><p>说明：在特权模式下，输入<code>configure terminal</code>命令，可进入全局配置模式</p></li><li><p>作用：默认不能查看配置，可以修改配置，且全局生效！</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span># configure terminal</span><br><span class="line"><span class="keyword">switch</span>(config)#</span><br></pre></td></tr></table></figure></li></ul><h2 id="接口配置模式"><a href="#接口配置模式" class="headerlink" title="接口配置模式"></a>接口配置模式</h2><ul><li><p>说明：在全局配置模式或者console口模式下，输入<code>interface + 接口号</code>，可进入指定的接口配置模式</p></li><li><p>作用：默认不能查看配置，可以修改配置，且仅对该接口生效！</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(config)# interface f0/<span class="number">2</span></span><br><span class="line"><span class="keyword">switch</span>(config-<span class="keyword">if</span>)#</span><br></pre></td></tr></table></figure></li></ul><h2 id="console口-线-控制台模式"><a href="#console口-线-控制台模式" class="headerlink" title="console口 / 线 / 控制台模式"></a>console口 / 线 / 控制台模式</h2><ul><li><p>说明：在全局配置模式或接口配置模式下下，输入<code>line console 0</code>，可进入console口模式</p></li><li><p>作用：默认不能查看配置，可以修改配置，且仅对console口生效！</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(config)# line console <span class="number">0</span></span><br><span class="line"><span class="keyword">switch</span>(config-line)#</span><br></pre></td></tr></table></figure></li></ul><h1 id="四、交换机基本命令"><a href="#四、交换机基本命令" class="headerlink" title="四、交换机基本命令"></a>四、交换机基本命令</h1><ul><li><p>重要说明：</p><ol><li><p>交换机中的命令，不需要完整输入，只要输入的命令可以唯一匹配即可；例如：<code>exit</code>可以输入<code>ex</code>即可</p></li><li><p><code>exit</code>和<code>end</code>命令，只输入<code>e</code>是不行的，因为不能唯一匹配，但是可以输入<code>e?</code>查看相关命令</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201102151513.png" alt=""></p></li></ol></li></ul><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><ol><li><p>模式退出</p><ul><li><code>exit</code>：任意模式下，模式退出一级</li><li><code>end</code>：直接退回到特权模式</li></ul></li><li><p>重新加载设备配置：<code>reload</code> （<strong>特权模式</strong>下输入，若没有在磁盘的配置文件中，保存密码，重新加载后，恢复初始化状态，密码就不存在了，可以无密码进入<strong>用户模式</strong>）</p></li><li><p>取消命令解析：Switch(config)#<code>no ip domain-lookup</code> （进入<strong>全局配置模式</strong>后输入，不管在哪种模式下，输入错误的命令，会快速报错，否则会超时等待很长很长的时间，不利于实验）</p></li></ol><h2 id="增加命令"><a href="#增加命令" class="headerlink" title="增加命令"></a>增加命令</h2><ol><li><p>设置用户密码（只有明文方式）：</p><ul><li><p>作用：进入<strong>用户模式</strong>时，必须输入正确的用户密码才能进入，提高设备的安全性</p></li><li><p><code>password + 任意密码</code> （必须先进入<strong>console口模式</strong>）</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Switch</span>(config-line)# password <span class="number">123</span>.com</span><br><span class="line"><span class="type">Switch</span>(config-line)# login</span><br></pre></td></tr></table></figure></li></ul></li><li><p>设置特权密码（明文）：</p><ul><li><p>作用：进入<strong>特权模式</strong>时，需要输入正确的特权密码才能进入，提高设备的安全性</p></li><li><p><code>enable password + 密码</code> （必须先进入<strong>全局配置模式</strong>）</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Switch</span>(config)# enable password <span class="number">234</span>.com</span><br></pre></td></tr></table></figure></li></ul></li><li><p>设置特权密码（密文）：</p><ul><li><p>作用：进入<strong>特权模式</strong>后，使用<code>show + 配置文件名</code>，只能看到密码的hash值，提高设备的安全性</p></li><li><p>命令：<code>enable secret + 密码</code>（必须进入<strong>全局配置模式</strong>下）</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Switch</span>(config)# enable secret <span class="number">234</span>.com</span><br></pre></td></tr></table></figure></li><li><p>密码选择：当明文与密文同时存在时，优先选择密文密码，明文密码会失效，但是在配置文件中依然存在（<code>5</code>代表<code>MD5</code>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enable secret 5 $1$mERr$0.C22eHbqer250rAFbvuK1   </span><br><span class="line">enable password 123.com</span><br></pre></td></tr></table></figure></li></ul></li><li><p>进入模式时开启密码验证（先设置密码）：</p><ul><li><code>login</code> （在设置完密码后，输入login即可启动）</li><li>开启验证后，再次进入用户模式时，必须输入正确的密码</li></ul></li></ol><h2 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h2><ol><li><p>清除 / 初始化配置文件：<code>erase</code>（必须在<strong>特权模式</strong>下输入）</p></li><li><p>删除指定的配置：<code>no + 命令</code></p><ul><li><p>在哪个模式下配置的，就在哪个模式下删除</p></li><li><p>命令前面 + no即可完成删除/撤销</p></li><li><p>原命令中有参数，并且参数具有唯一性，则删除时不需要加参数</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031142858.png" alt=""></p></li></ul></li></ol><h2 id="修改命令"><a href="#修改命令" class="headerlink" title="修改命令"></a>修改命令</h2><ol><li><p>设备重命名：</p><ul><li><p><code>hostname + 任意名称</code> （必须先进入<strong>全局配置模式</strong>，命令完成后立即生效）</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span># configure terminal</span><br><span class="line"><span class="type">Switch</span>(config)# hostname sw</span><br><span class="line">sw(config)#</span><br></pre></td></tr></table></figure></li></ul></li><li><p>保存设备上的配置：</p><ul><li>高级交换机中，存在<strong>运行内存</strong>和<strong>磁盘</strong></li><li>设备第一次开机后会在运行内存中生成<code>running-config</code>文件，关闭设备后此文件会一并被清除；磁盘中默认没有文件</li><li>设备再次开机后，首先会在磁盘中查找<code>startup-config</code>文件，若磁盘中存在此文件，则复制此文件，并重命名为<code>running-config</code>，并放置在运行内存中进行读取；若磁盘中不存在<code>startup-config</code>文件，则设备会自己生成初始化文件<code>running-config</code></li><li><code>copy running-config startup-config</code> （在<strong>特权模式</strong>下，输入此命令，将设备上的所有配置保存在<code>startup-config</code>磁盘上，下次开机自动加载配置）</li><li>命令简写：<code>write</code>或者<code>wr</code> （此命令时<code>copy running-config startup-config</code>的简写）</li></ul></li><li><p>手动关闭指定接口：</p><ul><li><code>interface f0/20</code>：进入指定接口（在<strong>全局配置模式</strong>下输入）</li><li><code>shutdown</code>：关闭指定接口</li></ul></li><li><p>手动开启指定接口：</p><ul><li><code>interface f0/20</code>：进入指定接口（在<strong>全局配置模式</strong>下输入）</li><li><code>no shutdown</code>：开启指定接口</li></ul></li><li><p>强制执行特权命令：</p><ul><li><code>do + 任意特权命令</code> （除<strong>特权模式</strong>外，<strong>其他模式</strong>也可以用特权命令，<strong>用户模式</strong>除外）</li><li>全局配置模式：Switch(config)# <code>do show ip interface brief</code> （查看接口状态列表）</li><li>接口配置模式：Switch(config-if)# <code>do show ip interface brief</code>或者<code>do wr</code>或者<code>do show startup-config</code></li><li>console口模式：Switch(config-line)#  <code>do show ip interface brief</code> </li></ul></li></ol><h2 id="查询命令"><a href="#查询命令" class="headerlink" title="查询命令"></a>查询命令</h2><ol><li><p>说明：以下命令必须进入<strong>特权模式</strong>才能输入</p></li><li><p>查看设备的配置文件：<code>show startup-config</code>（查看磁盘上的配置文件，强烈建议，先将<code>running-config</code>保存为<code>startup-config</code>，进入配置文件按<strong>空格</strong>翻页）</p></li><li><p>查看交换机的MAC地址表：<code>show mac-address-table</code> </p></li><li><p>查看交换机的接口状态列表：<code>show ip interface brief</code>  </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031140028.png" alt=""></p></li></ol><h1 id="五、路由器的使用"><a href="#五、路由器的使用" class="headerlink" title="五、路由器的使用"></a>五、路由器的使用</h1><h2 id="路由器概述"><a href="#路由器概述" class="headerlink" title="路由器概述"></a>路由器概述</h2><ol><li><p>说明：路由器命令与交换机命令几乎一致</p></li><li><p>路由器在出厂时，默认关闭了接口，当线缆连接路由器后，不能直接连通，需要用命令打开</p></li><li><p>设备连接如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031155758.png" alt=""></p></li></ol><h2 id="连通路由器"><a href="#连通路由器" class="headerlink" title="连通路由器"></a>连通路由器</h2><ol><li><p>打开路由器的管理终端，选择<code>yes</code>执行自动配置（傻瓜式配置），选择<code>no</code>自定义配置</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031160423.png" alt=""></p></li><li><p>进入指定接口<code>f0/0</code>，查看接口状态</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031161022.png" alt=""></p></li><li><p>使用命令<code>no shutdown</code>打开指定接口，注意保存配置<code>write</code>（特权模式）或者<code>do write</code>（其他模式，除用户模式外）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031162048.png" alt=""></p></li><li><p>给路由器接口配置网关地址<code>ip addr +  IP + 子网掩码</code>（注意在<strong>接口配置模式</strong>下输入）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031162637.png" alt=""></p></li><li><p>给PC配置同一网段的IP，并测试连接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031163032.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031163151.png" alt=""></p></li></ol><h2 id="远程控制路由器"><a href="#远程控制路由器" class="headerlink" title="远程控制路由器"></a>远程控制路由器</h2><h3 id="telnet连接"><a href="#telnet连接" class="headerlink" title="telnet连接"></a>telnet连接</h3><ol><li><p>进入路由器的管理终端，切换到全局配置模式，输入命令：<code>line vty 0 4</code> （<code>0</code>代表接口号，<code>4</code>代表同时远程控制路由器的设备数量）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031165614.png" alt=""></p></li><li><p>设置成功后，用PC远程登陆<code>telnet 10.0.0.154</code> ，在没有设置<strong>特权密码</strong>时，只能登陆<strong>用户模式</strong>，特权模式及其他模式无法进入</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031170901.png" alt=""></p></li><li><p>测试远程命令，修改路由器名称<code>hostname sw0-888</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031171506.png" alt=""></p></li></ol><h3 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h3><ol><li><p>打开路由器的管理终端，进入<strong>全局配置模式</strong>，开启虚拟终端<code>line vty 0 4</code>（路由器默认开启telnet服务），所以需要自己修改服务类型：<code>transport input ssh</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031173124.png" alt=""></p></li><li><p>设置远程登陆密码（<code>telnet</code>连接时已设置过<strong>远程登陆密码</strong>和<strong>特权密码</strong>了，并保存了配置，所以此时可省略；若没设置过密码，必须重新设置）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031174738.png" alt=""></p></li><li><p>在<strong>全局配置模式</strong>下，给路由器配置任意域名（重要操作）<code>ip domain-name + 任意域名</code> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031173438.png" alt=""></p></li><li><p>生成ssh密钥<code>crypto key generate rsa</code> ，并远程登陆（登陆命令仅限于此模拟软件）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031174457.png" alt=""></p></li><li><p>真实路由器ssh连接命令：<code>ssh 用户名@ + IP</code> </p></li></ol><h3 id="telnet与ssh同时连接"><a href="#telnet与ssh同时连接" class="headerlink" title="telnet与ssh同时连接"></a>telnet与ssh同时连接</h3><ol><li><p>只需在路由器的管理终端中，进入<strong>虚拟终端</strong>，设置服务类型为<code>all</code>即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031175931.png" alt=""></p></li><li><p>在PC中，用telnet或者ssh都可以连接了</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031180402.png" alt=""></p></li></ol><h3 id="添加身份验证"><a href="#添加身份验证" class="headerlink" title="添加身份验证"></a>添加身份验证</h3><ol><li><p>作用：每次远程登陆，都需要输入<strong>账户</strong>和<strong>密码</strong>才能进入，进入后的各种操作，都会记录到日志中，方便追究问题</p></li><li><p>对上面的连接进行补充</p></li><li><p>进入路由器的管理终端，在全局配置模式下，添加账户与密码列表<code>username + 账户 password + 密码</code>，然后进入<strong>虚拟终端配置模式</strong>开启本地身份验证</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201031193328.png" alt=""></p></li></ol><h1 id="六、交换机与路由器组合使用"><a href="#六、交换机与路由器组合使用" class="headerlink" title="六、交换机与路由器组合使用"></a>六、交换机与路由器组合使用</h1><ul><li><p>最终效果图</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101171106.png" alt=""></p></li></ul><h2 id="连通整个网络"><a href="#连通整个网络" class="headerlink" title="连通整个网络"></a>连通整个网络</h2><ol><li><p>进入路由器的管理终端，开启两个网络接口<code>fa0/0</code>和<code>fa0/1</code>，并添加两个网关<code>10.0.0.254</code>和<code>20.0.0.254</code> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101171911.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101172159.png" alt=""></p></li><li><p>打开所有的PC，配置对应的IP、子网掩码、网关（配置网关可跨网段访问设备）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101172536.png" alt=""></p></li><li><p>检查网络环境，确认两个网段之间可互通</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101173011.png" alt=""></p></li></ol><h2 id="远程控制路由器-1"><a href="#远程控制路由器-1" class="headerlink" title="远程控制路由器"></a>远程控制路由器</h2><ul><li><p>进入路由器的管理终端，添加路由器的本地账户，开启虚拟终端，开启telnet服务，开启身份验证，添加特权密码</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101175826.png" alt=""></p></li></ul><h2 id="远程控制交换机一"><a href="#远程控制交换机一" class="headerlink" title="远程控制交换机一"></a>远程控制交换机一</h2><ol><li><p>进入交换机一的虚拟主机的管理终端，配置<code>IP</code>和<code>子网掩码</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101181301.png" alt=""></p></li><li><p>进入交换机的管理终端，添加本地账户和密码，开启telnet服务，开启身份验证，设置特权密码，验证远程连接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101182332.png" alt=""></p></li></ol><h2 id="远程控制交换机二"><a href="#远程控制交换机二" class="headerlink" title="远程控制交换机二"></a>远程控制交换机二</h2><ol><li><p>进入交换机二的管理终端，设置特权密码，添加本地账户密码；进入远程连接虚拟终端，开启远程服务，开启本地身份验证；重命名交换机</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101183828.png" alt=""></p></li><li><p>进入交换机二的<strong>虚拟主机</strong>的管理终端，配置<code>IP</code>和<code>子网掩码</code>，并开启此接口，进入全局配置模式，添加网关</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101190137.png" alt=""></p></li><li><p>使用PC机<code>10.0.0.1</code>，远程登陆交换机二</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/056%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/20201101190535.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据链路层 </tag>
            
            <tag> 交换机 </tag>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有趣的Cisco Packet Tracer</title>
      <link href="/posts/26eea337/"/>
      <url>/posts/26eea337/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><ul><li><code>Cisco Packet Tracer</code> 是由Cisco公司发布的一个辅助学习工具，为学习思科网络课程的初学者去设计、配置、排除网络故障提供了<strong>网络模拟环境</strong>。用户可以在软件的图形用户界面上直接使用拖曳方法建立<strong>网络拓扑</strong>，并可提供<strong>数据包</strong>在网络中行进的详细处理过程，观察网络实时运行情况。可以学习<strong>IOS的配置</strong>、锻炼故障排查能力。</li></ul><h1 id="二、功能简介"><a href="#二、功能简介" class="headerlink" title="二、功能简介"></a>二、功能简介</h1><h2 id="添加与删除设备"><a href="#添加与删除设备" class="headerlink" title="添加与删除设备"></a>添加与删除设备</h2><ol><li><p>打开软件，选择<strong>设备栏</strong>中的指定<strong>设备类型</strong>，然后选择<strong>某种设备</strong>，最后直接拖拽到空白区域即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163059.png" alt=""></p></li><li><p>在右侧<strong>工具栏</strong>，点击<strong>选择工具</strong>，选中<strong>设备</strong>，可自定义设备位置</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163329.png" alt=""></p></li></ol><h2 id="连接设备"><a href="#连接设备" class="headerlink" title="连接设备"></a>连接设备</h2><ol><li><p>多个设备之间，可用不同的线缆连接，实现互相通信</p></li><li><p>选择指定线缆 &gt;&gt; 点击设备 &gt;&gt; 选择插口，再次点击<code>2处</code>的线缆，可<strong>取消选择</strong>的线缆</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163407.png" alt=""></p></li><li><p>一端的插口接好后，用鼠标将线缆移动到另外一台设备上，选择插口；至此，两台设备已相互连通</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163440.png" alt=""></p></li><li><p>重复以上操作，连接多台设备，组成一个简单的<strong>内网环境</strong>，插口处的<strong>橙色</strong>代表<strong>未连通</strong>，等待一会变为<strong>绿色</strong>（模拟真实环境的延迟状态），代表相互<strong>连通</strong> ，连接后的设备也可自定义位置</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163458.png" alt=""></p></li></ol><h2 id="显示设备状态"><a href="#显示设备状态" class="headerlink" title="显示设备状态"></a>显示设备状态</h2><ul><li><p>自定义显示的内容</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163523.png" alt=""></p></li></ul><h2 id="给设备添加模块"><a href="#给设备添加模块" class="headerlink" title="给设备添加模块"></a>给设备添加模块</h2><ol><li><p>当路由器插口不够用时，可以额外再添加插口，作为另外一个模块</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164500.png" alt=""></p></li><li><p>点击路由器，选择要添加的模块（此时需要百兆插口），拖拽到设备的额外添加区域即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164520.png" alt=""></p></li><li><p>选择<strong>线缆</strong>，点击<strong>路由器</strong>设备，此时的插口处有<strong>4个百兆接口</strong>，完全够用了</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164534.png" alt=""></p></li><li><p>成功完成连接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164551.png" alt=""></p></li></ol><h1 id="三、模拟网络服务"><a href="#三、模拟网络服务" class="headerlink" title="三、模拟网络服务"></a>三、模拟网络服务</h1><h2 id="模拟配置静态IP"><a href="#模拟配置静态IP" class="headerlink" title="模拟配置静态IP"></a>模拟配置静态IP</h2><ol><li><p>点击服务器设备，选择<code>Desktop</code>，再选择IP图标，给服务器配置静态IP：<code>10.0.0.1</code>，完成后关闭窗口即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163545.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163656.png" alt=""></p></li><li><p>点击PC设备，同上一步操作，配置静态IP：<code>10.0.0.2</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163729.png" alt=""></p></li><li><p>点击PC设备，在<code>Desktop</code>窗口中，选择命令窗口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163811.png" alt=""></p></li></ol><ol start="4"><li><p>执行终端命令，模拟网络状态</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163838.png" alt=""></p></li></ol><h2 id="模拟web服务"><a href="#模拟web服务" class="headerlink" title="模拟web服务"></a>模拟web服务</h2><ol><li><p>点击服务器设备，选择<code>services</code>选项，选择<code>HTTP</code>服务，</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163900.png" alt=""></p></li><li><p>点击<code>edit</code>按钮，编辑首页内容</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163918.png" alt=""></p></li><li><p>打开PC设备，选择浏览器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163934.png" alt=""></p></li><li><p>在浏览器窗口输入网站地址：<code>10.0.0.1</code>，可访问模拟网站，<code>https</code>请求也可以</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029163953.png" alt=""></p></li></ol><h2 id="模拟DNS服务"><a href="#模拟DNS服务" class="headerlink" title="模拟DNS服务"></a>模拟DNS服务</h2><ol><li><p>点击服务器设备，选择<code>services</code>选项，选择<code>DNS</code>服务，添加完整域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164223.png" alt=""></p></li><li><p>点击PC设备，在<code>Desktop</code>选项中，选择<code>IP</code>窗口，配置<code>DNS</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164257.png" alt=""></p></li><li><p>点击PC设备，在<code>Desktop</code>选项中，打开<code>web浏览器</code>，输入网站的完整域名，实现域名解析功能</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164317.png" alt=""></p></li></ol><h2 id="模拟DHCP服务"><a href="#模拟DHCP服务" class="headerlink" title="模拟DHCP服务"></a>模拟DHCP服务</h2><ol><li><p>点击服务器设备，选择<code>services</code>选项，再选择<code>DHCP</code>服务，配置作用域，注意选择<code>on</code>开启此服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164037.png" alt=""></p></li><li><p>点击PC设备，在<code>Desktop</code>选项中打开<code>IP</code>窗口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164347.png" alt=""></p></li><li><p>选择<code>DHCP</code>选项，等待一小会儿（模拟真实环境的延迟状态）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/055%E6%9C%89%E8%B6%A3%E7%9A%84Cisco-Packet-Tracer/20201029164437.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 思科 </tag>
            
            <tag> Cisco Packet Tracer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSI模型与TCP/IP模型</title>
      <link href="/posts/1ed6d356/"/>
      <url>/posts/1ed6d356/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、基础架构"><a href="#一、基础架构" class="headerlink" title="一、基础架构"></a>一、基础架构</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027134228.png" alt=""></p><h1 id="二、分层模型"><a href="#二、分层模型" class="headerlink" title="二、分层模型"></a>二、分层模型</h1><h2 id="分层思想"><a href="#分层思想" class="headerlink" title="分层思想"></a>分层思想</h2><ol><li><p>通信需求：定义协议标准</p></li><li><p>完成每件事需要的协议太多怎么办？</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027135008.png" alt=""></p></li><li><p>下层为上层提供服务，每一层的工作是独立的，最上层的是小女孩。</p></li><li><p>将复杂的流程分解为几个功能相对单一的子过程</p><ul><li>整个流程更加清晰，复杂流程简单化</li><li>更容易发现问题并针对性的解决问题</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027135231.png" alt=""></p></li><li><p>同层使用相同协议，每一层工作是相互独立的，下层为上层提供服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027135435.png" alt=""></p></li></ol><h2 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h2><ol><li><p>OSI模型诞生时间</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027141256.jpg" alt=""></p></li><li><p>OSI七层参考模型</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027141405.png" alt=""></p></li><li><p>各个层的作用</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027142240.png" alt=""></p></li></ol><h2 id="TCP-IP协议簇"><a href="#TCP-IP协议簇" class="headerlink" title="TCP/IP协议簇"></a>TCP/IP协议簇</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027142414.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027143750.png" alt=""></p><ul><li>各层的协议</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027143851.png" alt=""></p><ul><li>各层间的通信</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027144125.png" alt=""></p><h2 id="OSI模型对比"><a href="#OSI模型对比" class="headerlink" title="OSI模型对比"></a>OSI模型对比</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027142643.png" alt=""></p><h1 id="三、数据传输过程"><a href="#三、数据传输过程" class="headerlink" title="三、数据传输过程"></a>三、数据传输过程</h1><h2 id="数据封装过程"><a href="#数据封装过程" class="headerlink" title="数据封装过程"></a>数据封装过程</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027142752.png" alt=""></p><h2 id="数据解封装过程"><a href="#数据解封装过程" class="headerlink" title="数据解封装过程"></a>数据解封装过程</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/054OSI%E6%A8%A1%E5%9E%8B%E4%B8%8ETCP-IP%E6%A8%A1%E5%9E%8B/20201027143544.png" alt=""></p><h1 id="四、物理层相关知识"><a href="#四、物理层相关知识" class="headerlink" title="四、物理层相关知识"></a>四、物理层相关知识</h1><ol><li><p>组成：网线/光纤/空气</p></li><li><p>单位换算：比特bit</p><ul><li>8bit = 1Byte</li><li>1024B = 1KB</li><li>1024KB = 1MB</li><li>1024MB = 1GB</li><li>1024GB = 1TB</li><li>1024TB = 1PB</li></ul></li><li><p>传输信号：</p><ul><li>模拟信号：传输距离较远，经过<strong>放大器</strong>二次传输后，噪音也随之增大，相对不稳定</li><li>数字信号：传输距离较近，经过<strong>中继器</strong>二次传输后，会将之前的信号还原，再次释放。相对较稳定</li><li>光信号：通过光信号，可高速传递信号，相对稳定</li></ul></li><li><p>光纤类型:</p><ul><li>单模光纤：一般是黄色</li><li>多模光纤：一般是橙色/蓝色</li></ul></li><li><p>网线/双绞线：</p><ul><li>5类双绞线</li><li>超5类双绞线</li><li>6类 7类 chegn</li><li>跳线：比较短的网线</li></ul></li><li><p>制作标准：（颜色线顺序，加粗不变）</p><p>T568A：白绿、绿、白橙、<strong>蓝、白、</strong>橙、<strong>白棕、棕</strong></p><p>T568B：白橙、橙、白绿、<strong>蓝、白、</strong>绿、<strong>白棕、棕</strong></p></li><li><p>网线的用途分类：具有三层功能以上的设备为同种设备</p><ul><li>交叉线：一端为 A，一端为 B；同种设备间使用（一头发一头收，路由器→路由器）</li><li>直通线：两端都是 A 或 B；异种设备间使用</li><li>全反线：一端为 A，另一端为反 A，也称 console 线，用于配置企业路由器/交换机</li></ul></li><li><p>关于交换机的接口：</p><table><thead><tr><th align="left">接口名</th><th align="left">速率</th><th align="left">简写</th></tr></thead><tbody><tr><td align="left">Ethernet</td><td align="left">10Mb/s</td><td align="left">E</td></tr><tr><td align="left">FastEthernet</td><td align="left">100Mb/s</td><td align="left">F</td></tr><tr><td align="left">GigabitEthernet</td><td align="left">1000Mb/s</td><td align="left">G</td></tr><tr><td align="left">TenGigabitEthernet</td><td align="left">10000Mb/s</td><td align="left">TG</td></tr></tbody></table><p>例如 <code>Ethernet0/3</code> 中，<code>0</code> 是<strong>模块编号</strong>，<code>3</code> 是该模块中的<strong>接口编号</strong></p></li><li><p>家里一般用的<strong>路由器</strong>其实是<strong>交换机</strong>和<strong>路由器</strong>的杂交产品，真正的名字是<strong>三层交换机</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OSI </tag>
            
            <tag> TCP/IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扫描与爆破</title>
      <link href="/posts/42742efe/"/>
      <url>/posts/42742efe/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="常用端口及相关服务"><a href="#常用端口及相关服务" class="headerlink" title="常用端口及相关服务"></a>常用端口及相关服务</h1><table><thead><tr><th align="center">端口号</th><th align="center">服务名称</th></tr></thead><tbody><tr><td align="center">21</td><td align="center">FTP</td></tr><tr><td align="center">22</td><td align="center">SSH（比 Telnet 更安全一点）</td></tr><tr><td align="center">23</td><td align="center">Telnet</td></tr><tr><td align="center">25</td><td align="center">SMTP（邮件发送服务）</td></tr><tr><td align="center">80</td><td align="center">HTTTP</td></tr><tr><td align="center">443</td><td align="center">HTTPS</td></tr><tr><td align="center">445</td><td align="center">SMB（文件共享服务）</td></tr><tr><td align="center">1433</td><td align="center">SQL Server</td></tr><tr><td align="center">1521</td><td align="center">Oracle</td></tr><tr><td align="center">3306</td><td align="center">MySQL</td></tr><tr><td align="center">3389</td><td align="center">RDP（windows远程连接）</td></tr></tbody></table><h1 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h1><h2 id="nmap扫描器"><a href="#nmap扫描器" class="headerlink" title="nmap扫描器"></a>nmap扫描器</h2><table><thead><tr><th align="center">命令</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">-sP</td><td align="center">ping 扫描</td></tr><tr><td align="center">-p</td><td align="center">指定端口范围</td></tr><tr><td align="center">-sV</td><td align="center">服务版本探测</td></tr><tr><td align="center">-O（大写）</td><td align="center">启用操作系统探测</td></tr><tr><td align="center">-A</td><td align="center">全面扫描</td></tr><tr><td align="center">-oN</td><td align="center">扫描结果保存为 txt</td></tr><tr><td align="center">-v</td><td align="center">显示扫描进度</td></tr></tbody></table><ul><li>示例：<ol><li><code>nmap -sP 10.1.1.1/24</code> ：扫描网段在线主机 <code>*/24</code>为网段参数，即扫描<code>10.1.1.X</code>网段</li><li><code>nmap -p 21,23,3389 10.1.1.1</code>： 扫描主机开放的指定端口（<code>1-65535</code>全端口扫描）加上 <code>-sV</code> 可以查看服务版本，</li><li><code>namp -A 10.0.0.1 -O -oN D:\result.txt</code>： 全面扫描，<code>-O</code>查看系统版本，<code>-oN</code>保存扫描结果到指定位置</li></ol></li></ul><h2 id="hydra爆破工具（九头蛇）"><a href="#hydra爆破工具（九头蛇）" class="headerlink" title="hydra爆破工具（九头蛇）"></a>hydra爆破工具（九头蛇）</h2><ol><li>参数：<ul><li><code>-vV</code>：显示执行过程</li><li><code>-L</code>：后面添加账户字典</li><li><code>-P</code>：后面添加密码字典</li><li><code>-l</code>：后面添加账户</li><li><code>-p</code>：后面添加密码</li></ul></li><li>格式：<ul><li><code>hydra IP -l 用户名 -p 密码 服务</code> （指定账户密码爆破）</li><li><code>hydra IP -L 用户名字典 -P 密码字典 服务</code> （指定账户密码字典进行爆破）</li></ul></li><li>示例：<ul><li><code>hydra 10.0.0.1 -L user.txt -P pass.txt telnet -vV</code> （爆破telnet服务，并显示过程）</li><li><code>hydra 10.0.0.1 -L user.txt -P pass.txt rdp</code> （爆破windows远程连接）</li><li><code>hydra 10.0.0.1 -L user.txt -P pass.txt ftp</code> （爆破文件传输）</li><li><code>hydra 10.0.0.1 -L user.txt -P pass.txt smb</code> （爆破文件共享）</li></ul></li></ol><h2 id="本地爆破"><a href="#本地爆破" class="headerlink" title="本地爆破"></a>本地爆破</h2><ol><li><p>利用<a href="https://wlet.gitee.io/posts/18641619/" target="_blank" rel="noopener">5次shift粘滞键漏洞</a> </p></li><li><p>getpass工具爆破：</p><ul><li><p>原理：登陆系统后，系统账户密码以明文形式存储在<strong>内存</strong>中，利用此工具可获得账户密码</p></li><li><p>如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026173936.png" alt=""></p></li></ul></li><li><p>pwdump工具爆破：</p><ul><li><p>原理：系统的账户密码以<strong>hash值</strong>的形式存储于指定的文件<strong>SAM</strong>中，可用此工具获取hash值，进行<strong>撞库</strong>爆破</p></li><li><p>Windows账户密码存储位置（绝对路径）：<code>C:\windows\system32\config\SAM</code> （SAM文件需用指定的文件才能打开，如<code>pwdump</code>等工具）</p></li><li><p>获取hash密码步骤：</p><ul><li><p>第一步：使用管理员权限打开cmd窗口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026174320.png" alt=""></p></li><li><p>第二步：打开DOS窗口，切换路径到工具存放的路径下，并打开工具</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026174627.png" alt=""></p></li><li><p>第三步：进入工具内部，输入命令<code>QuarksPwDump.exe -dhl</code>，抓取hash值</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026175216.png" alt=""></p></li></ul></li></ul></li><li><p>SAMInside工具撞库破解hash</p><ul><li><p>第一步：将获取到的hash值，保存在指定文件中，如：result.txt</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026175806.png" alt=""></p></li><li><p>第二步：打开SAMInside工具的根目录，设置密码字典</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026180302.png" alt=""></p></li><li><p>第三步：打开工具，选择hash文件，开始撞库爆破</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026180641.png" alt=""></p></li><li><p>第四步：查看撞库结果</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/053%E6%89%AB%E6%8F%8F%E4%B8%8E%E7%88%86%E7%A0%B4/20201026180813.png" alt=""></p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扫描器 </tag>
            
            <tag> 爆破工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KPI实验</title>
      <link href="/posts/fcaf070e/"/>
      <url>/posts/fcaf070e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、PKI概述"><a href="#一、PKI概述" class="headerlink" title="一、PKI概述"></a>一、PKI概述</h1><ol><li>名称：<code>Public Key Infrastructure</code>（公钥基础设施）</li><li>作用：通过加密技术和数字签名保证信息的安全</li><li>组成：<strong>公钥加密技术</strong>、<strong>数字证书</strong>、<strong>CA</strong>、<strong>RA</strong></li><li>信息安全三要素：<strong>机密性</strong>、<strong>完整性</strong>、<strong>身份验证</strong>/<strong>操作的不可否认性</strong></li><li>那些安全领域用到PKI：<ul><li>SSL/HTTPS</li><li>IPsecVPN</li><li>部分远程访问VPN</li></ul></li></ol><h1 id="二、公钥加密技术"><a href="#二、公钥加密技术" class="headerlink" title="二、公钥加密技术"></a>二、公钥加密技术</h1><ol><li>作用：实现对信息加密、数字签名等安全保障</li><li>加密算法，例如：x+5=y（对称加密算法）<ul><li>x：原数据/原文</li><li>y：密文</li><li>5：key/密钥</li></ul></li><li>对称加密算法：加解密的密钥一致（DES、3DES、AES）</li><li>非对称加密算法：（RSA、DH）<ul><li>通信双方各自产生一对公私钥</li><li>双方各自交换公钥</li><li>公钥与私钥为互相加解密关系</li><li>公私钥不可互相逆推</li></ul></li><li>HASH算法：MD5、SHA（验证数据的完整性）<ul><li>HASH值可逆吗？不可逆</li><li>HASH=摘要</li></ul></li></ol><h1 id="三、数字签名"><a href="#三、数字签名" class="headerlink" title="三、数字签名"></a>三、数字签名</h1><ul><li>作用：用自己的私钥对摘要进行加密，得到的密文就是数字签名</li></ul><h1 id="四、CA证书"><a href="#四、CA证书" class="headerlink" title="四、CA证书"></a>四、CA证书</h1><ol><li>证书用于保证公钥的合法性</li><li>证书格式遵循X.509标准</li><li>数字证书包含信息：<ul><li>使用者的公钥值<ul><li>使用者标识信息（如名称和电子邮件地址）</li><li>有效期（证书的有效时间)</li><li>颁发者标识信息</li><li>颁发者的数字签名</li></ul></li></ul><ol start="4"><li>数字证书由权威公正的第三方机构即CA签发</li><li>CA是权威证书颁发机构，为了公证<strong>公钥</strong>的合法性<h1 id="五、PKI实验"><a href="#五、PKI实验" class="headerlink" title="五、PKI实验"></a>五、PKI实验</h1></li></ol></li></ol><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><ol><li>服务器：（win2008）<ul><li>IP：10.0.0.1</li><li>服务：DNS、web、SSL</li></ul></li><li>客户机：（winXP）<ul><li>IP：10.0.0.2</li><li>DNS：10.0.0.1（与服务器互通）</li></ul></li></ol><h2 id="安装DNS与web"><a href="#安装DNS与web" class="headerlink" title="安装DNS与web"></a>安装DNS与web</h2><ol><li><p>打开服务器win2008，配置网卡、IP、DNS</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023154934.png" alt=""></p></li><li><p>打开win2008的<strong>服务器管理器</strong>，选择DNS、web服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023155306.png" alt=""></p></li><li><p>下一步，勾选<strong>应用程序开发</strong>，之后安装、等待。。。</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023155445.png" alt=""></p></li></ol><h2 id="配置DNS"><a href="#配置DNS" class="headerlink" title="配置DNS"></a>配置DNS</h2><ol><li><p>打开DNS服务器，新建主区域，并添加主机</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023160019.png" alt=""></p></li></ol><h2 id="新建网站"><a href="#新建网站" class="headerlink" title="新建网站"></a>新建网站</h2><ol><li><p>打开web服务器，<strong>新建网站</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023160521.png" alt=""></p></li><li><p>打开<strong>默认文档</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023160709.png" alt=""></p></li><li><p>添加网站默认首页</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023160846.png" alt=""></p></li><li><p>客户机winXP验证网站</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023161053.png" alt=""></p></li></ol><h2 id="服务器安装证书服务"><a href="#服务器安装证书服务" class="headerlink" title="服务器安装证书服务"></a>服务器安装证书服务</h2><ol><li><p><strong>SSL站点</strong>默认安装到<strong>默认网站</strong>中</p></li><li><p>打开win2008的<strong>服务器管理器</strong>，选择<strong>证书服务</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023161412.png" alt=""></p></li><li><p>下一步后，选择指定的服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023161513.png" alt=""></p></li><li><p>下一步到，自定义<strong>CA名称</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023161712.png" alt=""></p></li></ol><h2 id="申请服务器证书（根证书）"><a href="#申请服务器证书（根证书）" class="headerlink" title="申请服务器证书（根证书）"></a>申请服务器证书（根证书）</h2><ol><li><p>打开web管理器，打开<strong>服务器证书</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023164738.png" alt=""></p></li><li><p>创建证书申请</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023165001.png" alt=""></p></li><li><p>自定义证书申请的文件路径</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023165150.png" alt=""></p></li><li><p>复制证书申请的加密内容</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023165310.png" alt=""></p></li><li><p>打开服务器的IE浏览器，访问证书申请站点：<code>10.0.0.1\certsrv</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023165625.png" alt=""></p></li><li><p>降低IE浏览器的安全等级，关闭不必要的弹窗（可不关闭）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023165901.png" alt=""></p></li><li><p>进入证书申请站点，申请证书 &gt;&gt; </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170058.png" alt=""></p></li><li><p>选择高级证书申请</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170220.png" alt=""></p></li><li><p>使用 base64 编码的 CMC 或 PKCS #10 文件提交 一个证书申请，或使用 base64 编码的 PKCS #7 文件续订证书申请。 </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170337.png" alt=""></p></li><li><p>粘贴证书申请内容，并提交</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170502.png" alt=""></p></li><li><p>提交成功后的提示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170554.png" alt=""></p></li></ol><h2 id="服务器颁发根证书"><a href="#服务器颁发根证书" class="headerlink" title="服务器颁发根证书"></a>服务器颁发根证书</h2><ol><li><p>在<strong>管理工具</strong>中，打开<strong>证书颁发机构</strong>，颁发刚才申请的证书</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023170836.png" alt=""></p></li></ol><h2 id="服务器安装根证书"><a href="#服务器安装根证书" class="headerlink" title="服务器安装根证书"></a>服务器安装根证书</h2><ol><li><p>先关闭服务器的IE浏览器，再打开IE浏览器，再次登陆<code>10.0.0.1\certsrv</code>，下载证书</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023171113.png" alt=""></p></li><li><p>下载证书，并保存到桌面</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023171206.png" alt=""></p></li><li><p>打开web管理器，完成证书申请</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023171710.png" alt=""></p></li></ol><h2 id="网站设置SSL证书"><a href="#网站设置SSL证书" class="headerlink" title="网站设置SSL证书"></a>网站设置SSL证书</h2><ol><li><p>选择指定的网站，编辑绑定，添加证书</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023172142.png" alt=""></p></li><li><p>证书添加后，客户端浏览器可以用<code>http</code>或者<code>https</code>访问此网站，<code>https</code>访问会有禁告提示信息，因为浏览器没有安装<strong>根证书</strong>，如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023184620.png" alt=""></p></li><li><p>确认后就可以访问网站，因为此时的网站没有对浏览器做限制</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023184917.png" alt=""></p></li></ol><h2 id="浏览器安装根证书"><a href="#浏览器安装根证书" class="headerlink" title="浏览器安装根证书"></a>浏览器安装根证书</h2><ol><li><p>给客户机的浏览器安装证书，先在客户机的浏览器上访问证书网站，进行下载</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023185244.png" alt=""></p></li><li><p>选择下载，并保存到本地桌面</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023185415.png" alt=""></p></li><li><p>将刚才保存的证书，导入到客户机浏览器中</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023185631.png" alt=""></p></li><li><p>证书导入后，之后再访问浏览器，就不会有错误提示了，可以正常访问了</p></li></ol><h2 id="SSL设置"><a href="#SSL设置" class="headerlink" title="SSL设置"></a>SSL设置</h2><ol><li><p>打开web管理器，打开指定网站的<strong>SSL设置</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023190317.png" alt=""></p></li><li><p>开启SSL设置，并设置为<strong>必需</strong>，之后再访问网站，就需要添加个人证书进行<strong>验证</strong>，否则禁止访问，之前的证书为<strong>根证书</strong>，其余设置可不用安装个人证书访问</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023190845.png" alt=""></p></li><li><p>未添加个人证书，禁止访问</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023191036.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023191111.png" alt=""></p></li></ol><h2 id="浏览器申请个人证书"><a href="#浏览器申请个人证书" class="headerlink" title="浏览器申请个人证书"></a>浏览器申请个人证书</h2><ol><li><p>客户机浏览器访问证书站点，申请证书</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023191542.png" alt=""></p></li><li><p>选择<strong>Web 浏览器证书</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023191655.png" alt=""></p></li><li><p>填写相关信息，提交</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023191830.png" alt=""></p></li></ol><h2 id="服务器颁发个人证书"><a href="#服务器颁发个人证书" class="headerlink" title="服务器颁发个人证书"></a>服务器颁发个人证书</h2><ol><li><p>提交成功后，打开win2008服务器的<strong>证书颁发机构</strong>，进行颁发</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023192102.png" alt=""></p></li></ol><h2 id="安装个人证书"><a href="#安装个人证书" class="headerlink" title="安装个人证书"></a>安装个人证书</h2><ol><li><p>先关闭客户机的浏览器，再打开，继续访问证书站点，选择<strong>查看挂起的证书申请的状态</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023192304.png" alt=""></p></li><li><p>选择<strong>安装证书</strong>，安装成功后，就可以用刚才申请的证书访问网站了</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023192513.png" alt=""></p></li><li><p>先关闭客户机浏览器，再打开访问网站<code>https:\\www.let.com</code>，选择个人证书，就可以成功访问</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023192806.png" alt=""></p></li><li><p>开启<strong>SSL设置</strong>的<strong>必需</strong>选项后，只能用<code>https</code>请求，<code>http</code>请求则会被禁止访问</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/052PKI%E5%AE%9E%E9%AA%8C/20201023192953.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PKI </tag>
            
            <tag> SSL </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用445端口入侵服务器实验</title>
      <link href="/posts/437ce8b2/"/>
      <url>/posts/437ce8b2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、准备实验环境"><a href="#一、准备实验环境" class="headerlink" title="一、准备实验环境"></a>一、准备实验环境</h1><ol><li>服务器（win2003）<ul><li>IP：10.0.0.2</li><li>服务：<a href="https://wlet.gitee.io/posts/c69b937b/" target="_blank" rel="noopener">文件共享服务</a></li><li>关闭防火墙</li></ul></li><li>客户机（win7）<ul><li>IP：10.0.0.8</li><li>ping 10.0.0.2（互通）</li></ul></li></ol><h1 id="二、扫描端口"><a href="#二、扫描端口" class="headerlink" title="二、扫描端口"></a>二、扫描端口</h1><ol><li><p>运行端口扫描工具，确认服务器开启445端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022172500.png" alt=""></p></li></ol><h1 id="三、爆破服务器账户密码"><a href="#三、爆破服务器账户密码" class="headerlink" title="三、爆破服务器账户密码"></a>三、爆破服务器账户密码</h1><ol><li><p>原理：<code>net use \\10.0.0.2\IPC$ 密码 /user:账户</code> （利用此命令不断地访问服务器）</p></li><li><p>运行445端口爆破工具，设置对应的账户密码字典，进行爆破</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022173938.png" alt=""></p></li></ol><h1 id="四、连接服务器的共享空链接"><a href="#四、连接服务器的共享空链接" class="headerlink" title="四、连接服务器的共享空链接"></a>四、连接服务器的共享空链接</h1><ol><li><p>共享空链接：<code>IPC$</code> （<code>IPC$</code>作用：administrator连接后可任意操作服务器）</p></li><li><p>客户机连接命令：<code>net use \\10.0.0.2\IPC$ 123.com /user:administrator</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022190247.png" alt=""></p></li></ol><h1 id="五、制作木马安装程序"><a href="#五、制作木马安装程序" class="headerlink" title="五、制作木马安装程序"></a>五、制作木马安装程序</h1><ol><li><p>作用：远程控制服务器（服务器更改密码也没用，除非删除此木马）</p></li><li><p>打开木马制作软件：<code>灰鸽子</code>，输入对应的设置，自动生成木马安装程序</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022192138.png" alt=""></p></li><li><p>木马安装路径</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022192235.png" alt=""></p></li></ol><h1 id="六、上传木马安装程序"><a href="#六、上传木马安装程序" class="headerlink" title="六、上传木马安装程序"></a>六、上传木马安装程序</h1><ol><li><p>之前已经用<strong>空链接</strong>（IPC$）连接了服务器，现在直接用命令上传即可：<code>copy D:\MuMa.exe \\10.0.0.2\C$\windows\</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022193205.png" alt=""></p></li></ol><h1 id="七、运行木马安装程序"><a href="#七、运行木马安装程序" class="headerlink" title="七、运行木马安装程序"></a>七、运行木马安装程序</h1><ol><li><p>说明：使用定时执行命令，给远程服务器设置定时执行任务</p></li><li><p>查看本机当前时间：<code>time</code></p></li><li><p>查看远程服务器当前时间：<code>net time \\10.0.0.2</code></p></li><li><p>设置定时执行任务命令：<code>at \\10.0.0.2 19:45 &quot;C:windows\MuMa.exe&quot;</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022195515.png" alt=""></p></li><li><p>查看所有的远程定时任务：<code>at \\10.0.0.2</code> （若任务不存在，代表已经执行了）</p></li></ol><h1 id="八、远程控制木马"><a href="#八、远程控制木马" class="headerlink" title="八、远程控制木马"></a>八、远程控制木马</h1><ol><li><p>当木马被成功安装后，客户机的木马控制程序就会受到响应</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022200154.png" alt=""></p></li><li><p>远程桌面控制</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022200614.png" alt=""></p></li><li><p>远程控制<code>telnet</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022200851.png" alt=""></p></li><li><p>木马在服务器上的绝对路径</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/051%E5%88%A9%E7%94%A8445%E7%AB%AF%E5%8F%A3%E5%85%A5%E4%BE%B5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E9%AA%8C/20201022201505.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件共享 </tag>
            
            <tag> 木马 </tag>
            
            <tag> 445 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域环境实验</title>
      <link href="/posts/ca8f053a/"/>
      <url>/posts/ca8f053a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、域环境实验流程图"><a href="#一、域环境实验流程图" class="headerlink" title="一、域环境实验流程图"></a>一、域环境实验流程图</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021145903.jpg" alt=""></p><h1 id="二、配置win2008域服务器"><a href="#二、配置win2008域服务器" class="headerlink" title="二、配置win2008域服务器"></a>二、配置win2008域服务器</h1><h2 id="配置网卡与静态IP"><a href="#配置网卡与静态IP" class="headerlink" title="配置网卡与静态IP"></a>配置网卡与静态IP</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021152954.png" alt=""></p><h2 id="安装活动目录"><a href="#安装活动目录" class="headerlink" title="安装活动目录"></a>安装活动目录</h2><p>详情<a href="https://wlet.gitee.io/posts/98b1c73d/" target="_blank" rel="noopener">点击进入</a> </p><h2 id="创建域用户和组"><a href="#创建域用户和组" class="headerlink" title="创建域用户和组"></a>创建域用户和组</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021160242.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021160407.png" alt=""></p><h1 id="三、配置win2003服务器"><a href="#三、配置win2003服务器" class="headerlink" title="三、配置win2003服务器"></a>三、配置win2003服务器</h1><ol><li><p>配置网卡（与域服务器相同）、IP（同一网段）、DNS服务器（与域服务器互通）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021154147.png" alt=""></p></li><li><p>更改计算机名称为<code>share</code>，并将此计算机加入域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021161028.png" alt=""></p></li><li><p>打开与服务器的活动目录，查看成员机<code>share</code>是否添加成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021161309.png" alt=""></p></li><li><p>查看成员机<code>share</code>的工作状态（必须使用域管理员登陆）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021161702.png" alt=""></p></li><li><p>安装<a href="https://wlet.gitee.io/posts/5c4f24e7/" target="_blank" rel="noopener">web服务器</a>与<a href="https://wlet.gitee.io/posts/6911dc09/" target="_blank" rel="noopener">DHCP服务器</a> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021162008.png" alt=""></p></li><li><p>配置DHCP服务器：打开DHCP服务器，<code>右键</code> &gt;&gt; <code>授权</code> &gt;&gt; <code>F5</code>（刷新），刷新到图标为绿色，代表服务器已开启</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021162930.png" alt=""></p></li><li><p>新建作用域（注意添加DNS服务器：<code>10.0.0.1</code>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021163305.png" alt=""></p></li><li><p>创建文件共享服务（等价于FTP服务器）：设置<a href="https://wlet.gitee.io/posts/c69b937b/" target="_blank" rel="noopener">文件共享权限</a> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021163858.png" alt=""></p></li><li><p>设置<a href="https://wlet.gitee.io/posts/7d527310/" target="_blank" rel="noopener">NTFS权限</a> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021164814.png" alt=""></p></li><li><p>打开web服务器，新建两个网站（注意添加起始页<code>index.html</code>）参考文章：<a href="https://wlet.gitee.io/posts/5c4f24e7/" target="_blank" rel="noopener">点击进入</a></p><ul><li>fruit网站：IP：<code>10.0.0.2</code>；端口：<code>80</code>；主机头值：<code>fruit.wlet.com</code>；关闭匿名访问</li><li>other网站：IP：<code>10.0.0.2</code>；端口：<code>80</code>；主机头值：<code>other.wlet.com</code>；关闭匿名访问</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021165954.png" alt=""></p></li><li><p>设置网站身份验证（两个网站都要设置）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021170513.png" alt=""></p></li><li><p>打开域服务器的DNS服务器，添加主机</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021173330.png" alt=""></p></li></ol><h1 id="四、win2007域成员机测试"><a href="#四、win2007域成员机测试" class="headerlink" title="四、win2007域成员机测试"></a>四、win2007域成员机测试</h1><ul><li>打开win7计算机，配置网卡、添加域（重要操作）</li></ul><h2 id="测试DHCP"><a href="#测试DHCP" class="headerlink" title="测试DHCP"></a>测试DHCP</h2><ul><li><p>用域账户登陆，自动分配IP、DNS，成功！</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021171632.png" alt=""></p></li></ul><h2 id="测试文件共享"><a href="#测试文件共享" class="headerlink" title="测试文件共享"></a>测试文件共享</h2><ol><li><p>用域账户<code>san.zhang</code>登陆，<code>win + R</code>打开<strong>运行</strong>，输入<code>\\share</code>，未登录成功进入共享文件夹，并且可下载无法上传（因为<code>san.zhang</code>属于<strong>IT组</strong>，<strong>IT组</strong>没有上传权限），验证成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021172149.png" alt=""></p></li><li><p>用域账户<code>si.lii</code>登陆，<code>win + R</code>打开<strong>运行</strong>，输入<code>\\share</code>，未登录成功进入共享文件夹，并且可下载、可上传、可删除、可修改共享文件夹中的文件（因为<code>si.li</code>设置了<strong>完全控制</strong>权限），验证成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021172950.png" alt=""></p></li></ol><h2 id="测试web网站"><a href="#测试web网站" class="headerlink" title="测试web网站"></a>测试web网站</h2><ol><li><p>用域账户<code>si.li</code>登陆win7，打开浏览器，访问<code>fruit.wlet.com</code>，输入域账户密码成功访问，本地账户失败</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021173731.png" alt=""></p></li><li><p>访问<code>other.wlet.com</code>，输入域账户密码成功访问，本地账户失败</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/050%E5%9F%9F%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C/20201021173851.png" alt=""></p></li><li><p>其余域账户同理</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络之域</title>
      <link href="/posts/98b1c73d/"/>
      <url>/posts/98b1c73d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、域的概述"><a href="#一、域的概述" class="headerlink" title="一、域的概述"></a>一、域的概述</h1><ol><li>说明：<ul><li>域（Domain）是计算机网络的一种形式，其中所有用户账户、计算机、打印机和其他安全主体，都在位于称为<strong>域控制器</strong>的一个或多个中央计算机集群上的中央数据库中注册</li><li>域之间相互访问则需要建立信任关系；信任关系是连接域与域之间的桥梁。当一个域与其他域建立了信任关系后，2个域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理，以及相互通信和数据传输</li><li>域既是 Windows 网络操作系统的逻辑组织单元，也是Internet的逻辑组织单元，在 Windows 网络操作系统中，域是安全边界</li><li>域管理员只能管理域的内部，除非其他的域赋予他管理权限，他才能够访问或者管理其他的域，每个域都有自己的安全策略，以及它与其他域的安全信任关系</li></ul></li><li>特点：集中/统一管理</li><li>域的组成：域控制器：<code>DC</code>（Domain Controller）、成员机</li><li>域的部署：<ul><li>安装了<strong>活动目录</strong>，就生成了<strong>域控制器</strong>；活动目录：<code>AD</code> （Active Directory）</li><li>有了<strong>域控制器</strong>，就生成了<strong>域环境</strong></li></ul></li></ol><h1 id="二、内网环境"><a href="#二、内网环境" class="headerlink" title="二、内网环境"></a>二、内网环境</h1><ol><li>工作组：属于计算机的默认模式，人人平等，不方便管理</li><li>域：人人不平等，集中管理，统一管理</li></ol><h1 id="三、安装活动目录（AD）"><a href="#三、安装活动目录（AD）" class="headerlink" title="三、安装活动目录（AD）"></a>三、安装活动目录（AD）</h1><ol><li><p>打开win2008服务器并指定网卡、配置静态IP</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019142734.png" alt=""></p></li><li><p>运行<code>win+ R</code>，输入<code>dcpromo</code>，开始安装活动目录，进入安装向导</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019143317.png" alt=""></p></li><li><p>选择安装与域服务器和DNS服务器（必须选择）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019143809.png" alt=""></p></li><li><p>创建一个域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019144147.png" alt=""></p></li><li><p>自定义域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019144318.png" alt=""></p></li><li><p>下一步到如下图</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019144918.png" alt=""></p></li><li><p>设置域服务还原密码（此密码并非域密码）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019145131.png" alt=""></p></li><li><p>检查域服务器的配置，无错误就下一步，之后等待配置，完成后重启服务器即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019145604.png" alt=""></p></li><li><p>登陆域服务器，重启系统后，之前的不同服务器就变成了域服务器，密码还是之前的服务器密码</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019150128.png" alt=""></p></li><li><p>检查服务器是否成功转换为域服务器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019150508.png" alt=""></p></li><li><p>打开DNS服务，查看配置（DNS是和活动目录一起安装的，并非单独安装的）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019150839.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019150918.png" alt=""></p></li><li><p>打开域用户域计算机</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019151934.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019152136.png" alt=""></p></li></ol><h1 id="四、添加域成员"><a href="#四、添加域成员" class="headerlink" title="四、添加域成员"></a>四、添加域成员</h1><h2 id="添加winXP成员机"><a href="#添加winXP成员机" class="headerlink" title="添加winXP成员机"></a>添加winXP成员机</h2><ol><li><p>打开winXP系统，设置与域服务器在同一网卡、配置同网段IP、DNS服务器（客户机与服务器互通）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019152629.png" alt=""></p></li><li><p>给此成员机添加域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019153437.png" alt=""></p></li><li><p>以域管理员身份登陆，添加成功后，重启此系统，此系统已成功加入<code>test.com</code>域，要想登陆此计算机，必须在域服务器上创建账户并授权</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019153856.png" alt=""></p></li></ol><h2 id="添加win7成员机"><a href="#添加win7成员机" class="headerlink" title="添加win7成员机"></a>添加win7成员机</h2><ol><li><p>打开win7系统，设置与域服务器在同一网卡、配置同网段IP、DNS服务器（客户机与服务器互通）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019155328.png" alt=""></p></li><li><p>给此成员机添加域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019154915.png" alt=""></p></li><li><p>以域管理员身份登陆，添加成功后，重启此系统，此系统已成功加入<code>test.com</code>域，要想登陆此计算机，必须在域服务器上创建账户并授权</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019155708.png" alt=""></p></li><li><p>打开域服务器，查看计算机是否添加成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019160254.png" alt=""></p></li></ol><h1 id="五、创建域账户"><a href="#五、创建域账户" class="headerlink" title="五、创建域账户"></a>五、创建域账户</h1><ol><li><p>打开域服务器的活动目录，新建用户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019161401.png" alt=""></p></li><li><p>自定义用户登录名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019161716.png" alt=""></p></li><li><p>自定义域用户登陆密码（必须为复杂性密码）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019163013.png" alt=""></p></li><li><p>查看域用户列表</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019163151.png" alt=""></p></li></ol><h1 id="六、登陆域账户"><a href="#六、登陆域账户" class="headerlink" title="六、登陆域账户"></a>六、登陆域账户</h1><h2 id="winXP成员机登陆"><a href="#winXP成员机登陆" class="headerlink" title="winXP成员机登陆"></a>winXP成员机登陆</h2><ol><li><p>打开之前添加的域成员机：<code>winXP</code>，输入刚才创建的域账户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019163840.png" alt=""></p></li><li><p>查看是否成功登陆</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019164348.png" alt=""></p></li></ol><h2 id="win7成员机登陆"><a href="#win7成员机登陆" class="headerlink" title="win7成员机登陆"></a>win7成员机登陆</h2><ol><li><p>在域的活动目录下创建账户：<code>san.zhang</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019164912.png" alt=""></p></li><li><p>打开win7成员机，先切换用户，如下图所示的账户为本地用户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019165300.png" alt=""></p></li><li><p>输入域账户登陆</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019165735.png" alt=""></p></li><li><p>进入系统，查看登陆账户是否正确</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019165833.png" alt=""></p></li></ol><h1 id="七、域中的组织单位（OU）"><a href="#七、域中的组织单位（OU）" class="headerlink" title="七、域中的组织单位（OU）"></a>七、域中的组织单位（OU）</h1><ol><li><p>说明：组织单位(Organizational Unit)简称OU 是可以将用户、组、计算机以及其它组织单位，放入其中的AD(Active Directory，活动目录)容器，是可以指派组策略设置或委派管理权限的最小作用域或单元</p></li><li><p>打开活动目录，创建OU</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019171507.png" alt=""></p></li><li><p>自定义OU名称</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019171932.png" alt=""></p></li><li><p>按照公司的组织架构创建OU，示例如下（注意图标变化）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019172300.png" alt=""></p></li><li><p>移动域用户到指定的组织单位（注意：域用户一般不要删除，就算新建一个相同用户，也回不到删除之前了）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019173014.png" alt=""></p></li><li><p>查看是否移动成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019173116.png" alt=""></p></li></ol><h1 id="八、域中的组策略（GPO）"><a href="#八、域中的组策略（GPO）" class="headerlink" title="八、域中的组策略（GPO）"></a>八、域中的组策略（GPO）</h1><ol><li>作用：通过组策略（Group Policy Object）可以修改计算机的各种属性，如开始菜单、桌面背景、网络参数等</li><li>组策略在域中，是基于OU来下发的</li><li>组策略在域中下发后，用户的应用顺序是：<code>LSDOU</code>（L：本地；S：站点；D：域；OU：组织单元）</li></ol><h2 id="创建组策略"><a href="#创建组策略" class="headerlink" title="创建组策略"></a>创建组策略</h2><ol><li><p>打开组策略管理</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019175233.png" alt=""></p></li><li><p>给每个部门都创建一个组策略</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019175741.png" alt=""></p></li><li><p>自定义组策略表名称</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019175908.png" alt=""></p></li><li><p>给所有分支都添加GPO</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201019180607.png" alt=""></p></li></ol><h1 id="九、设置组策略"><a href="#九、设置组策略" class="headerlink" title="九、设置组策略"></a>九、设置组策略</h1><ul><li><p>刷新策略命令：<code>gpupdate /force</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020143504.png" alt=""></p></li></ul><h2 id="统一桌面壁纸"><a href="#统一桌面壁纸" class="headerlink" title="统一桌面壁纸"></a>统一桌面壁纸</h2><ol><li><p>打开电脑磁盘，选择任意目录，创建任意共享文件夹，如<code>ptotos</code>，并设置读取权限，将桌面壁纸复制到此目录下</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020091456.png" alt=""></p></li><li><p>设置NTFS权限，建议也添加域用户组</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020091821.png" alt=""></p></li><li><p>打开组策略管理，编辑<strong>乐天集团</strong>策略表</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020092007.png" alt=""></p></li><li><p>进入组策略表，设置桌面壁纸</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020092410.png" alt=""></p></li><li><p>登陆成员机winXP，查看桌面是否生效（若已在登陆状态，可注销、重启成员机），此时的成员机桌面壁纸无法自己修改</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020093052.png" alt=""></p></li><li><p>登陆成员机win7，查看桌面壁纸效果，如下图所示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020093620.png" alt=""></p></li></ol><h2 id="禁用DOS窗口"><a href="#禁用DOS窗口" class="headerlink" title="禁用DOS窗口"></a>禁用DOS窗口</h2><ol><li><p>打开域服务器，编辑组策略表，启动删除<strong>运行</strong>菜单（双击进入，选择<strong>启用</strong>即可）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020113436.png" alt=""></p></li><li><p>打开成员机winXP，注销、重启后，打开开始菜单，查看<strong>运行</strong>程序是否被禁用</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020113931.png" alt=""></p></li><li><p>使用快捷键：<code>win + R</code>，依然无法打开</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020114028.png" alt=""></p></li><li><p>打开成员机win7，<strong>运行</strong>程序也被禁用，快捷键<code>win+ R</code>也无法使用</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020114351.png" alt=""></p></li></ol><h2 id="添加脚本"><a href="#添加脚本" class="headerlink" title="添加脚本"></a>添加脚本</h2><ol><li><p>打开打开域服务器，编辑指定的组策略表，添加脚本，可设置<strong>登陆</strong>或<strong>注销</strong>时运行</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020115438.png" alt=""></p></li></ol><h2 id="登陆无须Ctrl-Alt-Delete"><a href="#登陆无须Ctrl-Alt-Delete" class="headerlink" title="登陆无须Ctrl + Alt + Delete"></a>登陆无须Ctrl + Alt + Delete</h2><ol><li><p>打开域服务器，编辑指定的组策略表，开启如下图所示的策略即可（注意：必须将<strong>计算机</strong>移动到<strong>乐天集团组织单位</strong>中，否则此策略不生效）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020120447.png" alt=""></p></li><li><p>打开成员机，注销、重启后查看计算机是否启动该功能</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020120818.png" alt=""></p></li><li><p>策略未生效原因：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020124216.png" alt=""></p></li><li><p>解决方式：将此计算机移动到乐天集团组织单位中，或者直接在域的默认组策略表中修改</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020124549.png" alt=""></p></li></ol><h2 id="设置账户登陆密码策略"><a href="#设置账户登陆密码策略" class="headerlink" title="设置账户登陆密码策略"></a>设置账户登陆密码策略</h2><ol><li><p>打开组策略管理，编辑指定的组策略表，设置如下图所示的策略</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020144328.png" alt=""></p></li><li><p>设置策略后，可加固域账户的安全性</p></li></ol><h1 id="十、组策略执行优先级"><a href="#十、组策略执行优先级" class="headerlink" title="十、组策略执行优先级"></a>十、组策略执行优先级</h1><h2 id="LSDOU顺序"><a href="#LSDOU顺序" class="headerlink" title="LSDOU顺序"></a>LSDOU顺序</h2><ol><li><p>设置<strong>IT部</strong>的域用户为：<code>mazi.wang</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020150131.png" alt=""></p></li><li><p>设置<strong>东北大区</strong>的域用户为：<code>san.zhang</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020150217.png" alt=""></p></li><li><p>在<strong>乐天集团</strong>组策略表中，启用<strong>删除DOS窗口</strong>策略</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020150855.png" alt=""></p></li><li><p>在<strong>IT部</strong>组策略表中，禁用<strong>删除DOS窗口</strong>策略</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020151006.png" alt=""></p></li><li><p>打开成员机win7，登陆<code>san.zhang</code>域账户，发现<strong>DOS窗口</strong>无法运行，这是因为<strong>东北大区</strong>没有自己配置对应的策略，只能继承<strong>乐天集团</strong>的组策略</p></li><li><p>切换账户，登陆<code>mazi.wang</code>域账户登陆成员机，发现<strong>DOS窗口</strong>成功运行，这是因为<strong>IT部</strong>自己配置了对应的策略，就不用继承<strong>乐天集团</strong>的组策略了（前提条件：<strong>上级</strong>组策略未开启<strong>强制</strong>设置）</p></li></ol><h2 id="阻止继承"><a href="#阻止继承" class="headerlink" title="阻止继承"></a>阻止继承</h2><ol><li><p>打开组策略，给指定<strong>组织单位</strong>设置<strong>阻止继承</strong>，此时的<strong>组织单位</strong>只执行自己的组策略，上级的组策略失效，不继承</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020173206.png" alt=""></p></li></ol><h2 id="强制执行"><a href="#强制执行" class="headerlink" title="强制执行"></a>强制执行</h2><ol><li><p>打开域服务器的<strong>组策略管理</strong>，选择<strong>乐天集团</strong>的组策略，右键设置<strong>强制</strong>，此时的<strong>IT部</strong>自己的组策略全部<strong>失效</strong>，其他的下级策略也全部失效，只能<strong>强制</strong>继承<strong>乐天集团</strong>的组策略，就算<strong>组织单位</strong>选择了<strong>阻止继承</strong>，也没用</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020152803.png" alt=""></p></li></ol><h1 id="十一、查看组策略配置"><a href="#十一、查看组策略配置" class="headerlink" title="十一、查看组策略配置"></a>十一、查看组策略配置</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020154005.png" alt=""></p><h1 id="十二、域账户完全控制权限"><a href="#十二、域账户完全控制权限" class="headerlink" title="十二、域账户完全控制权限"></a>十二、域账户完全控制权限</h1><ol><li><p>说明：域账户的完全控制权限，仅限于对<strong>成员机</strong>（计算机）生效</p></li><li><p>用域管理员账户<code>test.com\administrator</code>登陆成员机<code>win7</code>，打开<strong>计算机管理</strong>，将域账户<code>mazi.wang</code>添加到本地管理员组</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/049%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%9F%9F/20201020155658.png" alt=""></p></li><li><p>用域账户<code>mazi.wang</code>登陆成员机<code>win7</code>，以后在此计算机上安装、卸载程序等一系列管理员操作，都可以直接操作，无需请求域管理员同意</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP服务器</title>
      <link href="/posts/92957adc/"/>
      <url>/posts/92957adc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、FTP概述"><a href="#一、FTP概述" class="headerlink" title="一、FTP概述"></a>一、FTP概述</h1><ol><li>FTP全称：<code>File Transfer Protocol</code>（文件传输协议）</li><li>端口：<ul><li>20端口：数据端口</li><li>21端口：控制端口</li></ul></li><li>作用：FTP服务器用来存储文件，用户可以使用FTP客户端通过FTP协议访问位于FTP服务器上的资源；在开发网站的时候，通常利用FTP协议把网页或程序传到Web服务器上；此外，由于FTP传输效率非常高，在网络上传输大的文件时，一般也采用该协议。</li></ol><h1 id="二、FTP工作模式"><a href="#二、FTP工作模式" class="headerlink" title="二、FTP工作模式"></a>二、FTP工作模式</h1><h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><ol><li><p>服务器主动给客户机发送数据叫主动模式</p></li><li><p>客户机在访问FTP服务器时会在本机随机生成两个端口（默认50000+开始）</p></li><li><p>示例图如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016152928.png" alt=""></p></li></ol><h2 id="被动模式"><a href="#被动模式" class="headerlink" title="被动模式"></a>被动模式</h2><ol><li><p>服务器被动接收客户机发送过来的数据叫被动模式</p></li><li><p>示例图如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016153424.png" alt=""></p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>服务器如果开启防火墙：采用主动模式连接</li><li>客户机如果开启防火墙：采用被动模式连接</li><li>主被动模式，阐述的是数据传输过程；选择权在客户机上；所谓主或被是站在服务器的角度</li></ol><h1 id="三、IIS搭建FTP服务器"><a href="#三、IIS搭建FTP服务器" class="headerlink" title="三、IIS搭建FTP服务器"></a>三、IIS搭建FTP服务器</h1><ol><li><p>给服务器配置静态IP后，打开安装驱动，进入安装程序</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016154320.png" alt=""></p></li><li><p>选择FTP安装程序</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016154504.png" alt=""></p></li><li><p>修改正确的盘符（安装系统后，没修改过盘符，就不会弹窗了）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016154614.png" alt=""></p></li><li><p>打开FTP配置，进入默认FTP站点（推荐关闭默认FTP站点）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016154852.png" alt=""></p></li><li><p>打开FTP默认路径，在此路径下放入要传输的文件或文件夹，此时可输入<code>netstat -an</code>查看<code>21</code>端是否已打开</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016160233.png" alt=""></p></li><li><p>客户端访问FTP站点（客户机与服务器必须互通），默认FTP站点已开启匿名访问权限，无需账号密码登陆</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016160813.png" alt=""></p></li></ol><h1 id="四、IIS配置FTP服务器"><a href="#四、IIS配置FTP服务器" class="headerlink" title="四、IIS配置FTP服务器"></a>四、IIS配置FTP服务器</h1><ol><li><p>说明：默认FTP站点，一般不使用，建议关闭，所以要自己新建一个FTP站点</p></li><li><p>打开FTP服务器配置，新建站点</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016161629.png" alt=""></p></li><li><p>自定义描述（任意名称即可）</p></li><li><p>设置IP与端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016161831.png" alt=""></p></li><li><p>选择站点主目录，要传输的文件夹（路径）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016162050.png" alt=""></p></li><li><p>设置FTP权限（推荐勾选所有）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016162158.png" alt=""></p></li><li><p>配置文件传输权限：FTP权限与<a href="https://wlet.gitee.io/posts/7d527310/" target="_blank" rel="noopener">NTFS权限</a>的交集权限</p></li><li><p>选择站点主目录，取消权限继承</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016162834.png" alt=""></p></li><li><p>删除除administrator用户之外的所有用户；新建admin2020账户，并赋予完全控制权限；新建user2020账户，允许只有上传权限</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016163612.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016163917.png" alt=""></p></li><li><p>取消匿名连接（推荐取消），注意点击<strong>应用</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016164308.png" alt=""></p></li><li><p>检查连接：客户机访问FTP服务器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016164924.png" alt=""></p></li><li><p>检查权限：登录后，验证user2020权限正常无法下载文件，可以任意上传文件；admin2020可以上传、下载、删除等</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016165201.png" alt=""></p></li><li><p>更改账户：在登陆后的路径下，右键选择登陆，可切换账户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016165928.png" alt=""></p></li></ol><h1 id="五、Serv-U搭建FTP服务器"><a href="#五、Serv-U搭建FTP服务器" class="headerlink" title="五、Serv-U搭建FTP服务器"></a>五、Serv-U搭建FTP服务器</h1><h2 id="安装Serv-U"><a href="#安装Serv-U" class="headerlink" title="安装Serv-U"></a>安装Serv-U</h2><ol><li><p>Serv-U下载地址：<a href="https://pan.baidu.com/s/1QZRgBc1BP2EHBZx5Uywsgg" target="_blank" rel="noopener">百度云盘</a>   提取码：<code>1tow</code> </p></li><li><p>打开文件，运行安装程序，安装过程默认下一步即可，推荐路径也为默认，否则可能影响破解</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017172841.png" alt=""></p></li><li><p>打开serv-u，进入管理，发现程序未破解，只能免费使用15日（推荐关闭导航弹窗）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017173307.png" alt=""></p></li></ol><h2 id="破解Serv-U"><a href="#破解Serv-U" class="headerlink" title="破解Serv-U"></a>破解Serv-U</h2><ol><li><p>关闭Serv-U程序，右键破解程序，以<strong>管理员方式</strong>打开，输入任意用户名与邮箱号，勾选所有复选框，最后点击path</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017174043.png" alt=""></p></li><li><p>再次打开Serv-U，已被成功破解</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017174452.png" alt=""></p></li></ol><h1 id="六、Serv-U配置FTP服务器"><a href="#六、Serv-U配置FTP服务器" class="headerlink" title="六、Serv-U配置FTP服务器"></a>六、Serv-U配置FTP服务器</h1><h2 id="创建账户与目录"><a href="#创建账户与目录" class="headerlink" title="创建账户与目录"></a>创建账户与目录</h2><ol><li><p>给服务器配置静态IP</p></li><li><p>必须先创建一个域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017175457.png" alt=""></p></li><li><p>自定义域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017175625.png" alt=""></p></li><li><p>选择文件传输域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017180053.png" alt=""></p></li><li><p>设置服务端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017180241.png" alt=""></p></li><li><p>配置IP，之后下一步完成即可（此时FTP服务器<strong>域</strong>已创建）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017180451.png" alt=""></p></li><li><p>创建账户，注意添加<strong>根目录</strong>（本人忘记写了）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017190945.png" alt=""></p></li><li><p>添加传输目录</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017191617.png" alt=""></p></li><li><p>选择传输目录，并设置权限</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017192049.png" alt=""></p></li><li><p>查看用户状态</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017193146.png" alt=""></p></li></ol><h2 id="设置账户访问权限"><a href="#设置账户访问权限" class="headerlink" title="设置账户访问权限"></a>设置账户访问权限</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017193354.png" alt=""></p><h2 id="设置虚拟路径"><a href="#设置虚拟路径" class="headerlink" title="设置虚拟路径"></a>设置虚拟路径</h2><ol><li><p>作用：多个账户，<strong>都可以</strong>访问指定单个或多个目录，只需给每个用户设置虚拟路径即可，可以节省很多空间</p></li><li><p>编辑用户，选择<strong>目录访问</strong>，添加传输目录并设置账户访问权限</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017210212.png" alt=""></p></li><li><p>选择<strong>虚拟路径</strong>，设置如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017205050.png" alt=""></p></li><li><p>注意事项：</p><ul><li>物理路径：服务器本地的一个文件夹（文件传输目录）</li><li>虚拟路径：登陆账户后，在目录中要显示的目录，此目录在服务器上存在，但是不在此处的目录下，类似于快捷方式（软链接），开始位置必须是<code>%HOME%</code>，后面的路径可自定义（后面的路径就是重命名文件夹）</li><li>虚拟路径必须在<strong>目录访问</strong>和<strong>虚拟路径</strong>选项中<strong>都</strong>添加</li></ul></li></ol><h2 id="客户机连接FTP"><a href="#客户机连接FTP" class="headerlink" title="客户机连接FTP"></a>客户机连接FTP</h2><ol><li><p>客户端FTP连接成功，发现设置了读取权限（下载权限），但依然不能下载（原因：客户机网络文件下载权限被禁用）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017211710.png" alt=""></p></li><li><p>打开客户端的<code>IE浏览器</code>，选择<strong>工具</strong> &gt;&gt; <strong>internet选项</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017212334.png" alt=""></p></li><li><p>启动<strong>文件下载</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017212604.png" alt=""></p></li><li><p>再次连接并下载</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017212955.png" alt=""></p></li><li><p>客户机在传输文件夹中右键，可任意切换账户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/048IIS%E4%B9%8BFTP%E6%9C%8D%E5%8A%A1%E5%99%A8/20201017213315.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS </tag>
            
            <tag> FTP </tag>
            
            <tag> Serv-U </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IIS之web服务器</title>
      <link href="/posts/5c4f24e7/"/>
      <url>/posts/5c4f24e7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、web服务器概述"><a href="#一、web服务器概述" class="headerlink" title="一、web服务器概述"></a>一、web服务器概述</h1><ol><li>web服务器别名：网页服务器、http服务器等</li><li>web服务器使用的是<strong>http协议</strong>（不加密）和<strong>https协议</strong>（加密）</li><li>http协议端口：80</li><li>https协议端口：443</li></ol><h1 id="二、web服务器发布软件"><a href="#二、web服务器发布软件" class="headerlink" title="二、web服务器发布软件"></a>二、web服务器发布软件</h1><ol><li>微软：<code>IIS</code>（可以发布<strong>WEB网站</strong>和<strong>FTP站点</strong>）</li><li>Liunx：<code>Apache</code>/<code>LAMP</code>/<code>Tomcat</code>/<code>nginx</code></li><li>第三方：<code>phpstudy</code> /<code>XAMPP</code>（学习、测试）</li></ol><h1 id="三、搭建web服务器"><a href="#三、搭建web服务器" class="headerlink" title="三、搭建web服务器"></a>三、搭建web服务器</h1><ol><li><p>服务器配置静态IP</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015203417.png" alt=""></p></li><li><p>打开安装驱动</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015203541.png" alt=""></p></li><li><p>安装web服务、DNS服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015203944.png" alt=""></p></li><li><p>更改盘符（我在安装系统后，更改了盘符）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015204251.png" alt=""></p></li><li><p>打开IIS服务器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015204523.png" alt=""></p></li><li><p>检查web服务器是否搭建成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015205023.png" alt=""></p></li><li><p>默认网站路径</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016102636.png" alt=""></p></li></ol><h1 id="四、配置web服务器"><a href="#四、配置web服务器" class="headerlink" title="四、配置web服务器"></a>四、配置web服务器</h1><ul><li><p>素材准备：2个网站（含网站源码的2个文件夹）</p></li><li><p><a href="https://pan.baidu.com/s/13UaLoinv2LSMgEQss17ipQ" target="_blank" rel="noopener">百度云盘</a> 提取码：<code>rspa</code> </p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015205743.png" alt=""></p></li></ul><h2 id="不同IP，相同端口"><a href="#不同IP，相同端口" class="headerlink" title="不同IP，相同端口"></a>不同IP，相同端口</h2><ol><li><p>在服务器上添加第二个网卡（虚拟网卡）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015210022.png" alt=""></p></li><li><p>检查网卡是否添加成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015210554.png" alt=""></p></li><li><p>停止默认网站的运行（推荐不删除默认网站）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015210751.png" alt=""></p></li><li><p>新建网站aaa</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015211043.png" alt=""></p></li><li><p>设置描述</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015211126.png" alt=""></p></li><li><p>设置IP和端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015211318.png" alt=""></p></li><li><p>设置网站根目录（注意选择<strong>允许匿名访问网站</strong>，如下图所示）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015211537.png" alt=""></p></li><li><p>自定义网站权限</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015211842.png" alt=""></p></li><li><p>新建网站bbb，并设置IP和端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015212046.png" alt=""></p></li><li><p>选择bbb网站根目录</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015212130.png" alt=""></p></li><li><p>给aaa网站添加首页，bbb网站相同操作即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015212527.png" alt=""></p></li><li><p>客户端访问aaa网站（客户端与服务器必须互通）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015213214.png" alt=""></p></li><li><p>客户端访问bbb网站</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015213349.png" alt=""></p></li></ol><h2 id="相同IP，不同端口"><a href="#相同IP，不同端口" class="headerlink" title="相同IP，不同端口"></a>相同IP，不同端口</h2><ol><li><p>设置aaa网站的IP与端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015213824.png" alt=""></p></li><li><p>设置bbb网站的IP与端口</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015213921.png" alt=""></p></li><li><p>客户端访问aaa网站（浏览器默认选择80端口，无需再填写端口号）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015214236.png" alt=""></p></li><li><p>客户端访问bbb网站（注意：英文输入法<code>IP:端口号</code>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015214358.png" alt=""></p></li></ol><h2 id="相同IP，相同端口，不同域名"><a href="#相同IP，相同端口，不同域名" class="headerlink" title="相同IP，相同端口，不同域名"></a>相同IP，相同端口，不同域名</h2><ol><li><p>打开<a href="https://wlet.gitee.io/posts/57ed550b/" target="_blank" rel="noopener">DNS服务器配置</a>，分别新建区域和主机名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015215017.png" alt=""></p></li><li><p>打开web服务器配置，给aaa网站添加完整域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015215712.png" alt=""></p></li><li><p>给bbb网站添加完整域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015215823.png" alt=""></p></li><li><p>客户端访问aaa网站</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015220155.png" alt=""></p></li><li><p>客户端访问bbb网站</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201015220336.png" alt=""></p></li></ol><h1 id="五、web服务器其他配置"><a href="#五、web服务器其他配置" class="headerlink" title="五、web服务器其他配置"></a>五、web服务器其他配置</h1><h2 id="父路径设置"><a href="#父路径设置" class="headerlink" title="父路径设置"></a>父路径设置</h2><ol><li><p>作用：网站根目录下存在<strong>子目录</strong>时，必须启动此选项，因为子目录中一般包含其他网页，如后台页面等，如不开启，子页面无法访问，一般此选项必须勾选（本人的测试网站没有子页面，所以没启动）</p></li><li><p>子页面访问格式：<code>完整域名/子目录名/文件名</code>，例如：<code>www.aaa.com/admin/login.php</code>（admin为子目录名，访问完整域名，默认进入根目录）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016093927.png" alt=""></p></li></ol><h2 id="动态网站配置"><a href="#动态网站配置" class="headerlink" title="动态网站配置"></a>动态网站配置</h2><ul><li><p>说明：以上配置属于静态网站的配置，动态网站需要打开以下权限，网站才能完全访问</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/047IIS%E4%B9%8BWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/20201016094722.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IIS </tag>
            
            <tag> web服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS部署与安全</title>
      <link href="/posts/57ed550b/"/>
      <url>/posts/57ed550b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、什么是DNS"><a href="#一、什么是DNS" class="headerlink" title="一、什么是DNS"></a>一、什么是DNS</h1><ol><li>概述：大多数因特网服务依赖于 DNS 而工作，一旦 DNS 出错，就无法连接 Web 站点；它作为可以将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的IP数字串</li><li>DNS全称：域名系统（服务）协议 <code>Domain Name Service</code></li><li>作用：用于域名与 IP 地址的相互转换（解析）</li><li>默认监听端口：<code>TCP / UDP</code>：<code>53</code></li><li>DNS服务器分类：<ul><li>主要名称服务器 </li><li>辅助名称服务器 </li><li>根名称服务器 </li><li>高速缓存名称服务器</li></ul></li><li>客户机域名请求解析顺序：<code>DNS缓存</code> &gt; <code>本地hosts文件</code> &gt; <code>本地DNS服务器</code></li><li>服务器对域名请求的处理顺序：<code>DNS高速缓存</code> &gt; <code>本地域名解析文件</code> &gt; <code>转发器</code> &gt; <code>根</code></li></ol><h1 id="二、域名组成"><a href="#二、域名组成" class="headerlink" title="二、域名组成"></a>二、域名组成</h1><ol><li><p>说明：</p><ul><li>如<code>www.sina.com.cn</code>是一个<strong>域名</strong>，从<u>严格意义上讲</u>，<code>sina.com.cn</code>才被称为<strong>域名</strong>(全球唯一)，而<code>www</code>是主机名</li><li><code>主机名.域名</code>称为<strong>完全限定域名</strong>（FQDN），一个域名下可以有多个主机，域名<strong>全球唯一</strong>，那么<code>主机名.域名</code>也是全球唯一的</li><li>以<code>sina.com.cn</code>域名为例，一般管理员在命名的时候会根据其主机的功能而命名，比如一般设定：<strong>网站</strong>的是<code>www</code>，<strong>博客</strong>的是<code>blog</code>，<strong>论坛</strong>的是<code>bbs</code>，对应的FQDN为：<code>www.sina.com</code>，<code>blog.sina.com.cn</code>，<code>bbs.sina.com.cn</code> 那么多个FQDN，我们只需要申请一个域名<code>sina.com.cn</code>即可</li></ul></li><li><p>域名组成示意图如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014155006.png" alt=""></p></li><li><p>各类顶级域：</p><ul><li>国家顶级域：<code>cn jp hk uk</code></li><li>商业顶级域：<code>com</code> 商业机构、<code>gov</code> 政府机构、<code>mil</code> 军事机构、<code>edu</code> 教育机构、<code>org</code> 民间组织架构、<code>net</code> 互联网</li></ul></li><li><p>域名示例：如：<code>www.baidu.com.</code>（完整域名后面的<strong>点号</strong>，浏览器默认已输入）</p><ul><li><code>.</code>为根域 </li><li><code>.com</code>  为顶级域 </li><li><code>baidu</code> 为一级域名</li><li><code>www</code>   为主机名</li><li>FQDN = 主机名.DNS后缀（FQDN：完整的域名）</li></ul></li></ol><h1 id="三、DNS解析种类"><a href="#三、DNS解析种类" class="headerlink" title="三、DNS解析种类"></a>三、DNS解析种类</h1><ol><li><p>按照查询方式分类：</p><ul><li>递归查询：客户机与本地DNS服务器之间</li><li>迭代查询：本地DNS服务器与根等其他DNS服务器的解析过程</li></ul></li><li><p>按照查询内容分类：</p><ul><li>正向解析：已知域名，解析IP</li><li>反向解析：已知IP，解析域名</li></ul></li><li><p>DNS解析过程：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014161255.png" alt=""></p></li><li><p>全世界目前一共<strong>13</strong>个<strong>根域名服务器</strong></p></li></ol><h1 id="四、安装DNS服务器"><a href="#四、安装DNS服务器" class="headerlink" title="四、安装DNS服务器"></a>四、安装DNS服务器</h1><ol><li><p>第一步：给服务器配置静态IP（固定IP）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014162848.png" alt=""></p></li><li><p>第二步：安装DNS服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014163012.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014163227.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014163506.png" alt=""></p></li><li><p>第三步：检查DNS服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014164051.png" alt=""></p></li></ol><h1 id="五、配置DNS服务器"><a href="#五、配置DNS服务器" class="headerlink" title="五、配置DNS服务器"></a>五、配置DNS服务器</h1><ol><li><p>开始菜单 &gt;&gt; 管理工具 &gt;&gt; DNS &gt;&gt; 正向查询区域（右键） &gt;&gt; 新建区域</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014164442.png" alt=""></p></li><li><p>主要区域就是主服务器；</p></li><li><p>辅助区域是备份区域，如果公司已经有一台DNS服务器了，想要做一台备份服务器，就选辅助区域；</p></li><li><p>存根区域就是根域，一般由国家级的来创建</p></li><li><p>下一步，自定义域名</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014164748.png" alt=""></p></li><li><p>以后<code>baidu01.com</code>这个区域都有它来解析，它就是这个区域的<strong>权威服务器</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014165030.png" alt=""></p></li><li><p><code>baidu01.com.dns</code>这个文件是区域解析文件，以后<code>www.baidu01.com</code>，<code>dns.baidu01.com</code>等都会写入这个文件</p></li><li><p>后续步骤下一步即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014165712.png" alt=""></p></li><li><p>新建主机：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014170159.png" alt=""></p></li><li><p>自定义<strong>主机名</strong>和<strong>IP</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014170309.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014170438.png" alt=""></p></li><li><p>此时<code>www.baidu01.com</code>解析后的IP地址为<code>1.1.1.1</code></p></li><li><p>验证解析是否正确：打开客户机，配置DNS（服务器IP为<code>10.0.0.2</code>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014171109.png" alt=""></p></li><li><p>在客户机终端窗口输入<code>nslookup www.baidu01.com</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014171300.png" alt=""></p><div class="note danger">            <p><code>ipconfig /flushdns</code>    刷新本地DNS缓存</p><p><code>ipconfig /displaydns</code>  显示DNS缓存</p>          </div></li></ol><h1 id="六、创建反向解析"><a href="#六、创建反向解析" class="headerlink" title="六、创建反向解析"></a>六、创建反向解析</h1><ol><li><p>作用：通过访问IP可以解析到服务器域名</p></li><li><p>选择<strong>正向查找区域</strong>，添加服务器主机并命名为<code>dns.baidu01.com</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014174640.png" alt=""></p></li><li><p>反向区域配置</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014174923.png" alt=""></p></li><li><p>新建指针，配置反向解析（通过访问IP可以解析到服务器名）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014181012.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014181254.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014181349.png" alt=""></p></li><li><p>验证反向解析：客户机请求<code>www.baidu01.com</code> 交给IP为<code>10.0.0.2</code> 服务器名为<code>dns.baidu01.com</code> 去解析，解析出来<code>www.baidu01.com</code>的IP地址为<code>1.1.1.1</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014181702.png" alt=""></p></li></ol><h1 id="七、搭建备份服务器"><a href="#七、搭建备份服务器" class="headerlink" title="七、搭建备份服务器"></a>七、搭建备份服务器</h1><ol><li><p>作用：当主服务器瘫痪后，备用服务器可以代替主服务器，保证网络畅通</p></li><li><p>打开主服务器，选择要备份的区域，如：<code>baidu01.com</code>，添加备份服务器地址</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014194433.png" alt=""></p></li><li><p>打开备份服务器，安装DNS服务并配置服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014195217.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014195322.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014195431.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014195621.png" alt=""></p></li></ol><h1 id="八、DNS转发器"><a href="#八、DNS转发器" class="headerlink" title="八、DNS转发器"></a>八、DNS转发器</h1><ol><li><p>作用：通过转发器，可以给客户机提供不属于自己范围的区域解析</p></li><li><p>流程：客户机给绑定的DNS服务器发送域名解析请求 &gt;&gt; 此服务器不提供此域名的解析 &gt;&gt; 此服务器再发送到其他提供解析的服务器上 &gt;&gt; 最终获得解析IP</p></li><li><p>准备条件：</p><ul><li><p>2台服务器、1台客户机（三者互通）</p></li><li><p><strong>服务器1</strong>搭建DNS，客户机绑定此服务器的DNS</p></li><li><p><strong>服务器2</strong>搭建DNS，并新建FQDN：<code>www.jd01.com</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014204115.png" alt=""></p></li></ul></li><li><p><strong>服务器1</strong>未设置转发器时，客户机访问<code>www.jd01.com</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014205146.png" alt=""></p></li><li><p>在<strong>服务器1</strong>中设置转发器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014205444.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014205603.png" alt=""></p></li></ol><h1 id="九、主机别名"><a href="#九、主机别名" class="headerlink" title="九、主机别名"></a>九、主机别名</h1><ol><li><p>作用：给指定主机添加别名后，解析两个域名，得到同一个IP</p></li><li><p>创建别名步骤：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014212613.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014212802.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014213415.png" alt=""></p></li><li><p>验证别名：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/046DNS%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201014213607.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP部署与安全</title>
      <link href="/posts/6911dc09/"/>
      <url>/posts/6911dc09/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><ol><li>作用：自动分配IP地址</li><li>说明：DHCP就是地址池 / 作用域：（IP、子网掩码、网关、DNS、租期）</li><li>DHCP协议端口是：67 / 68</li><li>优点：<ul><li>减少工作量</li><li>避免IP冲突</li><li>提高地址利用率</li></ul></li><li>DHCP原理：又称之为DHCP租约过程，共分为4步</li></ol><h1 id="二、DHCP原理"><a href="#二、DHCP原理" class="headerlink" title="二、DHCP原理"></a>二、DHCP原理</h1><ol><li>发送<code>DHCP Discovery</code>广播包：客户机广播请求IP地址（携带自己的MAC地址一起发出）</li><li>响应<code>DHCP Offer</code>广播包：单个或多个DHCP服务器先后提供IP地址（无DNS、子网掩码、网关等参数信息）</li><li>客户机发送<code>DHCP Request</code>广播包：客户机选择IP（确认其中一个服务器提供的IP，默认选择第一个响应的服务器）</li><li>发送<code>DHCP ACK</code>广播包（acknowledge）：服务器确定租约，并提供网卡的详细参数（包括IP、子网掩码、DNS、网关、租期等）</li></ol><h1 id="三、DHCP续约"><a href="#三、DHCP续约" class="headerlink" title="三、DHCP续约"></a>三、DHCP续约</h1><ol><li>当租期到<strong>50%</strong>后，客户机会再次发送<code>DHCP Request</code>广播包，进行续约；若服务器无响应，则继续使用并在<strong>87.5%</strong>时再次请求；若仍然无响应就<strong>释放</strong>IP地址，重新发送<code>DHCP Discovery</code>广播包来获取<strong>新的</strong>IP地址。</li><li>注意事项：<ul><li>当长时间无任何服务器响应时，默认会给自己分配一个<code>169.254.x.x/16</code> 该地址只能在内网使用，无法访问外网</li><li>续约作用域选项优先级 &gt; 服务器选项优先级是按<strong>当前时间</strong>开始，重新设定租期的到期时间</li></ul></li></ol><h1 id="四、部署DHCP服务器"><a href="#四、部署DHCP服务器" class="headerlink" title="四、部署DHCP服务器"></a>四、部署DHCP服务器</h1><ol><li><p>前提条件：客户机与服务器在同一网段，并且互通（选择同一个虚拟网卡<code>VMnet2</code>）</p></li><li><p>第一步：选择网卡，虚拟机默认给<code>VMnet1</code>和<code>VMnet8</code>网卡配置与物理机相通的DHCP服务（所以选择其他网卡做实验，如<code>VMnet2</code>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013132845.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013132947.png" alt=""></p></li><li><p>第二步：取消警告显示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013133407.png" alt=""></p></li><li><p>第三步：检查服务器与客户机的本地连接，确认已连接并选择自动获取</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013133807.png" alt=""></p></li><li><p>第四步：安装DHCP服务器（win2003可能没有安装DHCP服务，所以需要安装此服务）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013134352.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013134531.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013134831.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013135012.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013135139.png" alt=""></p></li><li><p>第五步：配置DHCP服务</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013135713.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013135948.png" alt=""></p><p>配置可用IP及子网掩码（建议预留一部分IP）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013140437.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013140641.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013140757.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013140931.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013141111.png" alt=""></p><p>之后的操作可<strong>下一步</strong>解决</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013141302.png" alt=""></p></li></ol><h1 id="五、客户机自动获取IP"><a href="#五、客户机自动获取IP" class="headerlink" title="五、客户机自动获取IP"></a>五、客户机自动获取IP</h1><ol><li><p>若客户机提前设置为自动获取IP，则DHCP服务器配置完后就会自动获取IP</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013141737.png" alt=""></p></li><li><p>查看客户机详细信息</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013142150.png" alt=""></p></li><li><p>查看服务器信息</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013142316.png" alt=""></p></li></ol><h1 id="六、释放IP与获取IP"><a href="#六、释放IP与获取IP" class="headerlink" title="六、释放IP与获取IP"></a>六、释放IP与获取IP</h1><ol><li><p>客户机释放IP：<code>ipconfig /release</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013142850.png" alt=""></p></li><li><p>获取IP（发送<code>DHCP Discovery</code>广播包重新获取新IP）：<code>ipconfig /renew</code>（因为只有一台客户机，所以IP和之前的相同）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013142850.png" alt=""></p><div class="note danger">            <p><code>ipconfig /release</code>  释放IP（取消租约，或者改为手动配置IP，也可以释放租约） </p><p><code>ipconfig /renew</code>   获取IP或续租IP，当有可用IP时，发送Request续约，无可用IP时发送Discovery重新获取IP</p>          </div></li></ol><h1 id="七、地址保留"><a href="#七、地址保留" class="headerlink" title="七、地址保留"></a>七、地址保留</h1><ol><li><p>作用：动态保留IP，给指定客户机分配一个固定IP（每次自动获取。都时固定的IP）</p></li><li><p>打开DHCP服务器，右键新建保留</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013144110.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013144255.png" alt=""></p></li><li><p>查看保留</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013144453.png" alt=""></p></li><li><p>客户机先释放IP，再重新获取IP</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013144612.png" alt=""></p></li></ol><h1 id="八、选项优先级"><a href="#八、选项优先级" class="headerlink" title="八、选项优先级"></a>八、选项优先级</h1><ol><li><p>作用域选项优先级 &gt; 服务器选项优先级</p></li><li><p>当服务器上有多个作用域时，可以在<strong>服务器选项</strong>（右键）上设置<strong>DNS服务器</strong>等相同类型的设置（一次完成多个作用域的修改）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013145922.png" alt=""></p></li><li><p>若<strong>作用域</strong>自己配置了<strong>DNS服务器</strong>，<strong>服务器选项</strong>也配置了DNS服务器，那么服务器<strong>首选</strong>作用域自己的DNS服务器（优先级）</p></li></ol><h1 id="九、DHCP备份与恢复"><a href="#九、DHCP备份与恢复" class="headerlink" title="九、DHCP备份与恢复"></a>九、DHCP备份与恢复</h1><ol><li><p>作用：导出配置文件，快速恢复DHCP配置</p></li><li><p>步骤如下图所示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013151741.png" alt=""></p></li><li><p>右键选择还原，将路径选择到备份文件目录，例如：<code>DHCP_backup</code></p></li><li><p>注意事项：删除DHCP服务器，必须选择<strong>作用域</strong>右键删除；若选择了第二行的服务器删除了，DHCP服务依然正常运行，只是在当前页面看不到而已，要想恢复，可以选择关闭当前页面，重新在开始菜单打开，或者如下图步骤：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/045DHCP%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%AE%89%E5%85%A8/20201013153654.png" alt=""></p></li></ol><h1 id="十、DHCP攻击与防御"><a href="#十、DHCP攻击与防御" class="headerlink" title="十、DHCP攻击与防御"></a>十、DHCP攻击与防御</h1><ol><li>攻击DHCP服务器：<ul><li>攻击：频繁的发送伪装DHCP请求，直到将DHCP地址池中的资源耗尽。</li><li>防御：在交换机（管理型）的端口上做动态MAC地址绑定。</li></ul></li><li>伪装DHCP服务器：<ul><li>攻击：hack通过将自己部署为DHCP服务器，为客户机提供非法IP地址</li><li>防御：在交换机上，除合法的DHCP服务器所在接口外，全部设置为禁止发送DHCP Offer广播包</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows文件共享</title>
      <link href="/posts/c69b937b/"/>
      <url>/posts/c69b937b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、准备材料"><a href="#一、准备材料" class="headerlink" title="一、准备材料"></a>一、准备材料</h1><ol><li>win2003系统作为服务器，并且关闭防火墙服务</li><li>winXP系统作为客户端，并且网段与服务器一致（与服务器互通）</li></ol><h1 id="二、服务器创建共享文件"><a href="#二、服务器创建共享文件" class="headerlink" title="二、服务器创建共享文件"></a>二、服务器创建共享文件</h1><ol><li><p>新建文件夹<strong>共享文件</strong>，右键属性 &gt;&gt; 共享（设置共享权限）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011093706.png" alt=""></p></li><li><p>给共享文件添加普通用户<code>wlet</code>并设置<strong>NTFS权限</strong>（注意先取消权限继承）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011101140.png" alt=""></p></li><li><p>共享权限影响</p><ul><li>在<strong>本地登录</strong>时只受<strong>NTFS权限</strong>影响</li><li><strong>远程登陆</strong>时，将受<strong>共享权限</strong>和<strong>NTFS权限</strong>共同影响，且取<strong>交集</strong></li><li>所以建议设置共享权限Everyone为完全控制，具体权限在NTFS权限设置即可</li></ul></li></ol><h1 id="三、客户端连接"><a href="#三、客户端连接" class="headerlink" title="三、客户端连接"></a>三、客户端连接</h1><h2 id="方式一：通用访问"><a href="#方式一：通用访问" class="headerlink" title="方式一：通用访问"></a>方式一：通用访问</h2><ol><li><p>在客户机上，输入地址即可登陆连接，点击共享名<code>share</code>即可进入共享文件夹如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011102358.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011103140.png" alt=""></p></li><li><p>或者用<code>IP + 共享名</code>（注意：共享名并不是文件夹名），直接进入共享文件夹内部</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011102738.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011102924.png" alt=""></p></li></ol><h2 id="方式二：映射网络驱动器"><a href="#方式二：映射网络驱动器" class="headerlink" title="方式二：映射网络驱动器"></a>方式二：映射网络驱动器</h2><ol><li><p>在服务器上创建共享文件夹<code>share</code>，新建普通用户<code>wlet</code>，密码为：<code>123</code>，配置静态IP为<code>10.0.0.2</code></p></li><li><p>使用客户机win7，打开DOS窗口，输入：<code>net use f: \\10.0.0.2\share 123 /user:wlet</code> （用户名：<code>wlet</code>；密码：<code>123</code>），命令行添加后，重启系统后就会失效</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201022145935.png" alt=""></p></li><li><p>永久添加映射网络驱动器，输入服务器账号密码即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201022165109.png" alt=""></p></li><li><p>相关命令：</p><ul><li><code>net use f: \\10.0.0.1\share 密码 /user:账户</code>（将服务器的共享文件夹<code>share</code>映射到本地磁盘<code>f</code>中，<code>f</code>盘不能真实存在）</li><li><code>net use f: \\10.0.0.1\c$ 密码 /user:账户</code></li><li><code>net use f: \\10.0.0.1\ipc$ 密码 /user:账户</code></li><li><code>net use</code>（查看本地所有的远程映射）</li><li><code>net use f: /del</code>（删除指定的远程映射盘符） </li><li><code>net use * /del</code>（删除所有的远程映射盘符）</li></ul></li></ol><h1 id="四、隐藏共享"><a href="#四、隐藏共享" class="headerlink" title="四、隐藏共享"></a>四、隐藏共享</h1><ol><li><p>创建隐藏共享：只需在<strong>共享名</strong>后面加上<code>$符号</code>，即可将共享文件夹隐藏</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011104105.png" alt=""></p></li><li><p>访问隐藏共享：在访问的路径上，只需加上隐藏文件的共享名<code>jm$</code>，即可进入隐藏文件夹</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011104621.png" alt=""></p></li></ol><h1 id="五、共享命令"><a href="#五、共享命令" class="headerlink" title="五、共享命令"></a>五、共享命令</h1><ol><li><p><code>net share</code> 查看计算机当前共享的所有文件 </p></li><li><p><code>net share aaa /del</code> 取消共享，aaa为共享名</p></li><li><p><code>net share d$=c:\</code> 创建隐藏共享，d为共享名，c:\为共享文件路径</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011105839.png" alt=""></p></li></ol><h1 id="六、关闭共享服务"><a href="#六、关闭共享服务" class="headerlink" title="六、关闭共享服务"></a>六、关闭共享服务</h1><ol><li><p>使用命令<code>net share aaa /del</code>取消共享后，重启服务器后，共享会自动恢复，所以必须用其他方式：修改注册表（永久关闭共享服务）</p></li><li><p><code>win + R</code>输入<code>regedit</code>打开注册表，定位到：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\lanmanserver\parameters</code>，右键新建一个DWORD类型的名为<code>Autoshareserver</code>的键，点击打开，设置值为<code>0</code>（此时的服务器已<strong>永久关闭</strong>自动启动<strong>共享服务</strong>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011111904.png" alt=""></p></li><li><p>先用命令取消共享，然后重启服务器，<code>net share</code>查看共享服务，此时共享服务就不会自动启动了，但是<code>IPC$</code>隐藏共享依然存在，并且<code>IPC$</code>隐藏共享是无法通过命令来取消的，必须关闭共享服务才能解决</p></li><li><p>继续<code>win + R</code>输入<code>services.msc</code>打开全部服务，选择<code>server</code>并禁用（可先关闭此服务）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011114747.png" alt=""></p></li><li><p>重启服务器，再次运行net share，此时的共享服务已完全被永久关闭</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011115600.png" alt=""></p></li></ol><h1 id="七、关闭445端口"><a href="#七、关闭445端口" class="headerlink" title="七、关闭445端口"></a>七、关闭445端口</h1><ol><li><p>作用：445端口是文件共享端口，所有的共享都要经过此端口，关闭此端口后，共享服务就无法完成了</p></li><li><p>配置高级安全防火墙：<strong>入站规则</strong>（注意：win7或win2008系统以上才有此功能）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201011120521.png" alt=""></p></li></ol><h1 id="八、445漏洞利用"><a href="#八、445漏洞利用" class="headerlink" title="八、445漏洞利用"></a>八、445漏洞利用</h1><ol><li><p>利用445端口爆破<code>administrator</code>账户的密码 </p></li><li><p>使用超级管理员账户远程登录服务器，并将服务器C盘映射到本地F盘</p></li><li><p>最后通过文件共享上传文件到C盘（administrator拥有完全控制权限）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201022152742.png" alt=""></p></li><li><p>打开服务器，查看文件是否成功被上传</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/044Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/20201022153318.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NTFS安全权限</title>
      <link href="/posts/7d527310/"/>
      <url>/posts/7d527310/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、NTFS权限概述"><a href="#一、NTFS权限概述" class="headerlink" title="一、NTFS权限概述"></a>一、NTFS权限概述</h1><ol><li><p>通过设置NTFS权限，实现不同的用户访问不同对象（文件/文件夹）的权限。</p></li><li><p>分配了正确的访问权限后，用户才能访问资源。</p></li><li><p>设置权限防止资源被篡改和删除。</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008171232.png" alt=""></p></li></ol><h1 id="二、文件系统概述"><a href="#二、文件系统概述" class="headerlink" title="二、文件系统概述"></a>二、文件系统概述</h1><ol><li><p>文件系统（存储文件的方式）：即在外部存储设备上组织文件的方法。</p></li><li><p>常见的文件系统：格式化 == 制作文件系统</p><ul><li><code>FAT</code>格式： windows </li><li><code>NTFS</code>格式：windows </li><li><code>EXT</code>格式：liunx 常见</li></ul></li><li><p>格式化：格式化的过程就是把硬盘的所有数据抹除，然后重新在该硬盘上打格子（存储单元）格子有大有小，默认4096字节/4KB</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008171806.png" alt=""></p></li></ol><h1 id="三、NTFS文件系统的特点"><a href="#三、NTFS文件系统的特点" class="headerlink" title="三、NTFS文件系统的特点"></a>三、NTFS文件系统的特点</h1><ol><li>提高磁盘读写性能</li><li>可靠性，加密文件系统，访问控制列表-ACL（设置权限）</li><li>磁盘利用率，压缩，磁盘配额（为不同的用户设置使用空间）</li><li>支持单个文件大于4个G</li></ol><h1 id="四、修改NTFS权限"><a href="#四、修改NTFS权限" class="headerlink" title="四、修改NTFS权限"></a>四、修改NTFS权限</h1><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><table><thead><tr><th>文件权限</th><th>权限内容</th></tr></thead><tbody><tr><td>完全控制</td><td>拥有读取、写入、修改、删除文件、及特殊的权限</td></tr><tr><td>修改</td><td>拥有读取、写入、修改、删除文件的权限</td></tr><tr><td>读取和执行</td><td>拥有读取、及执行文件的权限</td></tr><tr><td>读取</td><td>拥有读取文件的权限</td></tr><tr><td>写入</td><td>拥有修改文件内容的权限</td></tr><tr><td>特殊权限</td><td>控制文件权限列表的权限</td></tr></tbody></table><h2 id="文件夹权限"><a href="#文件夹权限" class="headerlink" title="文件夹权限"></a>文件夹权限</h2><table><thead><tr><th>文件夹权限</th><th>权限内容</th></tr></thead><tbody><tr><td>完全控制</td><td>拥有对文件及文件夹读取、写入、修改、删除文件、及特殊的权限</td></tr><tr><td>修改</td><td>拥有对文件及文件夹读取、写入、修改、删除文件的权限</td></tr><tr><td>读取和执行</td><td>拥有对文件夹中的文件下载、读取、及执行的权限</td></tr><tr><td>读取</td><td>拥有对文件夹中的文件下载、读取的权限</td></tr><tr><td>写入</td><td>拥有在文件夹中创建新的文件的权限</td></tr><tr><td>特殊权限</td><td>控制文件夹权限列表的权限</td></tr></tbody></table><h2 id="取消权限继承"><a href="#取消权限继承" class="headerlink" title="取消权限继承"></a>取消权限继承</h2><ol><li><p>作用：取消后可以任意修改权限列表</p></li><li><p>方法：文件夹右键属性 &gt;&gt; 安全 &gt;&gt; 高级 &gt;&gt; 去掉第一个对号 &gt;&gt; 选择复制 &gt;&gt; 应用（win2003系统）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008173928.png" alt=""></p></li></ol><h2 id="文件及文件夹权限"><a href="#文件及文件夹权限" class="headerlink" title="文件及文件夹权限"></a>文件及文件夹权限</h2><ol><li><p>在<code>D盘</code>创建目录（文件夹）名为：<strong>最高机密</strong>，文件夹右键属性 &gt;&gt; 安全 &gt;&gt; 选择<code>Users</code>组，发现普通用户组的权限有些默认是已经勾选的，并且无法修改，这是因为该文件夹的权限继承了它的父级权限也是就是<code>D盘</code>的权限</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008181351.png" alt=""></p></li><li><p>想要修改<code>D盘</code>下的<strong>最高机密</strong>文件夹的权限，就需要先取消与<code>D盘</code>的继承关系，如下图所示把勾选去掉：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008181823.png" alt=""></p></li><li><p>取消继承后，就可以任意修改默认的权限了</p></li><li><p>案例说明：</p><ul><li><p>在<code>D盘</code>目录下创建文件夹，并命名为<strong>最高机密</strong>，进入<strong>最高机密</strong>文件夹中，再创建一个文件夹命名为<strong>密码</strong>，并且在创建一个文本文件并写入内容</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008182440.png" alt=""></p></li><li><p>管理员创建两个账户<code>a</code>和<code>b</code>，</p></li><li><p><code>a</code>用户对<strong>最高机密</strong>文件夹只有<strong>打开</strong>和<strong>读取</strong>权限</p></li><li><p><code>b</code>用户对<strong>最高机密</strong>文件夹有<strong>读取</strong>和<strong>写入</strong>权限</p></li></ul></li><li><p>案例步骤：</p><ul><li><p>取消<strong>最高机密</strong>文件夹和D盘的继承关系</p></li><li><p>创建<code>a</code>，<code>b</code>两个账户（默认的普通用户组）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008183125.png" alt=""></p></li><li><p>右键<strong>最高机密</strong>文件夹 &gt;&gt; 属性 &gt;&gt; 安全，删除其他用户只留一个超级管理员（administrator），同时将a，b账户添加到<strong>最高机密</strong>文件夹的权限表中，如下图所示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008184335.png" alt=""></p></li><li><p><code>a</code>账户权限默认即可，<code>b</code>账户权限只选择<strong>列出文件夹目录</strong>、<strong>写入</strong>，如下图所示</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008184850.png" alt=""></p></li><li><p>登陆<code>a</code>账户验证权限：只能打开文件，无法删除此文件、创建文件夹及文件</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008185428.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008185600.png" alt=""></p></li><li><p>登陆<code>b</code>账户验证权限：无法打开文件（包括自己创建的）；可以创建文件及文件夹，但是无法重命名、删除</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008190116.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201008190137.png" alt=""></p></li></ul></li></ol><h1 id="五、权限累加"><a href="#五、权限累加" class="headerlink" title="五、权限累加"></a>五、权限累加</h1><ul><li>当用户同时属于多个组时，权限是累加的</li><li>用户最终权限 = 用户自定义权限 + 组权限（等价于<strong>并集</strong>）</li><li>当一个权限，同时处于<strong>允许</strong>和<strong>拒绝</strong>时，<strong>拒绝</strong>权限为第一位，权限最终设定为<strong>拒绝</strong></li></ul><h1 id="六、系统最大权限"><a href="#六、系统最大权限" class="headerlink" title="六、系统最大权限"></a>六、系统最大权限</h1><ol><li><p>超级管理员组<code>administrators</code>拥有系统的最高权限，可对其他低权限的用户的文件及文件夹，进行权限修改</p></li><li><p>如下示例：</p><ul><li><p>低权限<code>b用户</code>，新建文件夹：<strong>b的个人文件</strong>，在文件权限表中，删除所有的用户，包括管理员组（注意先取消权限继承）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010161317.png" alt=""></p></li><li><p>给b用户完全控制权限，b用户就可以完全控制此文件夹：<strong>b的个人文件</strong></p></li><li><p>登陆administrator用户，发现对此文件夹无法进行操作</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010162034.png" alt=""></p></li><li><p>文件右键<strong>属性</strong> &gt;&gt; <strong>安全</strong> &gt;&gt; <strong>确定</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010162146.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010162406.png" alt=""></p></li><li><p>替换权限后，<strong>b用户</strong>就失去了对此文件夹的控制权限，连<strong>安全</strong>选项都没有了</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010162900.png" alt=""></p></li></ul></li></ol><h1 id="七、强制继承"><a href="#七、强制继承" class="headerlink" title="七、强制继承"></a>七、强制继承</h1><ol><li><p>作用：高权限用户可对低权限用户，实行强制继承，只要高权限用户设置了强制继承，低权限用户就无法修改高权限用户设定的权限</p></li><li><p>如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/043NTFS%E5%AE%89%E5%85%A8%E6%9D%83%E9%99%90/20201010165513.png" alt=""></p></li></ol><h1 id="八、文件移动和复制对权限的影响"><a href="#八、文件移动和复制对权限的影响" class="headerlink" title="八、文件移动和复制对权限的影响"></a>八、文件移动和复制对权限的影响</h1><ol><li>在同一分区下，复制文件，权限会被指定的文件夹权限所覆盖；移动文件，文件会保留自己的权限</li><li>在不同的分区下，不管时复制还是移动，文件的权限都会被指定的文件夹权限所覆盖</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NTFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解win7系统密码</title>
      <link href="/posts/18641619/"/>
      <url>/posts/18641619/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><ol><li>所用的win7系统必须有粘滞键功能</li><li>win7系统必须存在记事本漏洞</li></ol><h1 id="破解原理"><a href="#破解原理" class="headerlink" title="破解原理"></a>破解原理</h1><ul><li>正常情况下在开机后按<strong>5</strong>次<code>shift键</code>会弹出<strong>粘滞键</strong><code>sethc</code>程序（已登陆和未登录都可以），假如我们把该程序换成<code>cmd</code>程序就可以在未登录时进入DOS窗口，然后新建用户、修改密码等一系列操作</li></ul><h1 id="破解步骤"><a href="#破解步骤" class="headerlink" title="破解步骤"></a>破解步骤</h1><ol><li><p>正常打开虚拟机，在虚拟机打开的过程中（未出现登陆页面之前），强制关闭客户机（若为物理机直接断电即可），此步骤极为重要</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008161811.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008162008.png" alt=""></p></li><li><p>继续正常开机 &gt;&gt; 启动修复，如下图所示的界面：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008151750.png" alt=""></p></li><li><p>点击<code>取消</code>按钮，取消系统还原（此时需要耐心等待许久）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008151943.png" alt=""></p></li><li><p>点击查看问题详细信息，下滑至最下方的超链接（本地链接），点击超链接进入记事本界面</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008153150.png" alt=""></p></li><li><p>点击<strong>记事本</strong>中的<code>文件</code>选择<code>打开</code>，进入计算机内部</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008153416.png" alt=""></p></li><li><p>进入存放系统文件的盘（<code>D盘</code>），如下图所示的<code>C盘</code>为系统保留盘，并非正真的<code>C盘</code>，<code>D盘</code>才是系统正真的<code>C盘</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008153955.png" alt=""></p></li><li><p>进入系统盘（<code>D盘</code>），绝对路径：<code>C:\windows\system32</code>，文件类型选择<strong>所有文件</strong></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008154236.png" alt=""></p></li><li><p>找到<code>sethc.exe</code>这个程序并<strong>重命名</strong>，名称任意，目的是为了我们下次在按5次<code>shift键</code>时不运行该程序（注意观察程序的图标）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008154722.png" alt=""></p></li><li><p>将该目录下的<code>cmd</code>重命名为<code>sethc</code>目的是我们在按5次<code>shift键</code>时运行的是改名后的<code>sethc</code>也就是系统的<code>cmd</code>程序（DOS窗口）；系统默认，在我们连续按5次按<code>shift键</code>后会去<code>C:\windows\system32</code> 下找<code>sethc</code>这个名称的程序，然后运行</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008155026.png" alt=""></p></li><li><p>重启系统，连续按5次<code>shift键</code>，进入DOS窗口，修改密码即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008155953.png" alt=""></p></li><li><p>输入修改后的密码，进入以下目录<code>C:\windows\system32</code>，可看到在未登录时的操作痕迹</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008160358.png" alt=""></p></li><li><p>进入系统后，必须将之前的文件名还原，否则会出现以下情况（重新进入<strong>启动修复</strong>界面，继续运行即可自动恢复，但是改名后的粘滞键程序会保留在目录下）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/042%E7%A0%B4%E8%A7%A3win7%E7%B3%BB%E7%BB%9F%E5%AF%86%E7%A0%81/20201008163206.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win7系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows远程连接</title>
      <link href="/posts/ff7043b8/"/>
      <url>/posts/ff7043b8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、远程管理类型"><a href="#一、远程管理类型" class="headerlink" title="一、远程管理类型"></a>一、远程管理类型</h1><ul><li>Windows远程管理有两种类型：<ol><li>远程桌面（图形化界面）</li><li>Telnet（命令行）</li></ol></li></ul><h1 id="二、远程桌面连接"><a href="#二、远程桌面连接" class="headerlink" title="二、远程桌面连接"></a>二、远程桌面连接</h1><ol><li><p>前提条件：</p><ul><li>客户机和服务机可以互通（关闭防火墙、IP在同一段）</li><li>服务器必须开启，允许被远程控制（我的电脑右键属性 &gt;&gt; 远程设 &gt;&gt; 勾选远程桌面 &gt;&gt; 应用 &gt;&gt; 确定）</li></ul></li><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930172827.png" alt=""></p></li><li><p>winXP配置（远程连接端）</p><ul><li>网络适配器（虚拟机）：NAT模式</li><li>IP：192.168.25.136</li><li>防火墙：开启</li><li>远程控制：关闭（默认）</li></ul></li><li><p>win2003配置（被远程连接端）</p><ul><li>网络适配器（虚拟机）：NAT模式</li><li>IP：192.168.25.135</li><li>防火墙：关闭</li><li>远程控制：开启</li></ul></li><li><p>远程连接</p><ul><li><p>测试是否可以ping通服务器（win2003）：<code>ping -n 6 192.168.25.135</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930172852.png" alt=""></p></li><li><p>打开远程连接程序：<code>win + R</code> &gt;&gt; <code>mstsc.exe</code> （.exe可省略）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930173338.png" alt=""></p></li><li><p>输入超级管理员账号密码登陆：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930173816.png" alt=""></p></li></ul></li><li><p>注意事项：</p><ul><li><p>超级管理员（administrator）拥有被远程登陆的权限，但是普通用户（wlet）并没有，如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930174343.png" alt=""></p></li><li><p>赋予普通用户，被远程登陆权限：<code>net localgroup &quot;Remote Desktop Users&quot; wlet /add</code> （注意双引号，也可在<code>Remote Desktop Users属性</code>中点击添加）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930175115.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930175544.png" alt=""></p></li></ul></li></ol><h1 id="三、Telnet服务"><a href="#三、Telnet服务" class="headerlink" title="三、Telnet服务"></a>三、Telnet服务</h1><ol><li><p>开启Telnet服务（默认关闭）：<code>win + R</code> &gt;&gt; <code>services.msc</code> （注意：启动Telnet服务）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930180002.png" alt=""></p></li><li><p>将普通用户（wlet）添加到Telnet组：<code>net localgroup &quot;TelnetClients&quot; wlet /add</code> （administrator可不用添加）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930180613.png" alt=""></p></li><li><p>远程连接：<code>telnet 192.168.25.135</code> （需要输入账户密码）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930182017.png" alt=""></p></li><li><p>注意事项：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/041%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9C%E7%A8%8B%E7%AE%A1%E7%90%86/20200930181743.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程连接 </tag>
            
            <tag> Telnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows用户和组管理</title>
      <link href="/posts/875a0d45/"/>
      <url>/posts/875a0d45/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、用户管理"><a href="#一、用户管理" class="headerlink" title="一、用户管理"></a>一、用户管理</h1><h2 id="用户概述"><a href="#用户概述" class="headerlink" title="用户概述"></a>用户概述</h2><ol><li><p>说明：</p><ul><li>每一个用户登录系统后，拥有不同的操作权限</li><li>每个账户都有自己唯一的SID（安全标识符）</li><li>SID全称：S-1-5-21-426206823-2579496042-14852678-500</li><li>系统SID：1-5-21-426206823-2579496042-14852678</li><li>用户UID：500</li><li>Windows系统管理员administrator的UID是500</li><li>普通用户的UID从1000开始</li><li>不同的账户拥有不同的权限，为不同的账户赋权限，也就是为不同账户的SID赋权限</li></ul></li><li><p>查看SID命令：<code>whoami /user</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20200929150849.png" alt=""></p></li><li><p>Windows账户密码存储位置：<code>C:\windows\system32\config\SAM</code></p></li><li><p>Windows系统上，默认密码最长有效期42天（可自定义有效期）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20200929152010.png" alt=""></p></li></ol><h2 id="内置账户"><a href="#内置账户" class="headerlink" title="内置账户"></a>内置账户</h2><ol><li><p>给人使用的账户：</p><ul><li>管理员账户：<code>administrator</code></li><li>来宾账户：<code>guest</code></li><li>普通用户：<code>user</code></li></ul></li><li><p>给计算机使用的账户：</p><ul><li>系统账户 == 权限至高无上：<code>system</code> </li><li>本地服务账户 == 权限等于普通用户：<code>local services</code> </li><li>网络服务账户 == 权限等于普通用户：<code>network services</code> </li></ul></li><li><p>图形化示例（<code>win + R</code> &gt;&gt; <code>compmgmt.msc</code>）：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20200929165704.png" alt=""></p></li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ul><li>每个用户都有自己的配置文件（家目录）在用户第一次登录时自动产生</li><li>路径：<code>C:\用户\</code>（win7 / win8 / win10）；<code>C:\Documents and Settings\</code>（xp / win2003）</li></ul><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net user                    <span class="comment"># 列出当前计算机账户列表</span></span><br><span class="line">net user administrator      <span class="comment"># 查看用户详细信息</span></span><br><span class="line">net user administrator <span class="number">123</span>  <span class="comment"># 修改administrator账户的密码为123</span></span><br><span class="line">net user andy <span class="number">123</span> /add      <span class="comment"># 添加新用户andy，密码设置为123</span></span><br><span class="line">net user andy /del          <span class="comment"># 删除用户andy</span></span><br><span class="line">net user andy /active:no    <span class="comment"># 激活/禁用账户（激活：yes 禁用：no）</span></span><br></pre></td></tr></table></figure><h1 id="二、组管理"><a href="#二、组管理" class="headerlink" title="二、组管理"></a>二、组管理</h1><h2 id="组概述"><a href="#组概述" class="headerlink" title="组概述"></a>组概述</h2><ol><li>组的作用：简化权限的赋予</li><li>赋权限的方式：<ul><li>用户 &gt;&gt; 组 &gt;&gt; 赋权限</li><li>用户 &gt;&gt; 赋权限</li></ul></li></ol><h2 id="内置组"><a href="#内置组" class="headerlink" title="内置组"></a>内置组</h2><ol><li><p>内置组的权限默认已经被系统赋予</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">administrators        <span class="comment"># 管理员组 </span></span><br><span class="line">guests                <span class="comment"># 来宾组 </span></span><br><span class="line">users                 <span class="comment"># 普通用户组，默认新建用户都属于这个组 </span></span><br><span class="line">network  <span class="comment"># 网络配置组 </span></span><br><span class="line">print                 <span class="comment"># 打印机组 </span></span><br><span class="line">Remote Desktop        <span class="comment"># 远程桌面组</span></span><br></pre></td></tr></table></figure></li><li><p>图形化示例：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20200929171525.png" alt=""></p></li></ol><h2 id="组管理命令"><a href="#组管理命令" class="headerlink" title="组管理命令"></a>组管理命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net localgroup                    <span class="comment"># 查看组列表</span></span><br><span class="line">net localgroup 组名               <span class="comment"># 查看该组成员</span></span><br><span class="line">net localgroup 组名 /add          <span class="comment"># 创建一个新的组</span></span><br><span class="line">net localgroup 组名 /del           <span class="comment"># 删除组</span></span><br><span class="line">net localgroup 组名 用户名 /add    <span class="comment"># 添加用户到组</span></span><br><span class="line">net localgroup 组名 用户名 /del    <span class="comment"># 从组中踢出用户</span></span><br></pre></td></tr></table></figure><h1 id="创建隐藏账户"><a href="#创建隐藏账户" class="headerlink" title="创建隐藏账户"></a>创建隐藏账户</h1><ol><li><p>第一步：在DOS窗口创建新用户new，并将其加入超级管理员组</p><ul><li><p><code>net user news$ 123 /add</code> （<code>$</code>表示在DOS窗口隐藏，此时创建的账户可在<code>计算机管理</code>中看到）</p></li><li><p><code>net localgroup administrators news$ /add</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003112309.png" alt=""></p></li></ul></li><li><p>第二步：展开注册表<code>HKEY_LOCAL_MACHINE \ SAM \ SAM</code>（默认情况下这个项里没有任何内容，这是因为用户对它没有权限，右键<code>SAM</code>目录为<code>administrator</code>赋予<strong>完全控制</strong>权限）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003112800.png" alt=""></p></li><li><p>第三步：先关闭注册表（让第二步功能生效），再打开注册表<code>HKEY_LOCAL_MACHINE \ SAM \ SAM \ SAMDomains \ Account \ Users \ Names</code>里面显示了系统当前存在的所有账户，选中news$, 在其右侧有一个名为“<strong>默认</strong>”，类型为”0x3ee”的键值。其中的“3ee”就是<code>news$</code>用户SID的结尾，即RID (这里使用十六进制表示）；在<code>Users</code>目录下有一个以“3EE”结尾的子项，这两个项里都是存放了用户<code>news$</code>的信息；在这两个项上单击右键，执行“<strong>导出</strong>”命令，将这两个项的值分别导出成扩展名为<code>xxx.reg</code>的注册表文件</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003113933.png" alt=""></p></li><li><p>第四步：打开DOS窗口，删除<code>news$</code>账户：<code>net user news$ /del</code>，重新打开注册表、计算机管理，确认已删除此账户</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003114335.png" alt=""></p></li><li><p>第五步：双击运行刚导出的<code>news.reg</code>和<code>news_name.reg</code>文件，再次打开注册表、计算机管理，确认在注册表中显示此账户、计算机管理中不显示；使用这个隐藏账户<code>news$</code>（注意添加<code>$</code>）可以登录系统，但缺点是仍然会产生用户配置文件，下面再对这个账户进行处理，进一步深度隐藏</p></li><li><p>第六步：打开注册表，找到<code>administrator</code>用户 的RID值“<code>1f4</code>”，展开对应的“<code>000001F4</code>“项</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003115732.png" alt=""></p><p>点击<code>000001F4</code>其右侧有一个名为<code>F</code>的键值，这个键值中就存放了用户的SID；下面将这个键值的数据全部复制，并粘贴到<code>000003EE</code>项的<code>F</code>键值中，也就是将<code>administrator</code>用户的SID复制给了<code>news$</code>，这样在操作系统内部，实际上就把<code>news$</code>当做是<code>administrator</code>，此时的<code>news$</code>成了<code>administrator</code>的影子账户，与其使用同一个用户配置文件，<code>news$</code>账户也就被深度隐藏了</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003120410.png" alt=""></p></li><li><p>第七步：检查DOS窗口、计算机管理，确认不显示此账户<code>news$</code>，最后注销当前系统，登陆<code>news$</code>账户，密码<code>123</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/040Windows%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/20201003121336.png" alt=""></p></li><li><p>注意事项：</p><ul><li>成功创建影子账户后，不管是在哪个账户操作，其操作痕迹都会在另一个账户中出现（因为使用同一个配置文件），例如：创建的文件及文件夹（注意隐藏）</li><li>影子账户在<code>regedit</code>（注册表）中显示，不能删除，所以，可反向检查系统安全</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows用户和组 </tag>
            
            <tag> 隐藏账户 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOS命令及批处理编写</title>
      <link href="/posts/30fb71b3/"/>
      <url>/posts/30fb71b3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、常用DOS命令"><a href="#一、常用DOS命令" class="headerlink" title="一、常用DOS命令"></a>一、常用DOS命令</h1><h2 id="系统操作相关命令"><a href="#系统操作相关命令" class="headerlink" title="系统操作相关命令"></a>系统操作相关命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">start  <span class="comment"># 开启一个新的DOS窗口</span></span><br><span class="line">cd ..  <span class="comment"># 返回上级目录</span></span><br><span class="line">cd \  <span class="comment"># 返回根目录</span></span><br><span class="line">d:  <span class="comment"># 进入D盘</span></span><br><span class="line">cls  <span class="comment"># 清空所有dos操作</span></span><br><span class="line">rd . /s/q  <span class="comment"># 清空磁盘</span></span><br><span class="line">logoff  <span class="comment"># 注销系统</span></span><br><span class="line">shutdown <span class="literal">-s</span> <span class="literal">-t</span> <span class="number">100</span> <span class="operator">-f</span> <span class="literal">-c</span> <span class="string">"认命吧！"</span>  <span class="comment">#-s关闭系统，-t指定时间为100秒后，-f强制关机，-c输入关机提示（注意：取消定时操作必须要用命令完成）</span></span><br><span class="line">shutdown <span class="literal">-r</span> <span class="literal">-t</span> <span class="number">100</span>  <span class="comment"># -r重启系统，在100秒后（同上）</span></span><br><span class="line">shutdown <span class="literal">-a</span>  <span class="comment"># 取消一切定时操作（包括关机、重启）</span></span><br><span class="line">shutdown <span class="literal">-l</span>  <span class="comment"># 注销系统（同logoff）</span></span><br><span class="line">color ?  <span class="comment"># 查询颜色配置</span></span><br><span class="line">color <span class="number">0</span>a  <span class="comment"># 修改命令行字体、背景颜色</span></span><br></pre></td></tr></table></figure><h2 id="文件相关命令"><a href="#文件相关命令" class="headerlink" title="文件相关命令"></a>文件相关命令</h2><ol><li><p>增</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">md a b  <span class="comment"># 创建文件夹a和b，可一次创建多个</span></span><br><span class="line">echo <span class="number">123</span> &gt; D:\test.txt  <span class="comment"># 在D:\盘下创建一个test.txt文件，内容为123（省略内容，会添加默认的内容）</span></span><br><span class="line">copy con a.txt   <span class="comment"># 动态写入文本内容    ctrl+z 回车退出保存</span></span><br></pre></td></tr></table></figure></li><li><p>删</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rd wenjianjia    <span class="comment"># 删除文件夹</span></span><br><span class="line">rd . /s/q  <span class="comment"># 删除当前路径下的所有文件夹及文件（慎用）</span></span><br><span class="line">del a.txt        <span class="comment"># 删除指定文件</span></span><br><span class="line">del *.txt        <span class="comment"># 删除以txt结尾的所有文件</span></span><br><span class="line">del *.*          <span class="comment"># 删除所有文件</span></span><br><span class="line">del a.txt  /q    <span class="comment"># 不提示直接删除</span></span><br><span class="line">del *.txt  /s/q  <span class="comment"># 递归删除且不提示    文件夹保留 文件删除</span></span><br></pre></td></tr></table></figure></li><li><p>改</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">attrib +h wenjianjia  <span class="comment"># 隐藏文件夹</span></span><br><span class="line">attrib <span class="literal">-h</span> wenjianjia  <span class="comment"># 取消文件夹隐藏属性</span></span><br><span class="line">attrib +h +s +a wenjianjia  <span class="comment"># 将此文件夹属性修改为，+s受系统保护，+h隐藏文件，+a只读</span></span><br><span class="line">attrib <span class="literal">-h</span> <span class="literal">-s</span> <span class="literal">-a</span> wenjianjia  <span class="comment"># 取消对应的属性</span></span><br><span class="line">copy .\test.txt ..\a\test.py  <span class="comment"># 复制指定文件，到指定路径下（当前路径下的test.txt文件，到上一个文件夹中的b文件夹中，可重命名为test.py）</span></span><br><span class="line">copy muma.exe \\<span class="number">10.0</span>.<span class="number">02</span>\c:\     <span class="comment"># 网络传输，复制文件，到指定目标电脑，的指定路径下</span></span><br><span class="line">move .\test.txt .\a\  <span class="comment"># 移动指定文件，到指定路径下</span></span><br><span class="line">ren .\test.txt .\a\test666.py  <span class="comment"># 修改指定文件或文件夹名，到指定路径下</span></span><br></pre></td></tr></table></figure></li><li><p>查</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dir  <span class="comment"># 查看当前目录下的所有文件夹及文件</span></span><br><span class="line">dir /a  <span class="comment"># 查看当前目录下的所有文件夹及文件（包括普通的隐藏文件和受系统保护的隐藏文件）</span></span><br><span class="line">dir C:\windows | more  <span class="comment"># 分页查看目录（回车键或空格键继续查看）</span></span><br><span class="line">type a.txt       <span class="comment"># 查看所有文本内容</span></span><br><span class="line">type a.txt | more   <span class="comment"># 分页查看文件内容（|more可与其他命令联用）</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="恶搞系统相关命令"><a href="#恶搞系统相关命令" class="headerlink" title="恶搞系统相关命令"></a>恶搞系统相关命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在C:/盘快速生成一个空文件：system.ini，大小可设置为4096000000字节（可利用文件隐藏属性，占用大量内存空间）</span></span><br><span class="line">fsutil file createnew C:\system.ini <span class="number">4096000000</span>  <span class="comment"># 可随意更改文件大小</span></span><br><span class="line">assoc .txt=exefile  <span class="comment"># 修改文件的关联性，将.txt格式的，文件的属性，修改为exe属性</span></span><br><span class="line">assoc .txt=txtfile  <span class="comment"># 还原文件属性</span></span><br></pre></td></tr></table></figure><h1 id="二、批处理编写"><a href="#二、批处理编写" class="headerlink" title="二、批处理编写"></a>二、批处理编写</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol><li>说明：批处理就是对某对象进行批量的处理，通常被认为是一种简化的脚本语言，它应用于<code>DOS</code>和<code>Windows</code>系统中</li><li>别名：批处理脚本、<code>DOS</code>脚本</li><li>扩展名：<code>.bat</code></li><li>常见的批处理类型：<code>DOS</code>批处理、<code>PS</code>批处理（<code>photoshop</code>）</li><li>批处理作用：自上而下成批的处理每一行<code>DOS</code>命令，直到执行最后一条</li></ol><h2 id="创建批处理"><a href="#创建批处理" class="headerlink" title="创建批处理"></a>创建批处理</h2><ol><li>创建一个<code>xxx.bat</code>格式的文件，在此文件中输入批处理语言即可（注意扩展名：<code>.bat</code>）</li><li>批处理语言就是将<code>DOS</code>命令连接起来，批量使用</li></ol><h2 id="批处理基本语法"><a href="#批处理基本语法" class="headerlink" title="批处理基本语法"></a>批处理基本语法</h2><ol><li><p><code>@echo off</code>：关闭回显功能，也就是屏蔽执行过程，建议放置在批处理首行</p></li><li><p><code>pause</code>：暂停批处理运行</p></li><li><p><code>title</code>：给程序添加标题</p></li><li><p><code>color 0a</code>：修改命令行背景和字体颜色</p></li><li><p><code>echo.</code>：在<code>DOS</code>窗口中空一行（注意<code>.</code>点号）</p></li><li><p><code>:menu</code>：给代码块命名（<code>menu</code>为代码块名称，可自定义任意名称）</p></li><li><p><code>goto menu</code>：跳转到<code>menu</code>代码块，并开始执行该代码块的命令</p></li><li><p><code>&gt;nul</code>：正确输出不打印</p></li><li><p><code>2&gt;nul</code>：错误输出不打印</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping <span class="literal">-n</span> <span class="number">10</span> <span class="number">127.0</span>.<span class="number">0.1</span> &gt;nul <span class="number">2</span>&gt;nul  <span class="comment"># 不管此命令执行成功还是失败，都不返回结果</span></span><br></pre></td></tr></table></figure></li><li><p><code>%input%</code>：获取<code>input</code>这个变量的值（<code>input</code>可自定义任意名称）</p></li><li><p><code>start</code>：开启新的cmd命令行窗口</p></li><li><p><code>if &quot;%input%&quot;==&quot;1&quot; goto a</code>：判断语句，如果input这个变量等于<code>1</code>就跳转到代码块<code>a</code>，执行代码块<code>a</code>下的命令</p></li><li><p><code>set /p input=请输入关机时间（单位/秒）</code>：等待用户输入，并将输入的值赋给<code>input</code>这个变量；不加<code>/p</code>代表变量的值必须为<code>=</code>后面的值</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用户自定义关机时间</span></span><br><span class="line">@echo off</span><br><span class="line">set /p input=请输入关机时间（单位/秒）：</span><br><span class="line">shutdown <span class="literal">-s</span> <span class="operator">-f</span> <span class="literal">-t</span> %input%</span><br></pre></td></tr></table></figure></li><li><p><code>%userprofile%</code>：特殊的变量值，可获取当前用户家目录的绝对路径（系统自带）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动  <span class="comment"># 开机启动项路径</span></span><br><span class="line"><span class="string">"%userprofile%\「开始」菜单\程序\启动\muma.bat"</span>  <span class="comment"># 在开机启动项中生成一个程序muma.bat   </span></span><br><span class="line">%userprofile%  == C:\Documents and Settings\Administrator</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/039DOS%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%89%B9%E5%A4%84%E7%90%86%E7%BC%96%E5%86%99/20200927170753.png" alt=""></p></li><li><p><code>ntsd -c q -pn winlogon.exe</code>：强制杀死登录进程（蓝屏），仅适用于win2003或winXP系统</p></li><li><p><code>taskkill /im explorer.exe /f</code>：杀死桌面，<code>/f</code>强制（注意：取消代码块中的注释）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">color <span class="number">0</span>a</span><br><span class="line">title 恶搞小程序</span><br><span class="line">taskkill /im explorer.exe /f &gt;nul <span class="number">2</span>&gt;nul</span><br><span class="line">echo 傻了吧，桌面没了！（友情提示：等待<span class="number">10</span>秒种...）</span><br><span class="line">ping <span class="literal">-n</span> <span class="number">10</span> <span class="number">127.0</span>.<span class="number">0.1</span> &gt;nul <span class="number">2</span>&gt;nul</span><br><span class="line">start C:\windows\explorer.exe  <span class="comment"># 重启桌面</span></span><br><span class="line">echo 哈！哈！哈！开了个小玩笑！</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li><li><p>最简单的木马之一（慎用）：</p><ul><li><p>强调：最好在虚拟机中做实验（快照），否则后果自负</p></li><li><p>作用：循环打开新<code>DOS</code>窗口（无限），占用CPU，让用户无法使用电脑，可以让电脑蓝屏、死机等（加入开机启动项后，开机自启）</p></li><li><p>示例：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx:</span><br><span class="line">start</span><br><span class="line">goto xxx</span><br></pre></td></tr></table></figure></li></ul></li><li><p>示例（注意代码块d：添加开机启动项）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">color <span class="number">0</span>a</span><br><span class="line">title 我的QQ</span><br><span class="line"></span><br><span class="line">:menu</span><br><span class="line">cls</span><br><span class="line">echo ===========================</span><br><span class="line">echo            菜单</span><br><span class="line">echo         <span class="number">1</span>.定时关机</span><br><span class="line">echo         <span class="number">2</span>.取消定时</span><br><span class="line">echo         <span class="number">3</span>.退出</span><br><span class="line">echo         <span class="number">4</span>.在开机启动项添加脚本</span><br><span class="line">echo ===========================</span><br><span class="line"></span><br><span class="line">set /p input=请选择：</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">"%input%"</span>==<span class="string">"1"</span> goto a</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%input%"</span>==<span class="string">"2"</span> goto b</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%input%"</span>==<span class="string">"3"</span> goto c</span><br><span class="line"><span class="keyword">if</span> <span class="string">"%input%"</span>==<span class="string">"4"</span> goto d</span><br><span class="line"></span><br><span class="line">echo 没有此选项，请输入正确的选项！！！</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:a</span><br><span class="line">set /p num=请输入想要关机的时间：</span><br><span class="line">shutdown <span class="literal">-s</span> <span class="operator">-f</span> <span class="literal">-t</span> %num%</span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:b</span><br><span class="line">shutdown <span class="literal">-a</span></span><br><span class="line">goto menu</span><br><span class="line"></span><br><span class="line">:c</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">:d </span><br><span class="line">echo :d &gt;&gt; <span class="string">"%userprofile%\「开始」菜单\程序\启动\muma.bat"</span></span><br><span class="line">echo start &gt;&gt; <span class="string">"%userprofile%\「开始」菜单\程序\启动\muma.bat"</span></span><br><span class="line">echo goto d &gt;&gt; <span class="string">"%userprofile%\「开始」菜单\程序\启动\muma.bat"</span></span><br><span class="line">echo 脚本已添加完成，下次开机启动！</span><br><span class="line">pause</span><br><span class="line">goto menu</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/039DOS%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%89%B9%E5%A4%84%E7%90%86%E7%BC%96%E5%86%99/20200927175206.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/039DOS%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%89%B9%E5%A4%84%E7%90%86%E7%BC%96%E5%86%99/20200927175442.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOS命令 </tag>
            
            <tag> Windows批处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP地址详解</title>
      <link href="/posts/9f29db36/"/>
      <url>/posts/9f29db36/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、简单局域网的构成"><a href="#一、简单局域网的构成" class="headerlink" title="一、简单局域网的构成"></a>一、简单局域网的构成</h1><ol><li><p>局域网（Local Area Network，LAN）是指在某一区域内由多台计算机互联成的计算机组。一般是方圆几千米以内。局域网可以实现文件管理、应用软件共享、打印机共享、工作组内的日程安排、电子邮件和传真通信服务等功能。局域网是封闭型的，可以由办公室内的两台计算机组成，也可以由一个公司内的上千台计算机组成。</p></li><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200925153006.png" alt=""></p></li><li><p>交换机是组成局域网的重要设备，插口较多，但是交换机并不能让设备上网（内网 &lt;=&gt; 内网）</p></li><li><p>路由器可以实现设备上网（内网 &lt;=&gt; 外网），插口较少。</p></li><li><p>局域网：一般称为内网。</p></li><li><p>简单局域网的构成：交换机、网线、PC。</p></li><li><p>交换机：用来组建内网的局域网设备。</p></li></ol><h1 id="二、IP地址"><a href="#二、IP地址" class="headerlink" title="二、IP地址"></a>二、IP地址</h1><ol><li>IP地址就是一个唯一标识。是一段网络编码（二进制），由32位组成<ul><li><code>11010010.01001001.10001100.00000110</code>：转换为十进制如下: </li><li><code>210.73.140.4</code>：十进制数组（<code>.</code>点号隔开）</li></ul></li><li>IP地址形式：<code>x.x.x.x</code> 范围：<code>0 ~ 255</code></li><li>示例：<ul><li>正确：<code>10.1.1.1</code>、<code>192.168.1.1</code> </li><li>错误：<code>300.1.1.1</code> （超出最大值255）</li></ul></li></ol><h1 id="三、子网掩码"><a href="#三、子网掩码" class="headerlink" title="三、子网掩码"></a>三、子网掩码</h1><ol><li><p>局域网通信规则：在同一个局域网中所有的IP必须在同一网段中才可以互为通信。</p></li><li><p>IP地址构成：<strong>网络位</strong>+<strong>主机位</strong>（网络位相同的IP地址，为同一网段）</p></li><li><p>子网掩码确定网络位：与<code>255</code>对应的数字为<strong>网络位</strong>，与<code>0</code>对应的数字为<strong>主机位</strong>，如下所示：</p><ul><li><code>255.0.0.0</code> </li><li><code>255.255.0.0</code> </li><li><code>255.255.255.0</code>（注意：<strong>网络位</strong>必须是连续的）</li><li>错误：<code>255.0.255.0</code></li></ul></li><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200925154834.png" alt=""></p></li><li><p>图示说明：</p><ul><li>网络位：<code>10.0.0</code> </li><li>主机位：<code>1</code> </li><li>属于网段：<code>10.0.0.0</code>（头）</li><li>广播地址：<code>10.0.0.255</code>（尾）</li><li>网段可用的IP地址范围：<code>10.0.0.1</code>~<code>10.0.0.254</code>（掐头去尾）</li><li>本地回环地址：<code>127.0.0.1</code>（用于本地测试）</li></ul></li><li><p>注意：一个IP地址必须配套一个子网掩码（成对存在）。</p></li><li><p>总结：当主机位全部置<code>0</code>代表网段，主机位全部置<code>255</code>代表该网段的广播地址。</p></li></ol><h1 id="四、IP分类"><a href="#四、IP分类" class="headerlink" title="四、IP分类"></a>四、IP分类</h1><ol><li><p><code>ISO</code>（国际标准组织）定义地址分类：五大类（是以IP地址的<strong>第一位</strong>进行区分的）</p></li><li><p>简单说明：</p><ul><li>A类：<code>1 ~ 126</code> 默认子网掩码：<code>255.0.0.0</code></li><li>B类：<code>128 ~ 191</code> 默认子网掩码：<code>255.255.0.0</code></li><li>C类：<code>192 ~ 223</code> 默认子网掩码：<code>255.255.255.0</code></li><li>D类：<code>224 ~ 239</code> 组播地址</li><li>E类：<code>240 ~ 254</code> 科研使用</li></ul></li><li><p>详细说明：</p><ul><li>A类（为大型网络设计）：<ol><li>格式：1个字节的网络地址 + 3个字节的主机地址</li><li>在A类中，网络地址的最高位必须是“0”；（1.0.0.0 ~ 127.0.0.0）；127个，每个可容纳1亿多主机</li><li>127.0.0.1为“本机地址localhost”，用于本地机器的测试</li><li>0 ~ 127（0：代表任何地址；127：代表回溯测试地址）；实际范围是：1 ~ 126；默认子网掩码为：255.0.0.0</li></ol></li><li>B类：<ol><li>格式：2个字节的网络地址 + 2个字节的主机地址</li><li>在B类中，网络地址最高位必须是“10”；（128.0.0.0 ~ 191.255.255.255）；16382个，每个可容纳6万多主机</li><li>128 ~ 191（128.0.0.0和191.255.0.0为保留IP）；实际范围：128.1.0.0 ~ 191.254.0.0；默认子网掩码为：255.255.0.0</li></ol></li><li>C类：<ol><li>格式：3个字节的网络地址 + 1个字节的主机地址</li><li>在C类中，网络地址的最高位是“110”；（192.0.0.0 ~ 223.255.255.255）；209万多个，每个可容纳254台主机</li><li>192 ~ 223（192.0.0.0和223.255.255.0位保留IP）；实际范围：192.0.1.0 ~ 233.255.254.0；默认子网掩码为：255.255.255.0</li><li>C类地址中的私有地址：192.168.0.0 ~ 192.168.255.255是私有地址</li></ol></li><li>D类：<ol><li>多用于“多点广播（multicast）”</li><li>IP地址第一个字节以“1110”开始（专门保留的地址,并不指向特定的网络）</li><li>224.0.0.0 ~ 239.255.255.255</li></ol></li><li>E类：<ol><li>以“11110”开始。为将来使用保留</li><li>240.0.0.0 ~ 255.255.255.254（255.255.255.255用于广播地址）</li></ol></li></ul></li><li><p>示例：</p><ul><li><code>10.0.0.1</code>：属于A类 </li><li><code>192.168.1.1</code>：属于C类</li></ul></li><li><p>案例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">案例1:</span><br><span class="line">10.1.1.1</span><br><span class="line">255.255.255.0</span><br><span class="line">问:10.1.1.1属于哪个网段?所在网段有多少个可用的IP地址?该网段的广播地址是什么?</span><br><span class="line">答:</span><br><span class="line">10.1.1.1属于10.1.1.0网段</span><br><span class="line">10.1.1.0网段可用的IP地址范围:10.1.1.1 ~ 10.1.1.254</span><br><span class="line">10.1.1.0网段的广播地址:10.1.1.255</span><br><span class="line"></span><br><span class="line">案例2∶</span><br><span class="line">10.1.1.1</span><br><span class="line">255.255.0.0</span><br><span class="line">10.1.1.1属于哪个网段?所在网段有多少个IP地址?该网段的广播地址是什么?</span><br><span class="line">答:</span><br><span class="line">10.1.1.1属于10.1.0.0网段。</span><br><span class="line">10.1.0.0网段可用的IP地址范围∶10.1.0.1 ~ 10.1.255.254（256×256-2&#x3D;65534个）</span><br><span class="line">10.1.1.0网段的广播地址∶10.1.255.255</span><br></pre></td></tr></table></figure></li></ol><h1 id="五、网关"><a href="#五、网关" class="headerlink" title="五、网关"></a>五、网关</h1><ol><li><p>网关：一个网络的出口，英文：<code>Gateway</code>缩写为<code>GW</code>，一般网关是在路由器上</p></li><li><p>路由器：可连接外网的设备。</p></li><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926135537.png" alt=""></p></li><li><p>网关的配置：全球默认配置，可用IP范围的第一个IP或者最后一个IP，如下：</p><ul><li><p>第一位：<code>192.168.0.1</code> </p></li><li><p>最后一位：<code>192.168.0.254</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926135922.png" alt=""></p></li></ul></li><li><p>PC向外发包过程：</p><ul><li>1、首先判断目标IP地址与自己是否在同一网段。 </li><li>2、如在同一网段，则直接发出去，而不找网关。</li><li>3、如不在同一网段，则直接发包给网关。</li></ul></li></ol><h1 id="六、DNS"><a href="#六、DNS" class="headerlink" title="六、DNS"></a>六、DNS</h1><ol><li><p>DNS：Domain Name Service 域名服务器</p></li><li><p>域名系统(Domain Name System,DNS)：是Internet上解决网上机器命名的一种系统。就像拜访朋友要先知道别人家怎么走一样，Internet上当一台主机要访问另外一台主机时，必须首先获知其地址，TCP/IP中的IP地址是由四段以“.”分开的数字组成，记起来总是不如名字那么方便，所以，就采用了域名系统来管理名字和IP的对应关系。</p></li><li><p>作用：通过域名解析真实网络IP地址</p></li><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926140925.png" alt=""></p></li><li><p>浏览器解析顺序：</p><ul><li>1、本地DNS缓存</li><li>2、本地hosts文件</li><li>3、DNS服务器</li></ul></li></ol><h1 id="七、配置IP地址"><a href="#七、配置IP地址" class="headerlink" title="七、配置IP地址"></a>七、配置IP地址</h1><ul><li><p>图示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926141149.png" alt=""></p></li></ul><h1 id="八、网络测试命令"><a href="#八、网络测试命令" class="headerlink" title="八、网络测试命令"></a>八、网络测试命令</h1><ol><li><p>查看IP：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ipconfig       # 查看IP地址的基本信息</span><br><span class="line">ipconfig /all  # 查看IP地址的详细信息</span><br></pre></td></tr></table></figure></li><li><p>PING命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com            # 测试网络连通性</span><br><span class="line">ping -l 2000 www.baidu.com    # 每次都发2000个字节，在局域网内最大阈值为65500字节</span><br><span class="line">ping -t www.baidu.com         # 一直ping</span><br><span class="line">ping -n 6 www.baidu.com         # 修改ping包数量：6次</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926141900.png" alt=""></p></li><li><p>手工解析域名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup www.jd.com</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/038IP%E5%9C%B0%E5%9D%80%E8%AF%A6%E8%A7%A3/20200926142122.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> IP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库语言</title>
      <link href="/posts/268b147f/"/>
      <url>/posts/268b147f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="MySQL四大“数据库”"><a href="#MySQL四大“数据库”" class="headerlink" title="MySQL四大“数据库”"></a>MySQL四大“数据库”</h1><ol><li><code>information_schema</code>：保存着mysql数据库的其他库的所有信息。提供数据库“元数据”的访问方式。“元数据”：关于数据的数据；例如：数据库名、表名、列名及类型、访问权限等。</li><li><code>performance_schema</code>：5.5版本新增的一个性能优化的引擎，默认preformance_schema功能关闭</li><li><code>mysql</code>：mysql的核心数据库，切记不可删除，否则连数据库都登陆不进去，里面包含账号、密码等信息。</li><li><code>test</code>：测试的时候创建的一个库，空的，没有实际意义，可删除。</li></ol><h1 id="MySQL常用数据类型"><a href="#MySQL常用数据类型" class="headerlink" title="MySQL常用数据类型"></a>MySQL常用数据类型</h1><ol><li><code>int</code>：整型</li><li><code>double</code>：浮点型，例如<code>double(5,2)</code> “5”代表最多5位，“2”代表必须有两位小数，即最大值为<code>999.99</code>（银行等大的单位，不能使用，会有数据丢失）</li><li><code>decimal</code>：浮点型，在表单“钱”方面使用该类型，因为不会出现精度缺失问题</li><li><code>char</code>：固定长度字符串类型：<code>char(255)</code>为“最大值”</li><li><code>varchar</code>：可变长度字符串类型：<code>varchar(65535)</code>为“最大值”，示例：“zhangsan、lisi”</li><li><code>text（clob）</code>：字符串类型：主要用于存文本类型，如：小说等电子书。<ul><li>很小：<code>tinytext</code> 2^8^ ~ 1B</li><li>小：text 2^16^-1B</li><li>中：mediumtext 2^24^ ~ 1B</li><li>大：longtext 2^32^ ~ 1B</li></ul></li><li><code>blod</code>：字节类型：主要用于存放视频等。<ul><li>很小：tinyblod 2^8^ ~ 1B </li><li>小：blod 2^16^ ~ 1B</li><li>中：mediumblod 2^24^ ~ 1B</li><li>大：longblod 2^32^ ~ 1B</li></ul></li><li><code>data</code>：日期类型，格式为：YYY-MM-DD；（年-月-日）</li><li><code>time</code>：时间类型，格式为：HH:MM:SS；（小时：分钟：秒）</li><li><code>timestamp</code>：时间戳类型：YYY-MM-DD HH:MM:SS；（年-月-日 小时：分钟：秒）</li></ol><h1 id="MySQL常用函数"><a href="#MySQL常用函数" class="headerlink" title="MySQL常用函数"></a>MySQL常用函数</h1><ol><li>常用普通函数：<ul><li><code>select version();</code>：查看MySQL当前版本</li><li><code>select now();</code>：查看当前日期和时间（仅限MySQL使用）</li><li><code>select sysdate from daul;</code>：查看当前时间（仅限Oracle使用）</li><li><code>select year(now());</code>：只查询年份（<code>month()</code> / <code>day()</code> / <code>hour()</code> / <code>minute()</code> / <code>second()</code>也可以单独查询）</li><li><code>ifnull(a,b);</code>：例如<code>ifnull(score,0);</code>表示如果分数为<code>null</code>，则赋值为<code>0</code></li></ul></li><li>常用聚合函数：<ul><li>注意事项：数据中的<code>null</code>空值是不会纳入计算的</li><li><code>max()</code> / <code>min()</code> / <code>count()</code>计数 / <code>sum()</code>求和 / <code>avg()</code>求平均值</li></ul></li><li>示例：<ul><li>查询数据库的个数：<code>select count(schema_name) from information_schema.schemata;</code></li><li>MySQL别名查询：<code>select username as aaa,password as bbb from admin order by aaa;</code>（别名查询就是重命名查询；as可省略不写）</li></ul></li></ol><h1 id="SQLyog执行并查看结果"><a href="#SQLyog执行并查看结果" class="headerlink" title="SQLyog执行并查看结果"></a>SQLyog执行并查看结果</h1><ol><li><p>选中要执行的代码 &gt;&gt; 点击执行按钮</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200911163553.png" alt=""></p></li><li><p>选中要执行的代码 &gt;&gt; 键盘<code>F9</code></p></li><li><p>选中要执行的代码 &gt;&gt; 鼠标右键 &gt;&gt; 执行查询</p></li></ol><h1 id="MySQL数据库语言"><a href="#MySQL数据库语言" class="headerlink" title="MySQL数据库语言"></a>MySQL数据库语言</h1><h2 id="MySQL注释符"><a href="#MySQL注释符" class="headerlink" title="MySQL注释符"></a>MySQL注释符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 两个减号一个空格（注意两个减号后面的空格）</span><br><span class="line">-- show databases;  -- 注释代码</span><br><span class="line">show databases;  -- 注释：代码末尾的;号，在终端命令行中可用\g代替</span><br></pre></td></tr></table></figure><h2 id="DDL：数据定义语言"><a href="#DDL：数据定义语言" class="headerlink" title="DDL：数据定义语言"></a>DDL：数据定义语言</h2><ul><li>作用：用来定义数据库对象：库、表、列等</li></ul><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><ol><li><p>创建数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据库</span><br><span class="line">create database school;  -- 创建一个数据库school，这种创建方式，后期中文格式的数据会乱码</span><br><span class="line">create database school default character set utf8;  -- 设置编码格式，可有效防止乱码（default可省略）</span><br><span class="line">-- 添加if not exists，可防止覆盖已存在的数据库</span><br><span class="line">create database if not exists school default character set utf8;</span><br></pre></td></tr></table></figure></li><li><p>创建普通数据表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据表时，必须先切换到指定的数据库中</span><br><span class="line">use school;  </span><br><span class="line">-- 创建数据表students</span><br><span class="line">create table students(</span><br><span class="line">id int auto_increment comment &#39;学号&#39;,</span><br><span class="line">name varchar(10) comment &#39;姓名&#39;,</span><br><span class="line">sex char(1) not null,</span><br><span class="line">age int,</span><br><span class="line">primary key(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>数据表中的属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto_increment  -- 自动增量（1~无穷大）</span><br><span class="line">comment &#39;编号&#39;  -- 解释说明</span><br><span class="line">not null  -- 此属性不能为空</span><br><span class="line">primary key(id)  -- 将id设为主键</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200911160846.png" alt=""></p></li><li><p>添加列：</p><ul><li>格式：<code>alter table ... add ...;</code></li><li>示例：<code>alter table students add height varchar(10) comment &#39;身高&#39;;</code>（在<code>students</code>表中，添加<code>height</code>列）</li></ul></li><li><p>给数据表添加外键约束</p><ul><li><p>条件：必须创建两个或两个以上的数据表</p></li><li><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 创建教师表结构（父表）</span><br><span class="line">create table if not exists teachers(</span><br><span class="line">sid int comment &#39;老师编号&#39;,</span><br><span class="line">name varchar(10) comment &#39;姓名&#39;,</span><br><span class="line">sex char(1) not null comment &#39;性别&#39;,</span><br><span class="line">age int comment &#39;年龄&#39;,</span><br><span class="line">height varchar(6) comment &#39;身高&#39;,</span><br><span class="line">hobby varchar(15) comment &#39;爱好&#39;,</span><br><span class="line">primary key(sid)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建学生表结构（子表）</span><br><span class="line">create table if not exists students(</span><br><span class="line">id int comment &#39;学生学号&#39;,</span><br><span class="line">name varchar(10) comment &#39;姓名&#39;,</span><br><span class="line">sex char(1) not null comment &#39;性别&#39;,</span><br><span class="line">age int comment &#39;年龄&#39;,</span><br><span class="line">height varchar(6) comment &#39;身高&#39;,</span><br><span class="line">hobby varchar(15) comment &#39;爱好&#39;,</span><br><span class="line">sid int comment &#39;老师编号&#39;,</span><br><span class="line">primary key(id),</span><br><span class="line">foreign key(sid) references teachers(sid)  -- 创建时添加外键约束</span><br><span class="line">);</span><br><span class="line">-- 创建完成后，再给学生表添加外键约束</span><br><span class="line">alter table students add constraint name01 foreign key(sid) references teachers(sid);  -- name01:名称随意</span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ol><li>必须先创建好一个完整的表，让它做为父表，再创建子表</li><li>使用外键约束和添加外键约束时，必须要开启外键约束，默认是开启状态<code>1</code>，可手动设置开关</li><li>必须在子表中添加外键约束，并且这个外键的属性也必须和父表中的键属性一致，即：<code>key(键)</code>和<code>表名(外键)</code>一致</li><li>外键必须是父表中的主键，具有唯一性质</li><li>拥有外键的子表，在添加数据时，必须要使用父表中存在的值（外键约束的关键所在）</li><li>在删除拥有外键的子表时，必须要先关闭外键约束，</li></ol></li></ul></li><li><p>外键约束的其他操作</p><ul><li>查询外键约束的值（状态）：<code>select @@foreign_key_checks;</code></li><li>关闭外键约束：<code>set foreign_key_checks=0;</code></li><li>开启外键约束：<code>set foreign_key_checks=1;</code></li></ul></li><li><p>添加唯一性约束</p><ul><li>说明：该列唯一</li><li>每个学生只能选择一门课程：<code>alter table students add unique(id,cid);</code></li></ul></li></ol><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><ol><li>删除数据库：<ul><li>格式：<code>drop database ...;</code></li><li>示例：<code>drop database school;</code></li></ul></li><li>删除数据表：<ul><li>格式：<code>drop table ...;</code>或者<code>truncate table ...;</code></li><li>示例：<code>drop table students;</code>或者<code>truncate table students;</code></li></ul></li><li>删除列：<ul><li>格式：<code>alter table ... drop ...;</code></li><li>示例：<code>alter table students drop height;</code>（从<code>students</code>表中，删除<code>height</code>列）</li></ul></li></ol><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><ol><li><p>切换数据库：<code>use mysql;</code>（切换到mysql库）</p></li><li><p>修改数据库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 不能直接修改数据库名（因为数据库中的库与表之间联系密切）</span><br><span class="line">-- 先创建一个不存在的数据库“school01”</span><br><span class="line">create database if not exists school01 character set utf8;</span><br><span class="line">-- 使用源库</span><br><span class="line">use information_schema;</span><br><span class="line">-- 查询原库中的所有数据表</span><br><span class="line">select table-name from tables where table_schema&#x3D;&#39;school&#39;;</span><br><span class="line">-- 将school库中的students表（包括表中的所有数据），移动到school01库中，并给表重命名为students01，不重命名可阔以</span><br><span class="line">rename table school.students to school01.students01;</span><br><span class="line">-- 依次将所有数据表移动完成，即可实现修改数据库名称的目的</span><br><span class="line">-- 删除原数据库school（这时的数据库为空）</span><br><span class="line">drop database school;</span><br></pre></td></tr></table></figure></li><li><p>修改表名称：</p><ul><li>格式：<code>alter table ... rename to ...;</code></li><li>示例：<code>alter table students rename to students01;</code>（修改表名<code>students</code>为<code>students01</code>）</li></ul></li><li><p>修改列名称：</p><ul><li>格式：<code>alter table ... change ... ...;</code></li><li>示例：<code>alter table students change height height01 varchar(10) comment &#39;身高&#39;;</code>（修改<code>students</code>表中的<code>height</code>列）</li></ul></li><li><p>只修改列的数据类型：</p><ul><li>格式：<code>alter table ... modify ...;</code></li><li>示例：<code>alter table students modify height int;</code></li></ul></li></ol><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><ol><li>查看所有数据库：<code>show databases;</code></li><li>查看所有表：<code>show tables;</code>（先切换到指定的数据库中）</li></ol><h2 id="DCL：数据控制语言"><a href="#DCL：数据控制语言" class="headerlink" title="DCL：数据控制语言"></a>DCL：数据控制语言</h2><ul><li>作用：用来定义访问权限和安全级别</li></ul><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ol><li>创建用户：<code>create user &#39;wlet&#39;@&#39;%&#39; identified by &#39;666666&#39;;</code>（<code>%</code>表示所有人都可以访问，也代表可以在任何主机上登陆）</li><li>删除用户：<code>drop user &#39;wlet&#39;@&#39;%&#39;;</code></li></ol><h3 id="权限设置"><a href="#权限设置" class="headerlink" title="权限设置"></a>权限设置</h3><ol><li>修改用户登陆权限：<ul><li>只允许本机访问：<code>grant all privileges on *.* to &#39;root&#39;@&#39;localhost&#39; identified by &#39;123456&#39; with grant option;</code>（说明：授予全部权限，在所有的数据库下的所有的表，给<code>root</code>用户并且在本机<code>localhost</code>下，更改密码为<code>123456</code>）</li><li>只允许指定IP的服务器和本机访问：<code>grant all privileges on *.* to &#39;root&#39;@&#39;192.168.31.66&#39; identified by &#39;123456&#39; with grant option;</code>（只允许<code>192.168.31.66</code>访问）</li></ul></li><li>赋予其他用户权限：<ul><li>格式：<code>grant ... to ...;</code></li><li>示例：<code>grant all privileges on school.* to &#39;wlet&#39;@&#39;%&#39;;</code>（说明：赋予所有权限，在<code>school</code>库上，给<code>wlet</code>用户，<code>%</code>可任意地址登陆）</li></ul></li><li>刷新权限：<code>flush privilege</code></li><li>收回权限：<ul><li>格式：<code>revoke ... from ...;</code></li><li>示例：<code>revoke insert,delete,update on school.* from &#39;wlet&#39;@&#39;%&#39;;</code>（收回权限：包括添加、删除、更改，在<code>school</code>库上，从<code>wlet</code>用户上，可任意地址登陆）</li></ul></li></ol><h2 id="DML：数据操作语言"><a href="#DML：数据操作语言" class="headerlink" title="DML：数据操作语言"></a>DML：数据操作语言</h2><ul><li>作用：用来操作数据库的“数据”，通过增、删、改，对数据表进行修改</li></ul><h3 id="增-1"><a href="#增-1" class="headerlink" title="增"></a>增</h3><ol><li><p>通用格式：<code>insert into ... value ...</code></p></li><li><p>单行插入：<code>insert into students value(1001,&#39;张三&#39;,&#39;男&#39;,66,&#39;150&#39;);</code></p></li><li><p>多行插入（可写在一行中）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into students value</span><br><span class="line">(1002,&#39;李四&#39;,&#39;女&#39;,88,&#39;180&#39;),</span><br><span class="line">(1003,&#39;王五&#39;,&#39;男&#39;,99,&#39;175&#39;),</span><br><span class="line">(1004,&#39;赵六&#39;,&#39;男&#39;,77,&#39;166&#39;);</span><br></pre></td></tr></table></figure></li><li><p>指定插入：<code>insert into students(id,name,sex) value(1005,&#39;李华&#39;,&#39;女&#39;);</code> （注意：设置了<code>not null</code>属性的列，必须要输入数据）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200911160943.png" alt=""></p></li></ol><h3 id="删-1"><a href="#删-1" class="headerlink" title="删"></a>删</h3><ol><li>通用格式：<code>delete from ... where ...;</code></li><li>删除表中的所有数据：<ul><li><code>delete from students;</code></li><li><code>truncate table students;</code>（属于<code>DDL</code>语言）</li></ul></li><li>删除指定的数据（有条件的删除）：<code>delete from students where age=99;</code></li><li>删除没有年龄的数据：<code>delete from students where age is null;</code> （数据库中的<code>0</code>是有值的，空值需要用<code>null</code>表示，<code>null</code>必须用<code>is</code>连接）</li><li>删除年龄大于等于80的数据：<code>delete from students where age&gt;=80;</code></li><li>删除年龄在60和80之间的数据：<ul><li><code>delete from students where age&gt;60 and age&lt;80;</code></li><li><code>delete from students where age between 60 and 80;</code></li></ul></li><li>删除年龄为66和88的数据：<ul><li><code>delete from students where age=66 or age=88;</code> （年龄不可能即为66又为88，所以<code>and</code>不能用）</li><li><code>delete from students where age in(66,88);</code> （使用<code>in()</code>将属性值一一添加进行筛选，<code>not in()</code>取反）</li></ul></li><li>删除所有姓”李“的数据：<code>delete from students where name like &#39;李%&#39;;</code> （）</li><li>删除名字为三个字符的数据：<code>delete from students where name like &#39;___&#39;;</code></li></ol><h3 id="改-1"><a href="#改-1" class="headerlink" title="改"></a>改</h3><ol><li>通用格式：<code>update ... set ... where ...;</code></li><li>所有人年龄加1岁：<code>update students set age=age+1;</code></li><li>年龄大于66岁的，身高减10：<code>update students set height=height-10 where age&gt;66;</code></li><li>把id=1003的名字，改为匿名者：<code>update students set name=&#39;匿名者&#39; where id=1003;</code></li><li>把id=1003的名字，改为匿名者，并且年龄加100岁：<code>update students set name=&#39;匿名者&#39;,age=age+100 where id=1003;</code>（修改的属性值为多个时，需要用<code>,</code>逗号隔开，不能用<code>and</code>连接）</li></ol><h2 id="DQL：数据查询语言"><a href="#DQL：数据查询语言" class="headerlink" title="DQL：数据查询语言"></a>DQL：数据查询语言</h2><ol><li>作用：用来查询表记录(数据)</li><li>通用查询格式：<code>select ... from ... where/order by/group by ...;</code> </li></ol><h2 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h2><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200914121015.png" alt=""></p><ol><li>查询表中的所有数据：<code>select * from students;</code></li><li>查询name列中的所有数据：<code>select name from students;</code></li><li>查询name列中的所有数据，并将列名重命名为”姓名“：<code>select name as &#39;姓名&#39; from students;</code></li><li>查询性别为女的所有数据：<code>select * from students where sex=&#39;女&#39;;</code></li><li>查询姓”李“的所有数据：<code>select * from students where name like &#39;李%&#39;;</code> （<code>%</code>通配符）：</li><li>查询姓名为三个字符的所有数据：<code>select * from students where name like &#39;___&#39;;</code> （<code>_</code>占位符）</li><li>查询age为空的所有数据：<code>select * from students where age is null;</code> （必须要用<code>is</code>连接）</li><li>查询年龄为非空的所有姓名：<code>select name from students where age is not null;</code></li><li>查询所有的爱好：<code>select hobby from students;</code></li><li>查询所有的爱好种类（数据去重）：<code>select distinct hobby from students;</code></li><li>查询所有的数据，并按照年龄，升序排列：<code>select * from students order by age asc;</code></li><li>查询所有的姓名、身高，并按照身高，降序排列：<code>select name,height from students order by height desc;</code></li><li>查询数据后分组并筛选（<code>group by ... having ...</code>）：<ul><li>查询年龄大于80岁的，所有的id和年龄，并且按照年龄升序排列</li><li><code>select id,age from students group by age asc having age&gt;80;</code></li></ul></li><li>子查询并运算：<ul><li>查询年龄最小的id和姓名</li><li><code>select id,name from students where age=(select min(age) from students);</code></li></ul></li></ol><h2 id="连表查询"><a href="#连表查询" class="headerlink" title="连表查询"></a>连表查询</h2><ol><li><p>注意事项：当两个表连接后，数据会差生笛卡尔积效应，必须添加限制条件，消除笛卡尔积</p></li><li><p>test01表：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200915125822.png" alt=""></p></li><li><p>test02表：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200915125859.png" alt=""></p></li><li><p>未消除笛卡尔积：<code>select name from test01,test02;</code></p></li><li><p>内连接查询：</p><ul><li>通用格式：<code>... inner join ... on ...;</code></li><li>说明：从数学的角度讲就是求两个表的<strong>交集</strong>；从笛卡尔积的角度讲就是从笛卡尔积中挑出<code>on</code>子句条件成立的记录；有<code>inner join</code>、<code>where</code>（等值连接）、<code>straight_join</code>、<code>join</code>(省略<code>inner</code>)四种写法。</li><li>示例：<ol><li><code>select name from test01 inner join test02 on test01.id=test02.id;</code></li><li><code>select name from test01,test02 where test01.id=test02.id;</code></li><li><code>select name from test01 straight_join test02 on test01.id=test02.id;</code></li><li><code>select name from test01 join test02 on test01.id=test02.id;</code></li></ol></li></ul></li><li><p>外连接查询：</p><ul><li><p>分类：<code>left outer join</code>：左外连接 / <code>right outer join</code>：右外连接 / <code>full outer join</code>：全外连接（<code>outer</code>可以省略）</p></li><li><p>通用格式：<code>... left join ... on ...;</code>、<code>... right join ... on ...;</code>、<code>... full join ... on ...;</code>（<code>MySQL</code>不支持<code>full</code>）</p></li><li><p>说明：</p><ol><li>左外连接<code>left join</code>的含义就是求两个表A表和B表的<strong>交集加左表剩下的数据</strong>；从笛卡尔积的角度讲，就是先从笛卡尔积中挑出<code>on</code>子句条件成立的记录，然后加上<strong>左表A表中剩余的记录</strong></li><li>右外连接同理，取<strong>交集加右表剩下的数据</strong></li><li>全外连接就是求两个表<strong>A和B集合的并集</strong>。从笛卡尔积的角度讲就是从笛卡尔积中挑出<code>on</code>子句条件成立的记录，然后加上左表中剩余的记录，最后加上右表中剩余的记录；另外<code>MySQL</code>不支持<code>outer join</code>，但是我们可以对外左连接和右外连接的结果做<code>union</code>操作来实现</li><li>对称差集数据，两个表没有共同的数据，即数据为<code>null</code></li></ol></li><li><p>示例：</p><ol><li><p>左外连接：<code>select name from test01 a left join test02 b on a.id=b.id;</code></p></li><li><p>右外连接：<code>select name from test01 a right join test02 b on a.id=b.id;</code></p></li><li><p>全外连接（通用）：<code>select name from test01 a full join test02 b on a.id=b.id;</code>（<code>MySQL</code>不支持此语句）</p></li><li><p>全外连接：<code>select name from test01 a left join test02 b on a.id=b.id union select name from test01 a right join test02 b on a.id=b.id;</code></p></li><li><p>对称差集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select name,hobby from test01 a left join test02 b on a.id&#x3D;b.id where b.id is null</span><br><span class="line">union select name,hobby from test01 a right join test02 b on a.id&#x3D;b.id where a.id is null;</span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p>查询数据结果，并判断数据是否存在：</p><ul><li>判断关键词：<code>exists</code> / <code>not exists</code></li><li>说明：<code>exists</code>是将查询后的结果输出，没有结果就没有输出；<code>not exist</code>是将满足条件的数据除外，返回剩余的不满足条件的数据</li><li><code>exists</code>示例：<code>select * from test01 where exists(select name from test02 where name like &#39;张%&#39;);</code></li><li><code>not exists</code>示例：<code>select * from test01 where not exists(select name from test02 where name like &#39;张%&#39;);</code></li></ul></li></ol><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h1 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h1><ol><li>导出sql文件：<code>mysqldump -u 用户名 -p 库名 &gt; 文件名.sql</code> （终端命令）</li><li>导入文件：<code>source c:\\文件名.sql</code> （登录后，在终端中执行）</li></ol><h1 id="MySQL方言（limit）"><a href="#MySQL方言（limit）" class="headerlink" title="MySQL方言（limit）"></a>MySQL方言（limit）</h1><ol><li><p>注意事项：<code>limit</code>的用法（仅限于<code>MySQL</code>数据库）</p></li><li><p>示例：</p><ul><li><p><code>select * from table01 limit 5 offset 10;</code>（从表中查询，每页只显示5条数据，跳过前10条数据，简写同下一行）</p></li><li><p><code>select * from table01 limit 5,10;</code>（从<code>table01</code>表中查询<code>(9,15)</code>之间的数据，不包括第<code>9</code>和第<code>15</code>个数据，因为<code>MySQL</code>系统默认计数从<code>0</code>开始）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">定义： pc &#x3D; 2（表示：第二页）</span><br><span class="line">  ps &#x3D; 7（表示：每一页显示7条数据）</span><br><span class="line">107（第1页从id&#x3D;0开始取7条数据）</span><br><span class="line">277（第2页从id&#x3D;7开始取7条数据）</span><br><span class="line">3147（第3页从id&#x3D;14开始取7条数据）</span><br><span class="line">4217（第4页从id&#x3D;21开始取7条数据）</span><br></pre></td></tr></table></figure></li><li><p>通式：<code>select * from table01 limit (pc-1)*ps,7;</code>（表示：查询<code>table01</code>表中的数据，在每一页中显示7组数据）</p></li><li><p>页码函数：<code>(pc-1)*ps</code> （<code>0=1-1*7</code>；<code>7=2-1*7</code>；<code>14=3-1*7</code>；<code>21=4-1*7</code>）</p></li></ul></li></ol><h1 id="MySQL视图（view）"><a href="#MySQL视图（view）" class="headerlink" title="MySQL视图（view）"></a>MySQL视图（view）</h1><ol><li><p>创建视图格式：<code>create view 视图名称 as SQL查询语句;</code></p></li><li><p>视图的作用：</p><ul><li>不创建视图 &gt;&gt; 执行完整个操作过程 &gt;&gt; 得到结果（一次性结束） &gt;&gt; 下次接着循环</li><li>创建视图（永久性储存） &gt;&gt; 调用视图 &gt;&gt; 得到结果 &gt;&gt; 循环查询</li><li>调用视图的效率，比执行完整数据库命令的效率高</li><li>可提高查询效率，优化数据库性能</li><li>通过视图，可将用户的访问权限控制在指定的属性上（列上）</li><li>视图属于一个虚表，查询的快照</li></ul></li><li><p>创建视图：<code>create view hobbys as select distinct hobby from students;</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200916123110.png" alt=""></p></li><li><p>调用视图：<code>select * from hobbys;</code></p></li><li><p>删除视图：<code>drop view hobbys;</code></p></li></ol><h1 id="数据库索引（index）"><a href="#数据库索引（index）" class="headerlink" title="数据库索引（index）"></a>数据库索引（index）</h1><ol><li><p>创建索引格式：<code>create index 索引名称 on ...</code></p></li><li><p>作用：</p><ul><li>提高查询效率；为<code>管理员</code>查询提供方便（如同“字典”）</li><li>索引的创建会占用内存空间，会让增删变得更慢（因为索引要不断更新）</li><li>索引应该建在经常使用的筛选条件所用的属性上（列名上）</li></ul></li><li><p>创建单个索引：<code>create index name01 on students(name);</code> （给<code>students</code>表中的<code>name</code>列，创建一个索引）</p></li><li><p>创建多个索引：<code>create index name02 on students(id,sex,age);</code> （给<code>students</code>表中的<code>id</code>、<code>sex</code>、<code>age</code>列，创建一个索引）</p></li><li><p>查看所有的索引：<code>show index from students;</code> （查看<code>students</code>表中的所有的索引）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200916151654.png" alt=""></p></li><li><p>删除索引：<code>drop index name01 on students;</code></p></li><li><p>索引的使用规则：</p><ul><li><code>create index my_index on students(name);</code>（创建<code>index</code>）</li><li><code>select id,name from students where name=&#39;&#39;;</code>（已使用<code>index</code>）</li><li><code>select id,name from students where name&lt;&gt;&#39;张三&#39;;</code>（未使用<code>index</code>，<code>&lt;&gt;</code>为负向条件，代表不等于）</li><li><code>select id,name from students where name=&#39;张%&#39;;</code>（已使用<code>index</code>，模糊查询<code>%</code>在后）</li><li><code>select id,name from students where name=&#39;%张&#39;;</code>（未使用<code>index</code>，<code>%</code>在前）</li></ul></li></ol><h1 id="数据库的存储过程"><a href="#数据库的存储过程" class="headerlink" title="数据库的存储过程"></a>数据库的存储过程</h1><ol><li><p>作用：存储过程就是具有名字的一段代码，用来完成一个特定的功能；创建的存储过程保存在数据库的数据字典中</p></li><li><p>说明：把一系列的SQL语句可以封装到一个过程中，而且可以加上分支和循环，将来通过过程的名字直接调用过程即可，因为创建过程时已经提前编译了SQL语句，所以比直接执行SQL语句性能更好</p></li><li><p>优点：</p><ul><li>将重复性很高的一些操作，封装到一个存储过程中，简化了对这些SQL的调用</li><li>批量处理：SQL+循环，减少流量，也就是“跑批”</li><li>统一接口，确保数据的安全</li></ul></li><li><p>存储过程的参数：</p><ul><li>说明：存储过程可以有0个或多个参数，用于存储过程的定义</li><li>参数类型：<ol><li><code>in</code>输入参数：表示调用者向过程传入值（传入值可以是<strong>字面量</strong>或变量）</li><li><code>out</code>输出参数：表示过程向调用者传出值(可以返回多个值)（传出值只能是变量）</li><li><code>inout</code>输入输出参数：既表示调用者向过程传入值，又表示过程向调用者传出值（值只能是变量）</li></ol></li></ul></li><li><p>通用创建格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delimiter $$  -- 将SQL语句的结束标记设置为$$（可任意符号）</span><br><span class="line">drop procedure if exists 存储过程名称;  -- 如果存在该名字的存储过程则删除</span><br><span class="line">create procedure 存储过程名称(参数类型 参数名1 参数名1的数据类型, 参数类型 参数名2 参数名2的数据类型, ...)</span><br><span class="line">begin  -- 代码部分开始</span><br><span class="line">    SQL语句  -- 存储过程的代码部分</span><br><span class="line">end $$  -- 代码部分结束</span><br><span class="line">delimiter ;  -- 代码部分结束后，将SQL语句的结束标记设置为默认的;分号（避免影响后续操作）</span><br></pre></td></tr></table></figure></li><li><p>调用存储过程的通用格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 调用无参数的存储过程</span><br><span class="line">call 存储过程名();</span><br><span class="line">-- 定义变量，给参数赋值（注意。定义变量必须加@符号，调用变量也是如此）</span><br><span class="line">-- 数据库可用做变量名的字符：字母、数字、下划线</span><br><span class="line">set @变量名1&#x3D;某值;</span><br><span class="line">set @变量名2&#x3D;某值;</span><br><span class="line">...</span><br><span class="line">-- 调用有参数的存储过程</span><br><span class="line">call 存储过程名(@变量名1, @变量名2, ...);</span><br><span class="line">call 存储过程名(字面量1, 字面量2, ...);</span><br><span class="line">-- 查询输出</span><br><span class="line">select @变量名</span><br><span class="line">select @变量名 from dual;</span><br></pre></td></tr></table></figure></li><li><p>school02库中的students表，如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/037MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80/20200917122325.png" alt=""></p></li><li><p>输入参数的存储过程示例（<code>in</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">use school02;  -- 注意，切换数据库</span><br><span class="line">-- 输入参数的存储过程</span><br><span class="line">    -- 需求：传入一个学生id，查询该学生的所有信息</span><br><span class="line">delimiter $$</span><br><span class="line">create procedure stu_in(in in_id int)</span><br><span class="line">begin</span><br><span class="line">    -- set in_id&#x3D;1003;  -- 给参数赋值（不推荐，因为参数为固定值）</span><br><span class="line">    select * from students where id&#x3D;in_id;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">-- 定义变量，给参数赋值</span><br><span class="line">set @in_id&#x3D;1004;  -- 可在“代码部分”定义</span><br><span class="line">-- 调用存储过程</span><br><span class="line">call stu_in(@in_id);  -- 使用变量</span><br><span class="line">call stu_in(1005);  -- 使用字面量</span><br><span class="line">-- 删除存储过程</span><br><span class="line">drop procedure stu_in;</span><br></pre></td></tr></table></figure></li><li><p>输出参数的存储过程示例（<code>out</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">use school02;</span><br><span class="line">-- 输出参数的存储过程</span><br><span class="line">delimiter $$</span><br><span class="line">create procedure stu_out(out msg varchar(20))</span><br><span class="line">begin</span><br><span class="line">    select distinct hobby from students;  -- 查询语句 </span><br><span class="line">    set msg&#x3D;&#39;所有的爱好种类已查询完毕！&#39;;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">-- 调用存储过程</span><br><span class="line">call stu_out(@a);</span><br><span class="line">-- 查询输出的结果</span><br><span class="line">select @a;</span><br><span class="line">-- 重新给参数赋值，并查询</span><br><span class="line">set @a&#x3D;&#39;再次查询，所有的爱好种类已查询完毕！&#39;;</span><br><span class="line">select @a;</span><br><span class="line">select @a from dual;  -- （dual为数据库虚表）</span><br><span class="line">-- 删除存储过程</span><br><span class="line">drop procedure stu_out;</span><br></pre></td></tr></table></figure></li><li><p>输入输出参数的存储过程示例（<code>inout</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- 输入输出参数的存储过程</span><br><span class="line">    -- 说明：输入即为输出</span><br><span class="line">use school02;</span><br><span class="line">delimiter $$</span><br><span class="line">create procedure stu_inout(inout in_id int)</span><br><span class="line">begin</span><br><span class="line">    select * from students where id&#x3D;in_id;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">-- 定义存储变量</span><br><span class="line">set @in_id&#x3D;1001;  -- 可在“代码部分”定义</span><br><span class="line">-- 调用存储过程</span><br><span class="line">call stu_inout(@in_id);  -- 使用变量</span><br><span class="line">select @in_id;</span><br><span class="line">-- 删除存储过程</span><br><span class="line">drop procedure stu_inout;</span><br></pre></td></tr></table></figure></li><li><p>输入输出参数混合的存储过程示例（<code>in</code>和<code>out</code>）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- 输入输出参数混合的存储过程</span><br><span class="line">    -- 需求：输入一个正整数，如果1，返回“星期一”，如果2，返回“星期二。。。。其他返回输入错误”</span><br><span class="line">delimiter $$</span><br><span class="line">create procedure mysql_in_out(in num int, out week01 varchar(10))</span><br><span class="line">begin</span><br><span class="line">    if num &#x3D; 0 then</span><br><span class="line">        set week01 &#x3D; &#39;星期日&#39;;</span><br><span class="line">    elseif num &#x3D; 1 then</span><br><span class="line">        set week01 &#x3D; &#39;星期一&#39;;      </span><br><span class="line">    elseif num &#x3D; 2 then</span><br><span class="line">        set week01 &#x3D; &#39;星期二&#39;;</span><br><span class="line">    elseif num &#x3D; 3 then</span><br><span class="line">        set week01 &#x3D; &#39;星期三&#39;;</span><br><span class="line">    elseif num &#x3D; 4 then</span><br><span class="line">        set week01 &#x3D; &#39;星期四&#39;;</span><br><span class="line">    elseif num &#x3D; 5 then</span><br><span class="line">        set week01 &#x3D; &#39;星期五&#39;;</span><br><span class="line">    elseif num &#x3D; 6 then</span><br><span class="line">        set week01 &#x3D; &#39;星期六&#39;;</span><br><span class="line">    else </span><br><span class="line">        set week01 &#x3D; &#39;输入错误！&#39;;</span><br><span class="line">    end if;  -- 结束if条件分支</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">-- 创建了两个参数，调用时就需要加入相对应的两个参数</span><br><span class="line">call mysql_in_out(1,@a);  -- 字面量6为输入参数，变量@a为输出参数 </span><br><span class="line">select @a;</span><br><span class="line">select @a from dual;</span><br><span class="line">drop procedure mysql_in_out;</span><br></pre></td></tr></table></figure></li></ol><h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><ul><li>说明：触发器在执行增删改操作时可以触发其他的级联操作，但是有可能导致“锁表”现象，实际开发中应该尽量避免使用触发器<br>表“现象，实际开发中应该尽量避免使用触发器</li></ul><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><ol><li>作用：把多个增删改的操作做成不可分割的原子性操作，要么全部都做，要么全都不做</li><li>开启事务：<ul><li><code>start transaction;</code> （方式一）</li><li><code>begin;</code>（方式二，推荐）</li></ul></li><li>执行数据库操作：例如<code>delete from students;</code></li><li>数据撤回（回滚）：<code>rollback;</code> （事务中的所有操作，全部撤销）</li><li>数据提交：<code>commit;</code> （事务中的所有操作，全部生效）</li></ol><h1 id="数据库性能优化"><a href="#数据库性能优化" class="headerlink" title="数据库性能优化"></a>数据库性能优化</h1><h2 id="执行计划"><a href="#执行计划" class="headerlink" title="执行计划"></a>执行计划</h2><ol><li>说明：执行计划，就是<code>MySQL</code>如何执行一条<code>SQL</code>语句，包括<code>SQL</code>查询的顺序、是否使用索引、以及使用索引的信息等，一条<code>SQL</code>性能的好坏，可以通过查看执行计划很直观的看出来，执行计划提供了各种查询类型与级别，方便我们进行查看以及为作为性能分析的依据。</li><li>通用格式：<code>explain SQL查询语句</code></li><li>示例（查看查询语句的详细执行过程）<ul><li><code>explain select id,name from students where id=1002;</code></li><li><code>explain select id,name from students where name=’张三’;</code></li></ul></li></ol><h2 id="查询性能较好"><a href="#查询性能较好" class="headerlink" title="查询性能较好"></a>查询性能较好</h2><ol><li>正向查询性能较好</li><li>若查询条件为主键，则查询性能会更好，因为读取的数据较少（<code>type</code>为<code>const</code>常量）<ul><li><code>select id,name from students where id=1008;</code> （<code>id</code>必须设置为主键）</li></ul></li><li>调用存储过程</li><li>给查询条件的属性（列）添加索引<code>index</code><ul><li><code>create index name01 on students(name);</code> （给<code>students</code>表中的<code>name</code>列，创建一个索引）</li></ul></li></ol><h2 id="查询性能较差"><a href="#查询性能较差" class="headerlink" title="查询性能较差"></a>查询性能较差</h2><ol><li><p>反向查询性能较差</p></li><li><p>若查询条件不是唯一的，则有可能会读取全表，性能最差（<code>type</code>为<code>all</code>全部）</p><ul><li><code>select id,name from students where name=’张三’;</code>（若给<code>name</code>属性添加<code>index</code>，性能会优化）</li><li><code>select id,name from students where name&lt;&gt;1008;</code>（<code>MySQL</code>中<code>&lt;&gt;</code>代表不等于）</li></ul></li></ol><h1 id="Python3操作MySQL数据库"><a href="#Python3操作MySQL数据库" class="headerlink" title="Python3操作MySQL数据库"></a>Python3操作MySQL数据库</h1><h2 id="连接数据库，并添加数据"><a href="#连接数据库，并添加数据" class="headerlink" title="连接数据库，并添加数据"></a>连接数据库，并添加数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1.创建连接对象</span></span><br><span class="line">    <span class="comment"># 指定主机、端口、用户名、口令、数据库名、字符集，即可创建连接</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">'192.168.25.131'</span>, port=<span class="number">3306</span>,</span><br><span class="line">        user=<span class="string">'root'</span>, passwd=<span class="string">'123456'</span>,  <span class="comment"># passwd == password</span></span><br><span class="line">        db=<span class="string">'school02'</span>, charset=<span class="string">'utf8'</span>  <span class="comment"># db == database</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># print(conn) # 测试连接结果（object）</span></span><br><span class="line">    <span class="comment"># 异常处理</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 2.获得光标、游标对象 cursor（获取到数据库中的一行数据）</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:  <span class="comment"># 连接上下文</span></span><br><span class="line">            <span class="comment"># 3.执行SQL插入语句</span></span><br><span class="line">            result = cursor.execute(</span><br><span class="line">                <span class="string">'insert into students(id,name,sex) value(1007,"王麻子","男");'</span></span><br><span class="line">            )</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="comment"># 4.操作成功，提交SQL执行结果</span></span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">'数据添加成功！'</span>)</span><br><span class="line">            conn.commit()  <span class="comment"># 成功后提交数据</span></span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> error:</span><br><span class="line">        print(error)</span><br><span class="line">        <span class="comment"># 4.操作失败，执行回滚</span></span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="comment"># 5.关闭连接，释放资源（数据库的连接数量是有限的，必须随时关闭）</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    stuid = int(input(<span class="string">'请输入要删除数据的id号：'</span>))</span><br><span class="line">    <span class="comment"># 1.创建连接对象</span></span><br><span class="line">    <span class="comment"># 指定主机、端口、用户名、口令、数据库、字符集，即可创建连接</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">'192.168.25.131'</span>, port=<span class="number">3306</span>,</span><br><span class="line">        user=<span class="string">'root'</span>, passwd=<span class="string">'123456'</span>, <span class="comment">#passwd == password</span></span><br><span class="line">        db=<span class="string">'school02'</span>, charset=<span class="string">'utf8'</span> <span class="comment">#db == database</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># print(conn) # 测试连接结果（object）</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 2.获得游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 3.执行SQL删除语句</span></span><br><span class="line">            result = cursor.execute(</span><br><span class="line">                <span class="comment"># 格式化字符串必须用tuple型，逗号隔开，里面只有一个元素，必须加逗号</span></span><br><span class="line">                <span class="comment"># 'delete from tb_student where stuid=%s',(stuid,)</span></span><br><span class="line">                <span class="comment"># 'delete from tb_student where stuid=%s'%(stuid)</span></span><br><span class="line">                <span class="string">f'delete from students where id=<span class="subst">&#123;stuid&#125;</span>'</span></span><br><span class="line">            )</span><br><span class="line">            <span class="comment"># 4.操作成功，提交SQL执行结果</span></span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">'数据删除成功！'</span>)</span><br><span class="line">            conn.commit()</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> error:</span><br><span class="line">        print(error)</span><br><span class="line">        <span class="comment"># 4.操作失败，执行回滚</span></span><br><span class="line">        conn.rollback()</span><br><span class="line">    <span class="comment"># 5.关闭连接，释放资源（数据库的连接数是有限的，必须随时关闭）</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="修改-更新数据"><a href="#修改-更新数据" class="headerlink" title="修改 / 更新数据"></a>修改 / 更新数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    stu_id = int(input(<span class="string">'请输入id号：'</span>))</span><br><span class="line">    stu_age = int(input(<span class="string">'请输入年龄：'</span>))</span><br><span class="line">    stu_height = input(<span class="string">'请输入身高：'</span>)</span><br><span class="line">    stu_hobby = input(<span class="string">'请输入爱好：'</span>)</span><br><span class="line">    <span class="comment"># 1.创建连接对象</span></span><br><span class="line">    <span class="comment"># 指定主机、端口、用户名、口令、数据库、字符集，即可创建连接</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">'192.168.25.131'</span>, port=<span class="number">3306</span>,</span><br><span class="line">        user=<span class="string">'root'</span>, passwd=<span class="string">'123456'</span>,  <span class="comment"># passwd == password</span></span><br><span class="line">        db=<span class="string">'school02'</span>, charset=<span class="string">'utf8'</span>  <span class="comment"># db == database</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># print(conn) # 测试连接结果（object）</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 2.获得游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 3.执行SQL更新语句</span></span><br><span class="line">            result = cursor.execute(</span><br><span class="line">                <span class="comment"># 用字符串格式化，SQL语句错误，会直接爆出数据库错误（极度危险）</span></span><br><span class="line">                <span class="comment"># 'update tb_students set stu_birth=%s where stu_id=%s'%(stu_birth, stu_id)</span></span><br><span class="line">                <span class="comment"># 'update tb_students set stu_birth=&#123;&#125; where stu_id=&#123;&#125;'.format(stu_birth, stu_id)</span></span><br><span class="line">                <span class="comment"># 若出现：(1054, "Unknown column '跑步' in 'field list'")此报错，将跑步对应的变量加上引号即可</span></span><br><span class="line">                <span class="comment"># f'update students set age=&#123;stu_age&#125;,height=&#123;stu_height&#125;,hobby=&#123;stu_hobby&#125; where id=&#123;stu_id&#125;'</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 安全格式输出，必须用tuple格式化，若只有一个变量，必须也用逗号隔开，如：（stu_id,）</span></span><br><span class="line">                <span class="string">'update students set age=%s,height=%s,hobby=%s where id=%s'</span>, (stu_age, stu_height, stu_hobby, stu_id)</span><br><span class="line">            )</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="comment"># 对SQL语句的执行结果进行判断</span></span><br><span class="line">            <span class="keyword">if</span> result == <span class="number">1</span>:</span><br><span class="line">                print(<span class="string">'数据更新成功！'</span>)</span><br><span class="line">            <span class="keyword">elif</span> result == <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">'输入的id不存在！'</span>)</span><br><span class="line">            <span class="comment"># 4.操作成功，提交SQL执行结果</span></span><br><span class="line">            conn.commit()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> error:</span><br><span class="line">        print(error)</span><br><span class="line">        <span class="comment"># 4.操作失败，执行回滚</span></span><br><span class="line">        conn.rollback()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5.关闭连接，释放资源（数据库的连接数是有限的，必须随时关闭）</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1.创建连接对象</span></span><br><span class="line">    <span class="comment"># 指定主机、端口、用户名、口令、数据库、字符集，即可创建连接</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">'192.168.25.131'</span>, port=<span class="number">3306</span>,</span><br><span class="line">        user=<span class="string">'root'</span>, passwd=<span class="string">'123456'</span>, <span class="comment">#passwd == password</span></span><br><span class="line">        db=<span class="string">'school02'</span>, charset=<span class="string">'utf8'</span> <span class="comment">#db == database</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># print(conn) # 测试连接结果（object）</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 2.获得游标对象</span></span><br><span class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor01:</span><br><span class="line">            <span class="comment"># 3.执行SQL删除语句</span></span><br><span class="line">            result = cursor01.execute(</span><br><span class="line">                <span class="string">'select id,name,sex from students limit 1,4'</span></span><br><span class="line">            )</span><br><span class="line">            print(result)  <span class="comment"># 只返回查询了几条数据，不返回具体的查询结果</span></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> cursor01.fetchall():  <span class="comment"># 用fetchall()来获取每一条查询结果</span></span><br><span class="line">                <span class="comment"># print(row)</span></span><br><span class="line">                print(<span class="string">f'学号：<span class="subst">&#123;row[<span class="number">0</span>]&#125;</span>'</span>, end=<span class="string">' '</span>*<span class="number">4</span>)</span><br><span class="line">                print(<span class="string">f'姓名：<span class="subst">&#123;row[<span class="number">1</span>]&#125;</span>'</span>, end=<span class="string">' '</span>*<span class="number">4</span>)</span><br><span class="line">                print(<span class="string">f'性别：<span class="subst">&#123;row[<span class="number">2</span>]&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">except</span> pymysql.MySQLError <span class="keyword">as</span> error:</span><br><span class="line">        print(error)</span><br><span class="line">    <span class="comment"># 5.关闭连接，释放资源（数据库的连接数是有限的，必须随时关闭）</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MariaDB的安装与使用</title>
      <link href="/posts/3ff124f4/"/>
      <url>/posts/3ff124f4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Linux中安装mariadb数据库"><a href="#Linux中安装mariadb数据库" class="headerlink" title="Linux中安装mariadb数据库"></a>Linux中安装mariadb数据库</h1><ol><li>介绍：<code>mariadb</code>是<code>mysql</code>数据库的一个分支（免费版）</li><li>包管理工具搜索：<code>yum search mariadb</code></li><li>安装：<code>yum install -y mariadb-server</code></li></ol><h1 id="启动服务并检查"><a href="#启动服务并检查" class="headerlink" title="启动服务并检查"></a>启动服务并检查</h1><ol><li>启动：<code>systemctl start mariadb</code></li><li>检查服务状态：<code>systemctl status mariadb</code></li><li>开机自启：<code>systemctl enable mariadb</code></li><li>查看此服务的进程：<code>netstat -anp | grep mysql</code>（进程名为<code>mysql</code>，端口号为<code>3306</code>）</li></ol><h1 id="登陆数据库"><a href="#登陆数据库" class="headerlink" title="登陆数据库"></a>登陆数据库</h1><ol><li>远程登陆数据库：<code>mysql -uroot -p123456 -h192.168.31.66</code>（用账户、密码；登陆192.168.31.66的数据库；必须有登陆权限）</li><li>登陆本地数据库：<code>mysql -h127.0.0.1 -uroot -p123456 -P3306</code><ul><li><code>-h</code>：IP地址（本地登陆可省略此参数）</li><li><code>-u</code>：用户名</li><li><code>-p</code>：密码（在命令行可不填，但后面要加密填写）</li><li><code>-P</code>（大写）：端口号（本地登陆可省略此参数）</li></ul></li></ol><h1 id="修改mariadb的默认登陆密码"><a href="#修改mariadb的默认登陆密码" class="headerlink" title="修改mariadb的默认登陆密码"></a>修改mariadb的默认登陆密码</h1><ol><li><p>CentOS8系统中MariaDB的配置文件位置：<code>/etc/my.cnf.d/mariadb-server.cnf</code></p></li><li><p>启动：<code>systemctl start mariadb</code></p></li><li><p>登陆：<code>mysql -u root -p</code>（默认密码：无，回车即可）</p></li><li><p>修改密码：</p><ul><li><code>use mysql;</code>（注意每条SQL命令后的分号<code>;</code>）</li><li><code>update user set password=password(&#39;123456&#39;) where user=&#39;root&#39;;</code>（注意：password()函数）</li><li><code>flush privileges;</code>（刷新配置）</li><li><code>quit;</code>（退出登陆）</li></ul></li><li><p>报错处理：</p><ul><li><p>报错内容：<code>ERROR 1045 (28000): Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</code></p></li><li><p>错误排查：修改密码后报错，无法登陆（输入的命令可能有误）</p></li><li><p>绕过密码：进入配置文件（看上面），在标题<code>mysqld</code>下的最后一行插入跳过验证代码<code>skip-grant-tables</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/036MariaDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200909143150.png" alt=""></p></li><li><p>重启服务并登陆：<code>systemctl restart mariadb</code> 、 <code>mysql -u root -p</code>（密码回车即可）</p></li><li><p>重置密码：</p><ol><li>方式一（推荐）：<ul><li><code>update user set password=password(&#39;123456&#39;) where user=&#39;root&#39;;</code></li></ul></li><li>方式二：<ul><li><code>update mysql.user set authentication_string=password(&#39;123456&#39;) where user=&#39;root&#39;;</code></li><li><code>update user set plugin=&quot;mysql_native_password&quot;;</code></li></ul></li></ol></li><li><p>刷新权限配置：<code>flush privileges;</code></p></li><li><p>退出登陆：<code>quit;</code></p></li><li><p>注释代码：打开配置文件<code>vim /etc/my.cnf.d/mariadb-server.cnf</code>，用<code>#</code>号注释<code>skip-grant-tables</code></p></li><li><p>重启服务并登陆：<code>systemctl restart mariadb</code> 、 <code>mysql -u root -p</code>（输入重置后的密码）</p></li></ul></li></ol><h1 id="用SQLyog连接MariaDB"><a href="#用SQLyog连接MariaDB" class="headerlink" title="用SQLyog连接MariaDB"></a>用SQLyog连接MariaDB</h1><ol><li><p>SQLyog破解工具：<a href="https://pan.baidu.com/s/1eaShkz8yy2f58c444IC7FQ" target="_blank" rel="noopener">百度云盘</a> 提取码：<code>ggfp</code></p></li><li><p>开启MySQL默认端口3306：<code>firewall-cmd --zone=public --add-port=3306/tcp --permanent</code> </p></li><li><p>进入数据库更改权限：<code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;</code> </p></li><li><p>未授权sqlyog报错：<code>错误号码2013 ost connection to MYSQL server at handshake: reading inital communication packet,system error: 2</code></p></li><li><p>刷新权限：<code>flush privileges;</code>（比刷新权限也阔以）</p></li><li><p>测试连接成功后，再连接：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/036MariaDB%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200909150217.png" alt=""></p></li></ol><h1 id="MySQL中数据类型"><a href="#MySQL中数据类型" class="headerlink" title="MySQL中数据类型"></a>MySQL中数据类型</h1><ol><li>查询MySQL数据库中所有的数据类型（终端命令）：<code>? data types;</code>（<code>?</code>号：可替换为<code>help</code>）</li><li>查询数据类型的详细信息（终端命令），例如：<code>? int;</code>（查询整型）</li></ol><h1 id="MySQL数据库语言"><a href="#MySQL数据库语言" class="headerlink" title="MySQL数据库语言"></a>MySQL数据库语言</h1>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
            <tag> Mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis的安装与使用</title>
      <link href="/posts/100c1831/"/>
      <url>/posts/100c1831/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Linux系统中安装Redis"><a href="#Linux系统中安装Redis" class="headerlink" title="Linux系统中安装Redis"></a>Linux系统中安装Redis</h1><ol><li>安装Redis：<a href="http://download.redis.io/releases" target="_blank" rel="noopener">点击下载</a> （可下载最新版本）<ul><li>linux终端下载：<code>wget http://download.redis.io/releases/redis-6.0.7.tar.gz</code></li></ul></li><li>解压：<code>gunzip redis-6.0.5.tar.gz</code></li><li>解归档：<code>tar -xvf redis-6.0.5.tar</code></li><li>安装编译环境：<code>yum install gcc patch libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel xz-devel -y</code></li><li>进入安装目录：<code>cd redis-6.0.7</code></li><li>编译并安装：<code>make &amp;&amp; make install</code></li><li>检查：三个版本必须成功运行出来，否则安装失败，需重新安装<ul><li><code>redis-server --version</code>：redis服务的版本</li><li><code>redis-cli --version</code>：redis客户端版本（client）</li><li><code>redis-sentinel --version</code>：redis哨兵版本</li></ul></li><li>后台启动：<code>redis-server &amp;</code>（此程序要在后台执行）</li><li>默认端口：6379</li></ol><h1 id="Redis的用法"><a href="#Redis的用法" class="headerlink" title="Redis的用法"></a>Redis的用法</h1><ul><li><strong>特点</strong>：以键值对的形式存放于运行内存中，同时将数据写入一个文件中进行永久保存，读写性能超级快</li></ul><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><ol><li><p>启动服务：<code>redis-server --port 1234 --requirepass 123456 &gt; redis.log &amp;</code> ：后台&amp;运行redis服务，重置端口1234，设置连接请求密码为123456，将redis的输出指定到redis.log文件中</p><ul><li><code>--bind</code>：绑定服务器IP（默认绑定本机IP）</li><li><code>--appendonly yes</code>：开启<code>aof</code>格式文件保存数据（默认文件：appendonly.aof）</li><li><code>--requirepass</code>：设置服务器密码</li><li><code>--port</code>：设置服务器端口号（默认：6379）</li><li><code>--slaveof</code>：让<strong>本服务器</strong>作为其他<code>IP</code>+<code>port</code>的服务器（<strong>奴隶</strong>）</li><li><code>--replicaof</code> —让<strong>本服务器</strong>作为其他<code>IP</code>+<code>port</code>的服务器（<strong>复制品</strong>）</li><li><code>--masterauth</code>：输入主服务器（<strong>主人</strong>）的密码</li></ul></li><li><p>利用<strong>配置文件</strong>启动服务（配置文件需提前修改）：</p><ul><li><p>redis系统配置文件：<code>redis-server redis-6.0.7/redis.conf &amp;</code>（注意路径选择）</p></li><li><p>自定义配置文件：<code>redis-server test.conf</code>（以conf格式文件保存即可），<code>test.conf</code>文件内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">port <span class="number">1234</span></span><br><span class="line">requirepass <span class="number">123456</span></span><br><span class="line"><span class="meta"># replicaof 192.168.25.131 6379</span></span><br><span class="line"><span class="meta"># slaveof 192.168.25.131 6379</span></span><br><span class="line"><span class="meta"># masterauth 123456</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li>redis的基准测试（测试性能）：<code>redis-benchmark</code></li></ol><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ol><li>必须先启动服务端：<code>redis-server test.conf &gt; redis.log &amp;</code></li><li>启动客户端：<code>redis-cli</code> -h 127.0.0.1 &gt;&gt; 连接redis，指定地址为本机（本机可省略-h参数，可替换为其他IP）<ul><li><code>-h</code>：指定IP</li><li><code>-p</code>：指定端口</li></ul></li><li>验证是否成功进入客户端：输入<code>ping</code>返回结果为<code>PONG</code>，表示成功进入，否则重新运行或输入密码</li><li>输入密码（没设置密码可省略此步骤）：<code>auth 123456</code>返回结果为<code>OK</code>，表示输入正确</li><li>关闭服务器：<code>shutdown</code> 或<code>quit</code>杀进程</li></ol><h2 id="Redis客户端常用命令"><a href="#Redis客户端常用命令" class="headerlink" title="Redis客户端常用命令"></a>Redis客户端常用命令</h2><ul><li>Redis在线手册：<a href="http://redisdoc.com/" target="_blank" rel="noopener">点击进入</a></li></ul><h3 id="string类型"><a href="#string类型" class="headerlink" title="string类型"></a>string类型</h3><ul><li><strong>增：</strong><ol><li><code>set</code> username wlet：永久添加键值对，若键已存在，则覆盖原来的值</li><li><code>set</code> username wlet <code>ex</code> 300：非永久添加键值对，此键值对300秒后自动删除</li><li><code>setnx</code> age 88：永久添加键值对，若键已存在，则不进行任何操作</li><li><code>setex</code> age 60 88：非永久添加键值对，若键已存在，则覆盖原来的值及属性（60代表60秒后自动删除该键值对）</li><li><code>mset</code> number 666666 test 888888：一次添加多个键值对</li></ol></li><li><strong>删：</strong><ol><li><code>del</code> key1 keys：<strong>删除</strong>单个或多个<strong>键值对</strong></li><li><code>fulshudb</code> / <code>flushall</code>：<strong>清空当前</strong>数据库和<strong>所有</strong>数据库</li></ol></li><li><strong>改：</strong><ol><li><code>incr key</code>：给指定键的数字值，+1</li><li><code>incrby key 15</code>：给指定键的数字值，+15</li><li><code>select</code> 15：切换数据，切换到第15个数据库（默认自动创建16个，从0开始）</li><li><code>append</code> password 123：在键对应的值后面追加123</li><li><code>set</code> username wlet：永久添加键值对，若键已存在，则覆盖原来的值</li><li><code>mset</code> number 666666 test 888888：一次添加多个键值对</li><li><code>setex</code> age 60 88：非永久添加键值对，若键已存在，则覆盖原来的值及属性（60代表60秒后自动删除该键值对）</li><li><code>quit</code>：退出客户端</li></ol></li><li><strong>查：</strong><ol><li><code>get</code> username：查看<strong>单个键</strong>对应的<strong>值</strong></li><li><code>mget</code> username password：<strong>一次</strong>查看<strong>多个键</strong>对应的<strong>值</strong></li><li><code>ttl</code> username：查看<strong>键值对存货时间</strong></li><li><code>save</code> / <code>bgsave</code>：<strong>立即保存</strong>与<strong>后台保存</strong></li><li><code>keys</code> <em>：查看*</em>所有的键**</li><li><code>type</code> password：查看<strong>键</strong>的<strong>类型</strong></li><li><code>randomkey</code>：<strong>随机</strong>取出<strong>一个键</strong></li><li><code>dbsize</code>：查看<strong>单个</strong>数据库中<strong>所有键</strong>的<strong>个数</strong></li><li><code>getrange</code> password 2 5：获取<strong>键值切片</strong>后的<strong>值</strong>（从第2个字符开始，第5个字符结束，<strong>[2,5)</strong>区间）</li></ol></li></ul><h3 id="hash类型"><a href="#hash类型" class="headerlink" title="hash类型"></a>hash类型</h3><ul><li><strong>增：</strong><ol><li><code>hset</code> stu1 id 1001：添加单个hash键值对及字段，若键已存在，字段相同会覆盖，不同会追加</li><li><code>hmset</code> stu1 id 1001 name zhangsan age 66：添加多个hash键值对及字段，若键已存在，字段相同会覆盖，不同会追加</li></ol></li><li><strong>删：</strong><ul><li>hdel  key field1 field2：删除<strong>单个hash键</strong>中单个或多个<strong>字段</strong>的<strong>值</strong></li></ul></li><li><strong>改：</strong><ol><li><code>hset</code> stu1 id 1001：添加单个hash键值对及字段，若键已存在，字段相同会覆盖，不同会追加</li><li><code>hmset</code> stu1 id 1001 name zhangsan age 66：添加多个hash键值对及字段，若键已存在，字段相同会覆盖，不同会追加</li></ol></li><li><strong>查：</strong><ol><li><code>hget</code> stu1 name：查看<strong>单个键</strong>中的<strong>单个属性</strong>的<strong>属性值</strong></li><li><code>hgetall</code> stu1：查看<strong>单个键</strong>中的<strong>所有属性</strong>的<strong>属性名</strong>和<strong>属性值</strong></li><li><code>hkeys</code> stu1：查看<strong>单个键</strong>中的<strong>所有字段</strong>的<strong>字段名</strong></li><li><code>hvals</code> stu1：查看<strong>单个键</strong>中的<strong>所有属性</strong>的<strong>属性值</strong></li></ol></li></ul><h3 id="list类型"><a href="#list类型" class="headerlink" title="list类型"></a>list类型</h3><ul><li><strong>增：</strong></li><li>可添加重复元素<ol><li><code>lpush</code> numbers 10 20 30 40 50 60：<strong>向左</strong>依次<strong>添加数据</strong>到number<strong>键</strong>中</li><li><code>rpush</code> numbers 10 20 30 40 50 60：<strong>向右</strong>依次<strong>添加键值</strong></li></ol></li><li><strong>删：</strong><ol><li><code>lpop</code> numbers：<strong>从左</strong>依次<strong>弹出键值</strong>（删除键值），每执行一次，取一个值</li><li><code>rpop</code> numbers：<strong>从右</strong>依次<strong>弹出键值</strong>，每执行一次，取一个值</li></ol></li><li><strong>改：</strong></li><li><strong>查：</strong><ol><li><code>lrange</code> numbers 0 -1：<strong>从左</strong>依次<strong>查看</strong>number<strong>键</strong>中的<strong>数据</strong>（范围），不能向右查看</li></ol></li></ul><h3 id="set类型"><a href="#set类型" class="headerlink" title="set类型"></a>set类型</h3><ul><li><strong>增：</strong></li><li>会去除重复元素<ol><li><code>sadd</code> set1 10 20 20 30 40 50 50 60：集合中添加元素</li></ol></li><li><strong>删：</strong><ol><li><code>spop</code> key 2：<strong>随机弹出</strong>（删除）两个元素</li></ol></li><li><strong>改：</strong></li><li><strong>查：</strong><ol><li><code>smembers</code> set1：查看集合中的<strong>所有的元素</strong></li><li><code>scard</code> set1：查看集合中的<strong>元素个数</strong></li><li><code>sismember</code> set1 20：<strong>判断</strong>集合中<strong>是否存在</strong>该元素（真 / 假：1 / 0）</li><li><code>sinter</code> key1 key2：查看两个键值的<strong>交集</strong></li><li><code>sunion</code> key1 key2：查看两个键值的<strong>并集</strong></li><li><code>sdiff</code> key1 key2：查看两个键值的差集（谁在前，谁为主）</li></ol></li></ul><h3 id="zset类型（有序集合）"><a href="#zset类型（有序集合）" class="headerlink" title="zset类型（有序集合）"></a>zset类型（有序集合）</h3><ul><li><strong>增：</strong><ol><li><code>zadd</code> key 99 zhangsan 66 lisi 88 wangwu 77 zhaoliu：添加有序集合</li></ol></li><li><strong>删：</strong></li><li><strong>改：</strong><ol><li><code>zincrby</code> key 15 zhaoliu：给指定的字段<strong>添加增量</strong>（在原数值上 +15）</li></ol></li><li><strong>查：</strong><ol><li><code>zrange</code> key 0 -1：查看有序集合，按照键值中的数字排列（默认升序）</li><li><code>zrevrange</code> key 0 -1：降序排列</li></ol></li><li><strong>地理位置：</strong><ol><li><code>geoadd</code> key 经度1 维度1 value1 经度2 维度2 value2：<strong>添加</strong>地理位置<strong>键值对</strong>及<strong>字段</strong></li><li><code>geodist</code> key value1 value2 km：计算两个地点之间的距离（默认单位：m）</li><li><code>georadius</code> key 经度 维度 79 km：<strong>判断</strong>并<strong>计算</strong>出<strong>键</strong>中的<strong>每个经纬度</strong>和<strong>此经纬度</strong>的<strong>距离</strong>是否在79km<strong>之内</strong>，若在，就<strong>输出</strong>该位置的<strong>字段值</strong>（value1, value2, ……）</li><li><code>georadius</code> key 经度 维度 79 km <code>withdist</code>：判断并计算两个地方的距离</li></ol></li></ul><h1 id="redis主从复制（读写分离）"><a href="#redis主从复制（读写分离）" class="headerlink" title="redis主从复制（读写分离）"></a>redis主从复制（读写分离）</h1><ul><li>服务端 ==&gt; 客户端 &lt;=&gt; master（主人） ==&gt; slave（奴隶） / replica（复制品） </li></ul><ol><li><p>说明：客户端只能查看服务端中数据，只有读取权限，没有修改和写入权限</p></li><li><p>开放端口：<code>firewall-cmd --zone=public --add-port=6379/tcp</code>（永久开启 / 生效 <code>--permanent</code>参数）服务端（主人）和客户端（奴隶）都必须先开启访问端口</p></li><li><p>启动服务端：</p><ul><li><p><code>redis-server test.conf &gt; redis.log &amp;</code>（按照指定的配置文件，在后台运行redis服务），test.conf文件内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass <span class="number">123456</span></span><br></pre></td></tr></table></figure></li><li><p><code>redis-cli</code> &gt;&gt; <code>auth 123456</code>（启动redis客户端，输入密码进入）</p></li><li><p><code>info replication</code> 查看本机的身份或客户端（奴隶）数量</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/Redis%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907151800.png" alt=""></p></li></ul></li><li><p>启动客户端：</p><ul><li><p><code>redis-server redis.conf &gt; redis.log &amp;</code> ，redis.conf文件内容如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">replicaof <span class="number">192.168</span><span class="number">.25</span><span class="number">.131</span> <span class="number">6379</span></span><br><span class="line">masterauth <span class="number">123456</span></span><br><span class="line">requirepass <span class="number">666666</span></span><br></pre></td></tr></table></figure></li><li><p><code>redis-cli</code> &gt;&gt; <code>auth 666666</code></p></li><li><p><code>info replication</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/Redis%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907152755.png" alt=""></p></li></ul></li><li><p><code>slaveof no one</code>：恢复本机客户端（主人）身份</p></li><li><p><code>info replication</code>：查看本机的身份或客户端（奴隶）数量</p></li></ol><h1 id="检查及修复"><a href="#检查及修复" class="headerlink" title="检查及修复"></a>检查及修复</h1><ul><li><code>redis-server</code>在启动时，<strong>默认开启</strong><code>dump.rdb</code>文件来保存上次的数据；若redis启动报错，可检查并修复此文件（可加入参数<code>--appendonly yes</code>开启<code>appendonly.aof</code>文件保存上次的数据）</li></ul><ol><li><code>redis-chesck-rdb</code> dump.rdb：检查<code>rdb</code>文件是否存在问题（默认文件为<code>dump.rdb</code>）<ul><li><code>--fix</code>：开启修复功能，自动修复文件</li></ul></li><li><code>redis-check-aof</code> appendonly.aof： 检查<code>aof</code>文件是否存在问题（默认为<code>appendonly.aof</code>）<ul><li><code>--fix</code>：开启修复功能，自动修复文件</li></ul></li><li><code>dump.rdb</code>：此文件是由redis服务器自动生成的，用来保存上次redis运行时的状态（防止服务器宕机，造成损失）</li><li><code>appendonly.aof</code>：此文件是启动服务器并设置后创建的，文件内容是将上次输入的命令记录到此文件中</li></ol><h1 id="python3连接并操作redis数据库"><a href="#python3连接并操作redis数据库" class="headerlink" title="python3连接并操作redis数据库"></a>python3连接并操作redis数据库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> redis  <span class="comment"># 导入指定模块</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 注意Redis()中的“大写字母”</span></span><br><span class="line">    client = redis.Redis(host=<span class="string">'192.168.25.131'</span>, port=<span class="number">6379</span>, password=<span class="number">666666</span>)</span><br><span class="line">    print(client)</span><br><span class="line">    clinet.info(<span class="string">'replication'</span>)</span><br><span class="line">    client.set(<span class="string">'username'</span>, <span class="string">'root'</span>, ex=<span class="number">300</span>)</span><br><span class="line">    client.set(<span class="string">'user'</span>, <span class="string">'张三'</span>)</span><br><span class="line">    client.set(<span class="string">'score01'</span>, <span class="number">59</span>)</span><br><span class="line"></span><br><span class="line">    client.save()</span><br><span class="line"></span><br><span class="line">    client.incr(<span class="string">'score01'</span>)</span><br><span class="line">    client.incrby(<span class="string">'score01'</span>, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">    print(client.ttl(<span class="string">'username'</span>))</span><br><span class="line">    print(client.get(<span class="string">'username'</span>))  <span class="comment"># 输出byte字节串类型的数据b'root'</span></span><br><span class="line">    print(client.get(<span class="string">'username'</span>).decode())  <span class="comment"># 解码后为str类型</span></span><br><span class="line">    print(client.get(<span class="string">'user'</span>).decode())</span><br><span class="line">    print(int(client.get(<span class="string">'score01'</span>).decode())) <span class="comment"># 对输出的结果，解码:decode()、转换类型:int()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS8的安装与使用</title>
      <link href="/posts/bd3245e/"/>
      <url>/posts/bd3245e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="阿里镜像目录aarch64、ppc641e、x86-64的区别"><a href="#阿里镜像目录aarch64、ppc641e、x86-64的区别" class="headerlink" title="阿里镜像目录aarch64、ppc641e、x86 64的区别"></a>阿里镜像目录aarch64、ppc641e、x86 64的区别</h1><ol><li><code>x86 64</code>：主流的64位架构，代表厂家有Intel、AMD</li><li><code>aarch64</code>：是arm架构的64位系统，基于armv8指令集的64位架构，应该是后续ARM主流商用服务器的标准</li><li><code>ppc641e</code>：纯小端模式，<a href="https://baike.baidu.com/item/POWER8" target="_blank" rel="noopener">POWER8</a>作为首要目标，OpenPower基金会基础的技术，试图使基于x86的<a href="https://baike.baidu.com/item/Linux" target="_blank" rel="noopener">Linux</a>软件的移植工作以最小的工作量进行</li></ol><h1 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h1><ol><li>参考文献：<a href="https://blog.csdn.net/smallfools/article/details/106952552" target="_blank" rel="noopener">点击进入</a></li><li>注意事项：镜像文件与安装源，根据自己需要一一对应安装（目录选择）</li><li>阿里镜像：<a href="https://mirrors.aliyun.com/centos/8/isos/ppc64le/" target="_blank" rel="noopener">点击进入</a>（选择boot.iso文件即可）</li><li>安装源：<a href="https://mirrors.aliyun.com/centos/8.2.2004/BaseOS/ppc64le/os/" target="_blank" rel="noopener">点击进入</a></li></ol><h1 id="图形化界面（桌面）安装"><a href="#图形化界面（桌面）安装" class="headerlink" title="图形化界面（桌面）安装"></a>图形化界面（桌面）安装</h1><ol><li>参考文件：<a href="https://blog.csdn.net/smallfools/article/details/106952781" target="_blank" rel="noopener">点击进入</a></li><li>使用root用户登录</li><li>尝试启动图形化界面：<code>startx</code>（启动失败，进入一下步骤）</li><li>下载软件：<code>yum grouplist</code></li><li>安装桌面（图形化界面）：<code>yum groupinstall &quot;Server with GUI&quot; -y</code> 耐心等待即可（-y表示自动选择确认）</li><li>安装完成后启动：<code>startx</code>或<code>init 5</code> （每次开机都要重新启动）</li></ol><h1 id="临时修改系统语言（默认英文）"><a href="#临时修改系统语言（默认英文）" class="headerlink" title="临时修改系统语言（默认英文）"></a>临时修改系统语言（默认英文）</h1><ol><li><p>参考文献：<a href="https://blog.csdn.net/smallfools/article/details/106952858" target="_blank" rel="noopener">点击进入</a></p></li><li><p>查看当前语言类型：<code>locale</code> 或者 <code>echo $LANG</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/CentOS8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907095548.png" alt=""></p></li><li><p>查看本地语言字符集：<code>localectl</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/CentOS8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907095615.png" alt=""></p></li><li><p>修改语言类型：<code>LANG=&quot;zh_CN.UTF-8&quot;</code> （每次启动桌面前，都要重新设置）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/CentOS8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907095635.png" alt=""></p></li><li><p>启动图形化界面：<code>startx</code></p></li></ol><h1 id="CentOS8安装中文输入法"><a href="#CentOS8安装中文输入法" class="headerlink" title="CentOS8安装中文输入法"></a>CentOS8安装中文输入法</h1><ol><li><p>安装输入法：<code>yum install ibus-libpinyin.x86_64 -y</code>：或：<code>yum install ibus ibus-libpinyin -y</code></p></li><li><p>设置：汉语（智能拼音）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/CentOS8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907095658.png" alt=""></p></li><li><p>重启系统：<code>init 6</code></p></li><li><p>注意：先查看语言类型，再启动图形化界面</p></li><li><p>检查输入法：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/CentOS8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/20200907100313.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人图床</title>
      <link href="/posts/1fa942db/"/>
      <url>/posts/1fa942db/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="安装PicGo"><a href="#安装PicGo" class="headerlink" title="安装PicGo"></a>安装PicGo</h1><ol><li><p>官方下载最新版：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p></li><li><p>安装插件：在<strong>插件设置</strong>，搜索<code>gitee</code>，只安装<code>gitee-uploader 1.1.2</code>也可以，若在<strong>图床设置</strong>中没有出现<strong>gitee</strong>，重启程序后还是没有，就把两个都安装上（安装插件之前，必须先安装<a href="https://nodejs.org/" target="_blank" rel="noopener">nodejs</a>）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905164405.png" alt=""></p></li><li><p>检查gitee图床是否安装成功</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905164736.png" alt=""></p></li></ol><h1 id="gitee创建仓库"><a href="#gitee创建仓库" class="headerlink" title="gitee创建仓库"></a>gitee创建仓库</h1><ul><li><p>设置如下图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905165459.png" alt=""></p></li></ul><h1 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h1><ol><li><p>打开gitee图床设置，填写如下内容：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905170128.png" alt=""></p></li><li><p>重要操作：</p><ul><li><code>repo</code>：用户名/仓库名称</li><li><code>path</code>处的内容为仓库根目录下的<strong>文件夹</strong>，可随意填写，注意检查输入框第一个字符不能为<strong>空格</strong>（此处可对图片进行分类）</li><li>每次设置完成，必须要点击<strong>确认</strong></li><li><code>token</code>和<code>gitee</code>中的私人令牌一致，若失效，就删除重新设置</li></ul></li></ol><h1 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h1><ol><li><p>进入gitee &gt;&gt; 点击头像 &gt;&gt; 设置：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905170423.png" alt=""></p></li><li><p>选择私人令牌 &gt;&gt; 生成新令牌（右上角）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905171104.png" alt=""></p></li><li><p>将获取到的token复制粘贴到PicGo的gitee设置中</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905171648.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905172010.png" alt=""></p></li></ol><h1 id="测试图床"><a href="#测试图床" class="headerlink" title="测试图床"></a>测试图床</h1><ol><li><p>设置好文件路径<code>path</code>，再先选择一种链接格式，最后选择其中一种上传方式（注意图片大小，超过1M的图片无法在图床中解析）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905172341.png" alt=""></p></li><li><p>上传成功后，链接就在电脑的<strong>粘贴板</strong>，直接在文档中粘贴即可，如下图为<code>Markdown</code>链接格式</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905172630.png" alt=""></p></li><li><p>访问其中的图片链接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905172933.png" alt=""></p></li><li><p>打开gitee，查看刚才创建的图片仓库</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/QQ%E6%88%AA%E5%9B%BE20200905173240.png" alt=""></p></li></ol><h1 id="删除图床中的图片"><a href="#删除图床中的图片" class="headerlink" title="删除图床中的图片"></a>删除图床中的图片</h1><ol><li><p>说明：当图床目录下的所有图片都被删除时，目录也会随之删除</p></li><li><p>先配置gitee图床设置，注意<strong>确认</strong>：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/20200906124806.png" alt=""></p></li><li><p>确认配置后，通过插件一键<code>pull gitee</code>，可在<code>PicGo设置</code>中，设置提示信息等，电脑会有同步成功的提示弹窗</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/20200906151459.png" alt=""></p></li><li><p>查看相册，根据需要删除指定的图片（可重启此程序刷新缓存）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/20200906125514.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web Scraper使用教程</title>
      <link href="/posts/1f90ec0b/"/>
      <url>/posts/1f90ec0b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><ul><li>百度云盘：<ol><li>链接：<a href="https://pan.baidu.com/s/1_01wXhBGCMvZKPF32mAN1g" target="_blank" rel="noopener">点击进入</a> </li><li>提取码：<code>59c1</code></li></ol></li></ul><h1 id="通用爬取步骤"><a href="#通用爬取步骤" class="headerlink" title="通用爬取步骤"></a>通用爬取步骤</h1><h2 id="启动爬虫插件"><a href="#启动爬虫插件" class="headerlink" title="启动爬虫插件"></a>启动爬虫插件</h2><ul><li><p>示例网站：<code>http://www.0797rs.com/</code></p></li><li><p>打开Google浏览器，键盘按<code>F12</code>或右键选择<code>检查</code>，再点击<code>web scraper</code>，进入插件</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903092210.png" alt=""></p></li></ul><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ol><li><p>第一步：依次点击<code>Create new sitemap</code> &gt;&gt; <code>Create Sitemap</code></p></li><li><p>第二步：填写项目名称（任意名称）、目标地址（爬取数据的URL）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903093246.png" alt=""></p></li><li><p>第三步：填写完成后点击<code>Create Sitemap</code>，即可创建项目根目录<code>_root</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903093812.png" alt=""></p></li><li><p>第四步：点击<code>Sitemaps</code>查看所有的项目</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903094302.png" alt=""></p></li></ol><h2 id="创建选区"><a href="#创建选区" class="headerlink" title="创建选区"></a>创建选区</h2><ol><li><p>进入<code>name01</code>项目，点击<code>Add new selector</code>，进入选区设置界面</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903095726.png" alt=""></p></li><li><p><code>id</code>可以为任意三个以上字符名称；<code>type</code>属性为<code>Link</code>（可爬去链接）</p></li><li><p><code>Multiple</code>复选框，获取多个数据（一般都需要选择）</p></li><li><p>重要操作：点击<code>select</code>后，继续点击网页中需要的数据（相同类型的数据，点击2到3个即可自动选择剩余的相同类型数据），当需要的所有数据都被选中后，点击<code>Done selsecting</code>，最后<code>Save select</code>即可</p></li><li><p>查看获取到的数据：点击<code>Data preview</code>即可查看获取到的数据，若数据只有一条或没有，点击<code>Edit</code>重新设置选区，选择<code>Multiple</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903100827.png" alt=""></p></li></ol><h2 id="数据爬取"><a href="#数据爬取" class="headerlink" title="数据爬取"></a>数据爬取</h2><ol><li><p>依次点击<code>Sitemap name01</code> &gt;&gt; <code>Scrape</code> &gt;&gt; <code>start scraping</code> &gt;&gt; <code>refresh</code></p><ul><li><code>name01</code>为项目名称；</li><li>时间一般为默认；</li><li>爬取需要时间，需等待</li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903102131.png" alt=""></p></li><li><p>点击<code>refresh</code>后，查看大概的数据是否正确、完整</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903102603.png" alt=""></p></li></ol><h2 id="数据保存"><a href="#数据保存" class="headerlink" title="数据保存"></a>数据保存</h2><ul><li>依次点击：<code>Sitemap name01</code> &gt;&gt; <code>Export data as CSV</code> &gt;&gt; <code>Download now!</code></li></ul><h1 id="常用选择器类型"><a href="#常用选择器类型" class="headerlink" title="常用选择器类型"></a>常用选择器类型</h1><ul><li>选择器类型是在创建选区时设置的（非常重要的设置）</li></ul><h2 id="文本类型"><a href="#文本类型" class="headerlink" title="文本类型"></a>文本类型</h2><ul><li>进入选区，选择<code>Type</code>的属性值为<code>Text</code>即可</li></ul><h2 id="链接类型"><a href="#链接类型" class="headerlink" title="链接类型"></a>链接类型</h2><ul><li>进入选区，选择<code>Type</code>的属性值为<code>Link</code>即可</li></ul><h2 id="图表类型"><a href="#图表类型" class="headerlink" title="图表类型"></a>图表类型</h2><ol><li><p>进入选区，选择<code>Type</code>的属性值为<code>Table</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903110824.png" alt=""></p></li><li><p><code>Header row selectot</code>与<code>Data rows selector</code>的选区可根据自己需要，在指定的选区再次选择一个小的选区</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903111403.png" alt=""></p></li><li><p><code>Table columns</code>的相关<strong>列</strong>属性，可根据自己需要选择</p></li><li><p>此插件中的所有输入框中的数据，必须大于三个字符</p></li></ol><h1 id="同一页面爬取多种数据内容"><a href="#同一页面爬取多种数据内容" class="headerlink" title="同一页面爬取多种数据内容"></a>同一页面爬取多种数据内容</h1><ol><li><p>注意事项：</p><ul><li>必须先创建一个大选区，并且大选区的<code>Type</code>属性值为<code>Element</code></li><li>大选区可自定义勾选<code>Multiple</code>，若大选区有多个，必须选择<code>Multiple</code>，若大选取只有一个可不选择</li></ul></li><li><p>新建项目 &gt;&gt; 创建大选区（<code>Type</code>的属性值必须为<code>Element</code>；<code>id</code>为任意大于等于三个字符）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903141612.png" alt=""></p></li><li><p>进入大选区内部 &gt;&gt; 创建多个小选区分支</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903142826.png" alt=""></p></li><li><p>小选区设置（必须在网页上标注的选区中创建小选区，一般为网页第一条个数据，会有一个黄色框显示）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903143654.png" alt=""></p></li><li><p>查看获取到的数据：返回项目根目录<code>_root</code>，在大选区<code>all</code>上点击<code>Data preview</code></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200903163723.png" alt=""></p></li><li><p>先运行数据爬取，再选择数据保存</p></li></ol><h1 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h1><h2 id="滚动加载"><a href="#滚动加载" class="headerlink" title="滚动加载"></a>滚动加载</h2><ol start="2"><li>说明：在网站中，每页的数据量很大，所以刚开始只显示部分数据，若要显示全部数据，就要向下滚动，一边滚动一边加载，一直到底部才能加载完整个页面的数据</li><li>示例网站：<code>https://www.jd.com/</code></li><li>注意事项：<ul><li>若将<code>Type</code>的属性值设置为<code>Element</code>，只能获取到的部分数据，未加载的数据无法获取</li><li>将<code>Type</code>的属性值设置为<code>Element scorll down</code>，可一边加载，一边获取，最终获取整个页面的全部数据</li><li>其他操作和<strong>同一页面爬取多种数据内容</strong>基本一致</li></ul></li></ol><h2 id="参数翻页"><a href="#参数翻页" class="headerlink" title="参数翻页"></a>参数翻页</h2><ol><li>说明：观察网站的每页数据，找到有规律的数值，将可变数值替换为特定的表示法</li><li>重要操作：在创建项目时，只需将URL改为可变化的<strong>特殊URL</strong>（如下所示的前三页URL）即可，其他操作不变</li><li>示例网站：<code>https://www.zhipin.com/</code><ul><li>第一页网址：<code>https://www.zhipin.com/c101270100/?query=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&amp;page=1&amp;ka=page-1</code></li><li>第二页网址：<code>https://www.zhipin.com/c101270100/?query=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&amp;page=2&amp;ka=page-2</code></li><li>第三页网址：<code>https://www.zhipin.com/c101270100/?query=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&amp;page=3&amp;ka=page-3</code></li></ul></li><li>设置前三页网址：<code>https://www.zhipin.com/c101270100/?query=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&amp;page=[1-3]&amp;ka=page-[1-3]</code><ul><li>说明：将有规律的参数进行处理，设置为<code>[a-b:c]</code></li><li><code>[a-b:c]</code>：<code>a</code>代表起始数字，<code>b</code>代表结束数字，<code>c</code>代表步长（注意：<code>[a-b]</code>表示取从<code>a~b</code>的数，步长为<code>1</code>）</li><li><code>[1-5:2]</code>：获取的数值依次为<code>1、3、5</code></li></ul></li></ol><h2 id="按钮翻页"><a href="#按钮翻页" class="headerlink" title="按钮翻页"></a>按钮翻页</h2><ol><li><p>说明：当网页URL没有变化时，可用翻页按钮来遍历页面</p></li><li><p>示例网址：<code>https://www.appinn.com/</code></p></li><li><p>过程：新建项目 &gt;&gt; 创建翻页按钮选区、创建其他选区 &gt;&gt; 其他操作</p></li><li><p>注意事项：必须在项目根目录<code>_root</code>下，先创建翻页按钮选区，再创建其他选区，并且此项目中的所有<code>Parent Selectors</code>的所有属性都要选择上</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904102122.png" alt=""></p></li><li><p>在项目根目录下创建大选区</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904102452.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904102816.png" alt=""></p></li><li><p>进入<code>all</code>大选区，再选择其他小选区（小选区中的<code>Parent Selectors</code>属性也必须选择所有）</p></li></ol><h2 id="更多按钮"><a href="#更多按钮" class="headerlink" title="更多按钮"></a>更多按钮</h2><ol><li><p>说明：网站页面只有一个，查看整个页面的所有数据，需要使用<strong>查看更多</strong>、<strong>加载更多</strong>等按钮，此时需要设置<code>Tpye</code>的属性值为<code>Element click</code></p></li><li><p>详细设置如图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904110059.png" alt=""></p></li><li><p><code>Click type</code>的属性值，必须为<code>Click more</code>，代表点击多次</p></li></ol><h2 id="动态加载按钮"><a href="#动态加载按钮" class="headerlink" title="动态加载按钮"></a>动态加载按钮</h2><ol><li><p>说明：在网站中，点击翻页按钮时，只改变页面<strong>局部地区</strong>的内容，不改变整个页面的内容，网址根据情况变化，一般不会变化，但是前程无忧网站的网址会发生改变</p></li><li><p>示例如下：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904122609.png" alt=""></p></li><li><p>此处<strong>大选区</strong>的细节操作</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904123218.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904123419.png" alt=""></p></li></ol><h1 id="爬取二级页面的内容"><a href="#爬取二级页面的内容" class="headerlink" title="爬取二级页面的内容"></a>爬取二级页面的内容</h1><ol><li><p>创建项目 &gt;&gt; 获取一级页面中指定选区的所有链接选区</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904165933.png" alt=""></p></li><li><p>进入二级页面，创建自己需要的选区（可在二级页面先创建一个大选区，再创建小选区），再获取里面的详细数据</p></li><li><p>重要操作：若二级页面在其他窗口打开，只需将二级页面地址复制过来运行即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904165933-1599210447207.png" alt=""></p></li><li><p>打开二级页面，新建选区即可</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/web_scraper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/QQ%E6%88%AA%E5%9B%BE20200904170941.png" alt=""></p></li></ol><h1 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h1><ol><li>此插件通用使用步骤：创建项目 &gt;&gt; 创建选区 &gt;&gt; 数据爬去 &gt;&gt; 数据保存</li><li>此插件中，所有输入框内容必须大于等于三个字符</li><li>爬取的内容不同，选区中的<code>Type</code>属性值不同</li><li>同时获取多种数据，并且多种数据一一对应，相互联系，这时必须要先创建一个大选区（包含所需的所有数据），然后在此大选区中创建多个并列的小选区，每个小选区包含一种数据，这样可以避免各个数据之间错行，数据更加完整、正确</li><li>若大选区无法用鼠标选中，可先选择一个小选区（子选区），再一次次的按P键，依次获取相对的父选区，最终可获得所需的大选区</li><li>爬去多个页面中的内容，可利用元素选择器完成</li><li>翻页按钮和动态加载按钮区别很大；检查元素中，若按钮处没有链接，说明此按钮为动态加载按钮，反之亦然</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google必备插件</title>
      <link href="/posts/32fb2c8c/"/>
      <url>/posts/32fb2c8c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="用户脚本管理器（油猴）"><a href="#用户脚本管理器（油猴）" class="headerlink" title="用户脚本管理器（油猴）"></a>用户脚本管理器（油猴）</h1><ol><li>作用：<code>Tampermonkey</code> 可以说是一款神奇插件，简称为油猴，可以在上面安装各种脚本，如屏蔽网页广告，网盘全速下载，免费观看腾讯、优酷、爱奇艺等各大视频网站VIP电影，免费下载酷狗、腾讯等音乐网站歌曲，免费下载文库文档，领取京东、天猫购物券，购物比价等等，当然你也可以自己写脚本。</li><li>插件名称：<code>Tampermonkey：用户脚本管理器（油猴）</code></li><li>注意事项：安装 <code>Tampermonkey</code> 之后，需要到 <a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> 下载对应的脚本安装</li><li>国内下载地址：<a href="https://www.extfans.com/productivity/dhdgffkkebhmkfjojejmpbldmpobfkfo/" target="_blank" rel="noopener">点击下载</a></li><li>脚本下载地址：<a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">点击下载</a></li></ol><h1 id="广告屏蔽神器"><a href="#广告屏蔽神器" class="headerlink" title="广告屏蔽神器"></a>广告屏蔽神器</h1><ul><li>作用：双管齐下，可以拦截所有浏览器上的广告，包括各种<strong>视频广告</strong>，弹窗内容也是可以正常拦截滴</li></ul><h2 id="AdGuard"><a href="#AdGuard" class="headerlink" title="AdGuard"></a>AdGuard</h2><ol><li>插件名称：<code>AdGuard 广告拦截器</code></li><li>国内下载地址：<a href="https://www.extfans.com/productivity/bgnkhhnnamicmpeenaelnjfhikgbkllg/" target="_blank" rel="noopener">点击下载</a></li></ol><h2 id="Adblock-Plus"><a href="#Adblock-Plus" class="headerlink" title="Adblock Plus"></a>Adblock Plus</h2><ol><li>插件名称：<code>Adblock Plus - 免费广告拦截插件</code></li><li>国内下载地址：<a href="https://www.extfans.com/productivity/cfhdojbkjhnklbpkdaibdccddilifddb/" target="_blank" rel="noopener">点击下载</a></li></ol><h1 id="屏蔽百度全家桶"><a href="#屏蔽百度全家桶" class="headerlink" title="屏蔽百度全家桶"></a>屏蔽百度全家桶</h1><h2 id="百度广告屏蔽"><a href="#百度广告屏蔽" class="headerlink" title="百度广告屏蔽"></a>百度广告屏蔽</h2><ol><li>作用：可以屏蔽百度线上产品页面广告(搜索、新闻、贴吧、知道、音乐、图片、视频、文库等)</li><li>插件名称：<code>百度广告屏蔽</code></li><li>国内下载地址：<a href="https://www.extfans.com/search-tools/bdkobfnbgkbemcfgopfollaikdlknlkm/" target="_blank" rel="noopener">点击下载</a></li></ol><h2 id="屏蔽百度推广"><a href="#屏蔽百度推广" class="headerlink" title="屏蔽百度推广"></a>屏蔽百度推广</h2><ol><li>作用：百度搜索时，自动屏蔽搜索结果中的商业推广链接，让你直接找到你想要的结果，还你一个清爽的百度</li><li>插件名称：<code>屏蔽百度推广</code></li><li>国内下载地址：<a href="https://www.extfans.com/chrome-app/igglgnndooafiikkegchgonogfgggenk/" target="_blank" rel="noopener">点击下载</a></li></ol><h2 id="百度药丸"><a href="#百度药丸" class="headerlink" title="百度药丸"></a>百度药丸</h2><ol><li>作用：该插件不仅可以屏蔽百度广告推广，还能阻止百度追踪；专治百度莆田系、百度黄金眼、百度推广</li><li>插件名称：<code>百度药丸 Baidu Capsule</code></li><li>国内下载地址：<a href="https://www.extfans.com/search-tools/ngiclcoldiplnjcafhjkacjcmdidcmjp/" target="_blank" rel="noopener">点击下载</a></li></ol><h2 id="绿色搜索"><a href="#绿色搜索" class="headerlink" title="绿色搜索"></a>绿色搜索</h2><ol><li>作用：屏蔽百度搜索结果列表中的广告信息, 将移除或者弱化显示</li><li>插件名称：<code>绿色搜索</code></li><li>国内下载地址：<a href="https://www.extfans.com/search-tools/aeajloomjeoncelkceelhhpkgbcgafek/" target="_blank" rel="noopener">点击下载</a></li></ol><h1 id="下载管理插件"><a href="#下载管理插件" class="headerlink" title="下载管理插件"></a>下载管理插件</h1><ul><li>作用：可以帮助你管理chrome下载信息、直观显示下载数量、自动扫描下载文件，并在下载完成后弹出提醒的插件</li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载+"></a>下载+</h2><ol><li>插件名称：<code>下载+</code></li><li>国内下载地址：<a href="https://www.extfans.com/accessibility/gokgophibdidjjpildcdbfpmcahilaaf/" target="_blank" rel="noopener">点击下载</a></li></ol><h2 id="在线下载管理器"><a href="#在线下载管理器" class="headerlink" title="在线下载管理器"></a>在线下载管理器</h2><ol><li>插件名称：<code>在线下载管理器</code></li><li>国内下载地址：<a href="https://www.extfans.com/productivity/opjjpmhoiojifppkkcdabiobhakljdgm/" target="_blank" rel="noopener">点击下载</a></li></ol><h1 id="爬虫神器"><a href="#爬虫神器" class="headerlink" title="爬虫神器"></a>爬虫神器</h1><ol><li>作用：此插件能够爬去网站中显示的数据</li><li>插件名称：<code>web scraper</code></li></ol><h1 id="文件格式化插件"><a href="#文件格式化插件" class="headerlink" title="文件格式化插件"></a>文件格式化插件</h1><ol><li>格式化js文件：<code>code beautifier</code></li><li>格式化json文件：<code>yformater</code></li></ol><h1 id="渗透测试必备插件"><a href="#渗透测试必备插件" class="headerlink" title="渗透测试必备插件"></a>渗透测试必备插件</h1><ol><li>网站技术分析工具：<code>wappalyzer</code></li><li>查看IP和端口等信息：<code>shodan</code></li><li>查看网站IP及其他数据：<code>ip address and domain information</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 插件 </tag>
            
            <tag> Google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫(二)</title>
      <link href="/posts/282f32dc/"/>
      <url>/posts/282f32dc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="json文件简介"><a href="#json文件简介" class="headerlink" title="json文件简介"></a>json文件简介</h1><ol><li>JSON(JavaScript Object Notation)即JavaScript对象表示法,一种轻量级，通用的<strong>文本</strong>数据格式。</li><li>JSON语法支持对象（Object），数组（Array），字符串，数字（int/float）以及true/false和null。</li><li>JSON拥有严格的格式，主要格式如下：<ul><li>只能用双引号，不能用单引号</li><li>元素之间用逗号隔开，最后一个元素不能有逗号</li><li>不支持注释</li><li>中文等特殊字符传输时应确保转为ASCII码（\uXXX格式）</li><li>支持多层嵌套Object或Array</li></ul></li></ol><h1 id="批量爬取糗事百科中的数据"><a href="#批量爬取糗事百科中的数据" class="headerlink" title="批量爬取糗事百科中的数据"></a>批量爬取糗事百科中的数据</h1><ol><li><p>目的：批量获取糗事百科中的文本信息（段子）</p></li><li><p>网址：<code>https://www.qiushibaike.com</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">import</span> json  <span class="comment"># 注意导入json模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一页地址：https://www.qiushibaike.com/text/</span></span><br><span class="line"><span class="comment"># 第二页地址：https://www.qiushibaike.com/text/page/2/</span></span><br><span class="line"><span class="comment"># 第三页地址：https://www.qiushibaike.com/text/page/3/</span></span><br><span class="line"><span class="comment"># 第四页地址：https://www.qiushibaike.com/text/page/4/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 设置文件写入口</span></span><br><span class="line">    w_stream01 = open(<span class="string">'./b.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    w_stream02 = open(<span class="string">'./bb.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># 设置一个空list，用来接收元素</span></span><br><span class="line">    json01 = []</span><br><span class="line"></span><br><span class="line">    num01 = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 遍历目标地址</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        <span class="comment"># 确认目标地址</span></span><br><span class="line">        first_url = <span class="string">'https://www.qiushibaike.com/text/'</span></span><br><span class="line">        target_url = <span class="string">f'https://www.qiushibaike.com/text/page/<span class="subst">&#123;url&#125;</span>/'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> url == <span class="number">1</span>:</span><br><span class="line">            url01 = first_url</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            url01 = target_url</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开始请求目标地址，建立网络连接</span></span><br><span class="line">        response01 = requests.get(url01)</span><br><span class="line">        text01 = response01.text</span><br><span class="line">        <span class="comment"># print(text01)  # 测试网页数据是否获取成功</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 开始加载etree模块</span></span><br><span class="line">        html01 = etree.HTML(text01)</span><br><span class="line">        <span class="comment"># print(etree.tostring(html01).decode('utf-8'))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取整个页面的所有评论数</span></span><br><span class="line">        comments = html01.xpath(<span class="string">'//span[@class="stats-comments"]//i/text()'</span>)</span><br><span class="line">        <span class="comment"># print(comments)</span></span><br><span class="line">        <span class="comment"># print(len(comments))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取整个页面的所有点赞数（数据有误差）</span></span><br><span class="line">        <span class="comment"># goods = html01.xpath('//span[@class="stats-vote"]/i/text()')</span></span><br><span class="line">        <span class="comment"># print(goods)</span></span><br><span class="line">        <span class="comment"># print(len(goods))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取目标地址的二次页面地址</span></span><br><span class="line">        url02 = html01.xpath(<span class="string">'//div[@class="col1 old-style-col1"]/div/a/@href'</span>)</span><br><span class="line">        <span class="comment"># print(url02)</span></span><br><span class="line">        <span class="comment"># print(len(url02))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 去除重复元素</span></span><br><span class="line">        urls02 = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> url02:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> urls02:</span><br><span class="line">                urls02.append(i)</span><br><span class="line">        <span class="comment"># print(urls02)</span></span><br><span class="line">        <span class="comment"># print(len(urls02))</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历二次页面地址，并请求二次页面</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> urls02:</span><br><span class="line">            <span class="keyword">global</span> time01, content</span><br><span class="line">            content_url = <span class="string">f'https://www.qiushibaike.com<span class="subst">&#123;a&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 文章链接</span></span><br><span class="line">            <span class="comment"># print(content_url)  # 检查二次页面是否拼接成功</span></span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                response02 = requests.get(content_url, timeout=<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                response02 = requests.get(content_url, timeout=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            text02 = response02.text</span><br><span class="line">            <span class="comment"># print(text02)</span></span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 加载etree模块</span></span><br><span class="line">            html02 = etree.HTML(text02)</span><br><span class="line">            <span class="comment"># 获取文章内容</span></span><br><span class="line">            content01 = html02.xpath(<span class="string">'//div[@class="content"]/text()'</span>)  <span class="comment"># 文章由多个元素组成，放入list中</span></span><br><span class="line">            <span class="comment"># print(content01)</span></span><br><span class="line">            <span class="keyword">if</span> len(content01) &gt; <span class="number">1</span>:</span><br><span class="line">                content = reduce(<span class="keyword">lambda</span> x, y: <span class="string">f'<span class="subst">&#123;x&#125;</span>\n'</span> + y, content01)  <span class="comment"># 合并列表</span></span><br><span class="line">            <span class="keyword">elif</span> len(content01) == <span class="number">1</span>:</span><br><span class="line">                content = content01[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># print(content01)</span></span><br><span class="line">            <span class="comment"># print(content)</span></span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取文章的作者昵称</span></span><br><span class="line">            author = html02.xpath(<span class="string">'//a[@class="side-left-userinfo"]/img/@alt'</span>)</span><br><span class="line">            <span class="comment"># print(author[0])</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取文章评论数</span></span><br><span class="line">            comment = comments[num]</span><br><span class="line">            <span class="comment"># print(comment)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取文章点赞数</span></span><br><span class="line">            good = html02.xpath(<span class="string">'//span[@class="stats-vote"]/i/text()'</span>)</span><br><span class="line">            <span class="comment"># print(good[0])</span></span><br><span class="line"></span><br><span class="line">            total = html02.xpath(<span class="string">'//div[@class="side-line1"]/text()'</span>)</span><br><span class="line">            <span class="comment"># print(total)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取作者的总点赞数</span></span><br><span class="line">            <span class="comment"># print(total[0])</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取作者的粉丝数</span></span><br><span class="line">            <span class="comment"># print(total[1])</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取作者的总文章数</span></span><br><span class="line">            <span class="comment"># print(total[2])</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取文章的发布时间</span></span><br><span class="line">            time = html02.xpath(<span class="string">'//span[@class="stats-time"]/text()'</span>)</span><br><span class="line">            <span class="comment"># print(time)</span></span><br><span class="line">            <span class="keyword">if</span> len(time) == <span class="number">1</span>:</span><br><span class="line">                time01 = time[<span class="number">0</span>].strip(<span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># print(time01)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 设置空字典，用来接收元素</span></span><br><span class="line">            d = &#123;&#125;</span><br><span class="line">            <span class="comment"># 将获取到的数据添加到字典中</span></span><br><span class="line">            d[<span class="string">'作者'</span>] = author[<span class="number">0</span>]</span><br><span class="line">            d[<span class="string">'文章链接'</span>] = content_url</span><br><span class="line">            d[<span class="string">'文章发布时间'</span>] = time01</span><br><span class="line">            d[<span class="string">'总点赞数'</span>] = total[<span class="number">0</span>]</span><br><span class="line">            d[<span class="string">'粉丝数'</span>] = total[<span class="number">1</span>]</span><br><span class="line">            d[<span class="string">'总文章数'</span>] = total[<span class="number">2</span>]</span><br><span class="line">            d[<span class="string">'文章内容'</span>] = content</span><br><span class="line">            d[<span class="string">'此文章点赞数'</span>] = good[<span class="number">0</span>]</span><br><span class="line">            d[<span class="string">'此文章评论数'</span>] = comment</span><br><span class="line">            <span class="comment"># 将每组数据再添加到list中：json01中</span></span><br><span class="line">            json01.append(d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            str01 = <span class="string">'*'</span>*<span class="number">25</span></span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            num01 += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 文件写入</span></span><br><span class="line">            w_stream01.write(</span><br><span class="line">                <span class="string">f'第<span class="subst">&#123;num01&#125;</span>篇文章\n作者：<span class="subst">&#123;author[<span class="number">0</span>]&#125;</span>\n文章链接：<span class="subst">&#123;content_url&#125;</span>\n文章发布时间：<span class="subst">&#123;time01&#125;</span>\n总点赞数：<span class="subst">&#123;total[<span class="number">0</span>]&#125;</span>\t粉丝数：<span class="subst">&#123;total[<span class="number">1</span>]&#125;</span>\t总文章数：<span class="subst">&#123;total[<span class="number">2</span>]&#125;</span>\n文章内容：\n<span class="subst">&#123;str01&#125;</span>\n<span class="subst">&#123;content&#125;</span>\n<span class="subst">&#123;str01&#125;</span>\n此文章点赞数：<span class="subst">&#123;good[<span class="number">0</span>]&#125;</span>\t此文章评论数：<span class="subst">&#123;comment&#125;</span>\n\n\n'</span>)</span><br><span class="line">            print(<span class="string">f'第<span class="subst">&#123;url&#125;</span>页，第<span class="subst">&#123;num&#125;</span>篇文章，保存成功！'</span>)</span><br><span class="line">            sleep(<span class="number">0.5</span>)</span><br><span class="line">    w_stream01.close()  <span class="comment"># 关闭写入通道，提高代码的稳定性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对json01中的数据进行处理：因为json默认会将中文转换为ascii码，所以要用ensure_ascii参数关闭编码</span></span><br><span class="line">    result = json.dumps(json01, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># 开始写入json文件</span></span><br><span class="line">    w_stream02.write(result)</span><br><span class="line">    w_stream02.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 调用函数，执行代码</span></span><br><span class="line">    test()</span><br></pre></td></tr></table></figure></li></ol><h1 id="爬去前程无忧中的数据"><a href="#爬去前程无忧中的数据" class="headerlink" title="爬去前程无忧中的数据"></a>爬去前程无忧中的数据</h1><ol><li><p>目的：获取此网站中的文本数据</p></li><li><p>网址：<code>https://www.51job.com/</code></p></li><li><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入所需的模块</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从对个页面地址中找规律</span></span><br><span class="line"><span class="comment"># 第一页地址：https://search.51job.com/list/090200,000000,0000,00,9,99,Java%25E5%25BC%2580%25E5%258F%2591,2,1.html</span></span><br><span class="line"><span class="comment"># 第一页地址：https://search.51job.com/list/090200,000000,0000,00,9,99,Java%25E5%25BC%2580%25E5%258F%2591,2,2.html</span></span><br><span class="line"><span class="comment"># 第一页地址：https://search.51job.com/list/090200,000000,0000,00,9,99,Java%25E5%25BC%2580%25E5%258F%2591,2,3.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># url01 = 'https://search.51job.com/list/090200,000000,0000,00,9,99,Java%25E5%25BC%2580%25E5%258F%2591,2,1.html'</span></span><br><span class="line"><span class="comment"># 找到如下规律</span></span><br><span class="line"><span class="comment"># url01 = f'https://search.51job.com/list/090200,000000,0000,00,9,99,&#123;&#125;,2,&#123;&#125;.html'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义要查询的关键词</span></span><br><span class="line">user_input = input(<span class="string">'请输入查询的岗位名称：'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义请求头，伪装成浏览器请求</span></span><br><span class="line">data01 = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义文件写入口</span></span><br><span class="line">w_stream = open(<span class="string">'./51job.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)  <span class="comment"># 注意编码，文本数据不能用wb</span></span><br><span class="line">count = <span class="number">1</span>  <span class="comment"># 用于数据统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取html页面数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html</span><span class="params">()</span>:</span></span><br><span class="line">    response01 = requests.get(url01, headers=data01)</span><br><span class="line">    response01.encoding = <span class="string">'gbk'</span>  <span class="comment"># 注意编码</span></span><br><span class="line">    <span class="keyword">return</span> response01.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则匹配数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">regular</span><span class="params">()</span>:</span></span><br><span class="line">    regular01 = <span class="string">'"company_name":"(.+?)"'</span></span><br><span class="line">    regular02 = <span class="string">'"job_name":"(.+?)"'</span></span><br><span class="line">    regular03 = <span class="string">'"providesalary_text":"(.*?)"'</span></span><br><span class="line">    regular04 = <span class="string">'"workarea_text":"(.+?)"'</span></span><br><span class="line"></span><br><span class="line">    companys = re.findall(regular01, get_html())</span><br><span class="line">    jobs = re.findall(regular02, get_html())</span><br><span class="line">    salarys = re.findall(regular03, get_html())</span><br><span class="line">    addresses = re.findall(regular04, get_html())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> companys, jobs, salarys, addresses  <span class="comment"># 返回多个值，将其放入tuple中</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最终的结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">result</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    results = regular()</span><br><span class="line">    companys01 = results[<span class="number">0</span>]</span><br><span class="line">    jobs01 = results[<span class="number">1</span>]</span><br><span class="line">    salarys01 = results[<span class="number">2</span>]</span><br><span class="line">    addresses01 = results[<span class="number">3</span>]</span><br><span class="line">    <span class="comment"># 因为获取的薪资数据中，存在反斜杠特殊字符，所以要删除的反斜杠</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(len(companys01)):</span><br><span class="line">        salarys01[num] = eval(repr(salarys01[num]).replace(<span class="string">'\\'</span>, <span class="string">''</span>))  <span class="comment"># 注意必须是 \\ 两个</span></span><br><span class="line">        <span class="comment"># 因为薪资可能为空，所以要条件判断</span></span><br><span class="line">        <span class="keyword">if</span> salarys01[num] == <span class="string">''</span>:  <span class="comment"># 注意：''不等于None</span></span><br><span class="line">            salarys01[num] = <span class="string">'面议'</span></span><br><span class="line">        <span class="comment"># 使用三引号，格式化输出</span></span><br><span class="line">        result01 = <span class="string">f'''</span></span><br><span class="line"><span class="string">排行榜：第<span class="subst">&#123;count&#125;</span>名</span></span><br><span class="line"><span class="string">公司名称：<span class="subst">&#123;companys01[num]&#125;</span></span></span><br><span class="line"><span class="string">工作岗位：<span class="subst">&#123;jobs01[num]&#125;</span></span></span><br><span class="line"><span class="string">薪资待遇：<span class="subst">&#123;salarys01[num]&#125;</span></span></span><br><span class="line"><span class="string">公司地址：<span class="subst">&#123;addresses01[num]&#125;</span></span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        w_stream.write(result01)</span><br><span class="line">        print(result01)</span><br><span class="line">        sleep(<span class="number">0.5</span>)  <span class="comment"># 延时可防止服务器拦截</span></span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 遍历页码</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">3</span>):</span><br><span class="line">        url01 = <span class="string">f'https://search.51job.com/list/090200,000000,0000,00,9,99,<span class="subst">&#123;user_input&#125;</span>,2,<span class="subst">&#123;page&#125;</span>.html'</span></span><br><span class="line">        result()</span><br><span class="line">    w_stream.close()  <span class="comment"># 所有数据写入完成后，关闭写入通道，提高代码性能</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3语言 </tag>
            
            <tag> Python3爬虫 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫(一)</title>
      <link href="/posts/871ea9be/"/>
      <url>/posts/871ea9be/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="urllib的用法"><a href="#urllib的用法" class="headerlink" title="urllib的用法"></a>urllib的用法</h1><ol><li><p>说明：<code>urllib</code>是<code>python</code>自带的网络连接库</p></li><li><p>导入模块：<code>import urllib.request</code></p></li><li><p>语法示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 确定目标</span></span><br><span class="line">    url01 = <span class="string">'http://www.baidu.com'</span>  <span class="comment"># 注意网址格式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 建立请求连接对象</span></span><br><span class="line">    response01 = urllib.request.urlopen(url=url01)  <span class="comment"># url=可省略</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回的所有数据，都存放在response01中</span></span><br><span class="line">    print(response01)</span><br><span class="line">    print(type(response01))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取响应码：getcode()（若响应码为200，代表请求成功）</span></span><br><span class="line">    print(response01.getcode())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取响应头信息：info()</span></span><br><span class="line">    print(response01.info())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取字节形式的数据 - --&gt;b''开头（byte）</span></span><br><span class="line">    <span class="comment"># print(response01.read())</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对获取到的数据进行解码：decode('utf-8')</span></span><br><span class="line">    <span class="comment"># 查看目标网站请求头数据：charset=utf-8</span></span><br><span class="line">    print(response01.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></li><li><p>语法示例二：网站内容存在压缩</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入网络请求模块</span></span><br><span class="line"><span class="keyword">import</span> gzip  <span class="comment"># 导入解压缩模块</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url02 = <span class="string">'http://www.qq.com'</span></span><br><span class="line">    response02 = urllib.request.urlopen(url02)</span><br><span class="line">    print(response02.info())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查看目标网站的编码为：charset=GB2312 &lt;=&gt; charset=gbk</span></span><br><span class="line">    <span class="comment"># 目标网站中存在内容压缩：Content-Encoding: gzip</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对内容先解压缩再读取</span></span><br><span class="line">    data02 = response02.read()  <span class="comment"># 读取内容</span></span><br><span class="line">    result02 = gzip.decompress(data02).decode(<span class="string">'gbk'</span>)  <span class="comment"># 解压缩、读取数据、解码</span></span><br><span class="line">    print(result02)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(gzip.decompress(response02.read()).decode('gbk'))</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="requests的用法"><a href="#requests的用法" class="headerlink" title="requests的用法"></a>requests的用法</h1><ol><li><p>在线测试网站地址：<code>http://www.httpbin.org</code></p></li><li><p><code>requests</code>常用方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块（第三方模块，需下载）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    url01 = <span class="string">'https://tieba.baidu.com/f?kw=%E9%A3%8E%E6%99%AF%E5%9B%BE%E7%89%87'</span></span><br><span class="line">    response01 = requests.get(url01)</span><br><span class="line"></span><br><span class="line">    print(response01.text)  <span class="comment"># 将获取到的数据转换为文本内容</span></span><br><span class="line">    print(response01.headers)  <span class="comment"># 获取响应头信息</span></span><br><span class="line">    print(response01.content.decode(<span class="string">'utf-8'</span>))  <span class="comment"># 将获取到的数据，以指定格式解码后输出</span></span><br></pre></td></tr></table></figure></li><li><p>GET请求语法示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块（第三方模块，需下载）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment"># 遍历URL</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="comment"># 确认目标</span></span><br><span class="line">        url01 = <span class="string">f'https://tieba.baidu.com/f?kw=%E9%A3%8E%E6%99%AF%E5%9B%BE%E7%89%87&amp;ie=utf-8&amp;pn=<span class="subst">&#123;url * <span class="number">50</span>&#125;</span>'</span></span><br><span class="line">        <span class="comment"># get请求目标地址（只需一个url即可）</span></span><br><span class="line">        response01 = requests.get(url01)</span><br><span class="line">        <span class="comment"># 将获取到的内容转换为文本内容</span></span><br><span class="line">        text01 = response01.text</span><br><span class="line">        <span class="comment"># print(text01)</span></span><br><span class="line">        <span class="comment"># 将获取到的文本文件写入指定文件夹中（注意新建文件夹）</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">f'./htmls/<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>.html'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> w_stream:  <span class="comment"># 注意编码格式和文本写入w（wb报错）</span></span><br><span class="line">            w_stream.write(text01)</span><br><span class="line">            print(<span class="string">'贴吧的第%d页保存成功！'</span> % (url + <span class="number">1</span>))</span><br><span class="line">            sleep(<span class="number">0.5</span>)  <span class="comment"># 快捷键添加模块：alt + enter</span></span><br></pre></td></tr></table></figure></li><li><p>POST请求语法示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response = requests.post(url=url, data=&#123;<span class="string">'name'</span>: <span class="string">'zhangsan'</span>, <span class="string">'id'</span>: <span class="number">88888</span>&#125;)  <span class="comment"># post请求，只需添加一个data即可</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="正则批量爬去图片"><a href="#正则批量爬去图片" class="headerlink" title="正则批量爬去图片"></a>正则批量爬去图片</h1><h2 id="标清图片获取"><a href="#标清图片获取" class="headerlink" title="标清图片获取"></a>标清图片获取</h2><ol><li><p>图片网站：<code>http://sc.chinaz.com/</code></p></li><li><p>标清图片展示：</p><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/08/20/XxTQUuy5sHfRPzZ.png" alt="站长素材01.png"></p></li><li><p>说明：当前页面显示的图片均为标清图片，高清图片需要再次点击才能看到</p></li><li><p>标清图片获取示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意！此程序获取到的图片为标清图片</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"><span class="keyword">import</span> re  <span class="comment"># 导入正则模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 第一页地址：http://sc.chinaz.com/tu/shuiguo-1-0-0.html</span></span><br><span class="line">    <span class="comment"># 第二页地址：http://sc.chinaz.com/tu/shuiguo-2-0-0.html</span></span><br><span class="line">    <span class="comment"># 第三页地址：http://sc.chinaz.com/tu/shuiguo-3-0-0.html</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 批量下载前三页的图片</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        <span class="comment"># 确定访问的目标地址</span></span><br><span class="line">        url01 = <span class="string">f'http://sc.chinaz.com/tu/shuiguo-<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>-0-0.html'</span></span><br><span class="line">        <span class="comment"># 建立网络连接</span></span><br><span class="line">        response01 = requests.get(url01)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取网页中的数据，以文本文件的格式返回</span></span><br><span class="line">        htmls = response01.text</span><br><span class="line">        <span class="comment"># print(htmls)  # 检查数据是否获取成功</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 定义正则</span></span><br><span class="line">        regular01 = <span class="string">'&lt;img src="http.+?" alt=".+?" class="preview" /&gt;'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 正则匹配，获取到整个页面中的所有匹配数据</span></span><br><span class="line">        result01 = re.findall(regular01, htmls)</span><br><span class="line">        <span class="comment"># print(result01)  # 查看获取到的所有数据是否正确</span></span><br><span class="line">        <span class="comment"># print(len(result01))  # 查看获取到的数据个数：此网站默认一个页面最多40个图片</span></span><br><span class="line"></span><br><span class="line">        num = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> result01:</span><br><span class="line"></span><br><span class="line">            <span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取所有的图片地址</span></span><br><span class="line">            img_regular = <span class="string">'http://.+jpg'</span>  <span class="comment"># 用正则截取字符串数据中的图片网址</span></span><br><span class="line">            img_url = re.findall(img_regular, result)  <span class="comment"># 以list形式返回</span></span><br><span class="line">            <span class="comment"># print(img_url)</span></span><br><span class="line">            <span class="comment"># print(img_url[0])</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取所有的图片名称</span></span><br><span class="line">            name_regular = <span class="string">'alt="(.+?)"'</span></span><br><span class="line">            img_name = re.search(name_regular, result)</span><br><span class="line">            <span class="comment"># print(img_name.group(1))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 请求图片地址</span></span><br><span class="line">            response02 = requests.get(img_url[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取图片内容数据（字节）</span></span><br><span class="line">            content = response02.content</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 下载图片</span></span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">f'./images/<span class="subst">&#123;img_name.group(<span class="number">1</span>)&#125;</span>.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:  <span class="comment"># wb非文本文件，用二进制写入</span></span><br><span class="line">                w_stream.write(content)</span><br><span class="line">                print(<span class="string">f'第<span class="subst">&#123;url +<span class="number">1</span>&#125;</span>页，第<span class="subst">&#123;num&#125;</span>张图片，保存成功！'</span>)</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">            sleep(<span class="number">0.5</span>)  <span class="comment"># 设置延迟，防止waf阻拦</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="高清图片获取"><a href="#高清图片获取" class="headerlink" title="高清图片获取"></a>高清图片获取</h2><ol><li><p>图片网站：<code>http://sc.chinaz.com/</code></p></li><li><p>说明：高清图片单独占用一个页面，所以要用二次页面中的图片链接</p></li><li><p>高清图片获取示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"><span class="keyword">import</span> re  <span class="comment"># 导入正则模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 第一页地址：http://sc.chinaz.com/tu/fengjing-1-0-0.html</span></span><br><span class="line">    <span class="comment"># 第二页地址：http://sc.chinaz.com/tu/fengjing-2-0-0.html</span></span><br><span class="line">    <span class="comment"># 第三页地址：http://sc.chinaz.com/tu/fengjing-3-0-0.html</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 批量下载前两页的图片（可以更多）</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        <span class="comment"># 确定访问的目标地址</span></span><br><span class="line">        url01 = <span class="string">f'http://sc.chinaz.com/tu/fengjing-<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>-0-0.html'</span></span><br><span class="line">        <span class="comment"># 建立网络连接</span></span><br><span class="line">        response01 = requests.get(url01)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取网页中的数据，以文本文件的格式返回</span></span><br><span class="line">        htmls01 = response01.text</span><br><span class="line">        <span class="comment"># print(htmls)  # 检查数据是否获取成功</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 给二次页面范围定义正则</span></span><br><span class="line">        regular01 = <span class="string">'&lt;a target="_blank" href=".+?htm" title=".+?"&gt;'</span></span><br><span class="line">        result01 = re.findall(regular01, htmls01)  <span class="comment"># 正则匹配</span></span><br><span class="line">        <span class="comment"># print(result01)  # 检查二次页面地址是否正确</span></span><br><span class="line">        <span class="comment"># result01 = set(re.findall(regular01, htmls01))  # 集合去除重复项，会改变元素的顺序</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 去除重复元素</span></span><br><span class="line">        result02 = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> result01:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> result02:</span><br><span class="line">                result02.append(i)</span><br><span class="line">        <span class="comment"># print(result02)  # 再次检查二次页面地址</span></span><br><span class="line">        <span class="comment"># print(len(result02))  # 长度检查</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 遍历获取到的数据（二次页面）</span></span><br><span class="line">        num = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> result02:</span><br><span class="line">            <span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 给二次页面地址定义正则</span></span><br><span class="line">            target_regular = <span class="string">'href="(http.+?htm)"'</span></span><br><span class="line">            target_url = re.search(target_regular, result)  <span class="comment"># 正则匹配</span></span><br><span class="line">            <span class="comment"># print(target_url.group(1))  # 检查目标地址是否获取成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 给图片名称定义正则</span></span><br><span class="line">            name_regular = <span class="string">'title="(.+?)"'</span></span><br><span class="line">            name_url = re.search(name_regular, result)  <span class="comment"># 返回内容不是图片名称，需group(1)</span></span><br><span class="line">            <span class="comment"># print(name_url.group(1))  # 检查图片名称是否匹配成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 请求目标地址</span></span><br><span class="line">            response02 = requests.get(target_url.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取网页中的数据</span></span><br><span class="line">            htmls02 = response02.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 给图片地址定义正则</span></span><br><span class="line">            img_regular = <span class="string">'&lt;a href=".+?".+?class="image_gall"&gt;'</span></span><br><span class="line">            <span class="comment"># img_regular = '&lt;img src=".+?jpg" alt=".+?"/&gt;'</span></span><br><span class="line">            img_url = re.findall(img_regular, htmls02)</span><br><span class="line">            <span class="keyword">if</span> len(img_url) != <span class="number">0</span>:</span><br><span class="line">                img_url01 = img_url[<span class="number">0</span>]</span><br><span class="line">                <span class="comment"># print(img_url[0])</span></span><br><span class="line">            <span class="comment"># print(len(img_url))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># print(htmls02)  # 检查数据是否获取成功</span></span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 给高清图片定义正则</span></span><br><span class="line">                img_regular02 = <span class="string">'href="(http.+?jpg)"'</span></span><br><span class="line">                <span class="comment"># 正则匹配</span></span><br><span class="line">                img_url02 = re.search(img_regular02, img_url01)</span><br><span class="line">                <span class="comment"># print(img_url02.group(1))  # 检查图片地址是否正确</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 访问高清图片</span></span><br><span class="line">                response03 = requests.get(img_url02.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取高清图片数据</span></span><br><span class="line">                content01 = response03.content</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 保存高清图片</span></span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">f'./images02/<span class="subst">&#123;name_url.group(<span class="number">1</span>)&#125;</span>.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:</span><br><span class="line">                    w_stream.write(content01)</span><br><span class="line">                    print(<span class="string">f'第<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>页，第<span class="subst">&#123;num&#125;</span>张，高清图片保存成功！'</span>)</span><br><span class="line">                    num += <span class="number">1</span></span><br><span class="line">                sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></li><li><p>优化代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"><span class="keyword">import</span> re  <span class="comment"># 导入正则模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 第一页地址：http://sc.chinaz.com/tu/shuiguo-1-0-0.html</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 第一页地址：http://sc.chinaz.com/tu/fengjing-1-0-0.html</span></span><br><span class="line">    <span class="comment"># 第二页地址：http://sc.chinaz.com/tu/fengjing-2-0-0.html</span></span><br><span class="line">    <span class="comment"># 第三页地址：http://sc.chinaz.com/tu/fengjing-3-0-0.html</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 批量下载前三页的图片</span></span><br><span class="line">        <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">3</span>):</span><br><span class="line">            <span class="comment"># 确定访问的目标地址</span></span><br><span class="line">            url01 = <span class="string">f'http://sc.chinaz.com/tu/fengjing-<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>-0-0.html'</span></span><br><span class="line">            <span class="comment"># 建立网络连接</span></span><br><span class="line">            response01 = requests.get(url01)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取网页中的数据，以文本文件的格式返回</span></span><br><span class="line">            htmls01 = response01.text</span><br><span class="line">            <span class="comment"># print(htmls)  # 检查数据是否获取成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 定义正则</span></span><br><span class="line">            regular01 = <span class="string">'&lt;a target="_blank" href=".+?htm" title=".+?"&gt;'</span></span><br><span class="line">            result01 = re.findall(regular01, htmls01)</span><br><span class="line">            <span class="comment"># result01 = set(re.findall(regular01, htmls01))  # 集合去除重复项，会改变元素的顺序</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 去除重复元素</span></span><br><span class="line">            result02 = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result01:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> result02:</span><br><span class="line">                    result02.append(i)</span><br><span class="line">            <span class="comment"># print(result02)</span></span><br><span class="line">            <span class="comment"># print(len(result02))</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 遍历获取到的数据</span></span><br><span class="line">            num = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> result <span class="keyword">in</span> result02:</span><br><span class="line">                <span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 给目标地址定义正则</span></span><br><span class="line">                target_regular = <span class="string">'href="(http.+htm)"'</span></span><br><span class="line">                target_url = re.search(target_regular, result)  <span class="comment"># 正则匹配</span></span><br><span class="line">                <span class="comment"># print(target_url.group(1))  # 检查目标地址是否获取成功</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 给图片名称定义正则</span></span><br><span class="line">                name_regular = <span class="string">'title="(.+?)"'</span></span><br><span class="line">                name_url = re.search(name_regular, result)  <span class="comment"># 返回内容不是图片名称，需group(1)</span></span><br><span class="line">                <span class="comment"># print(name_url.group(1))  # 检查图片名称是否匹配成功</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 请求目标地址</span></span><br><span class="line">                response02 = requests.get(target_url.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 获取网页中的数据</span></span><br><span class="line">                htmls02 = response02.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 给图片地址定义正则</span></span><br><span class="line">                img_regular = <span class="string">'&lt;a href=".+?".+?class="image_gall"&gt;'</span></span><br><span class="line">                <span class="comment"># img_regular = '&lt;img src=".+?jpg" alt=".+?"/&gt;'</span></span><br><span class="line">                img_url = re.findall(img_regular, htmls02)</span><br><span class="line">                <span class="keyword">if</span> len(img_url) != <span class="number">0</span>:</span><br><span class="line">                    img_url01 = img_url[<span class="number">0</span>]</span><br><span class="line">                    <span class="comment"># print(img_url[0])</span></span><br><span class="line">                <span class="comment"># print(len(img_url))</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># print(htmls02)  # 检查数据是否获取成功</span></span><br><span class="line">                <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 给高清图片定义正则</span></span><br><span class="line">                    img_regular02 = <span class="string">'href="(http.+?jpg)"'</span></span><br><span class="line">                    <span class="comment"># 正则匹配</span></span><br><span class="line">                    img_url02 = re.search(img_regular02, img_url01)</span><br><span class="line">                    <span class="comment"># print(img_url02.group(1))  # 检查图片地址是否正确</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 访问高清图片</span></span><br><span class="line">                    response03 = requests.get(img_url02.group(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 获取高清图片数据</span></span><br><span class="line">                    content01 = response03.content</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 保存高清图片</span></span><br><span class="line">                    <span class="keyword">with</span> open(<span class="string">f'./images03/<span class="subst">&#123;name_url.group(<span class="number">1</span>)&#125;</span>.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:</span><br><span class="line">                        w_stream.write(content01)</span><br><span class="line">                        print(<span class="string">f'第<span class="subst">&#123;url + <span class="number">1</span>&#125;</span>页，第<span class="subst">&#123;num&#125;</span>张，高清图片：<span class="subst">&#123;name_url.group(<span class="number">1</span>)&#125;</span>，保存成功！'</span>)</span><br><span class="line">                        num += <span class="number">1</span></span><br><span class="line">                    sleep(<span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'./异常.txt'</span>, mode=<span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(str(err) + <span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="xpath的用法"><a href="#xpath的用法" class="headerlink" title="xpath的用法"></a>xpath的用法</h1><ol><li><p>作用：可以直接获取标签中的内容，无需正则匹配</p></li><li><p>导入模块：<code>from lxml import etree</code></p></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 网页部分标签示例</span></span><br><span class="line">    data = <span class="string">'''</span></span><br><span class="line"><span class="string">    &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;ul&gt;</span></span><br><span class="line"><span class="string">             &lt;li class="item-0"&gt;&lt;a href="link1.html"&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class="item-1"&gt;&lt;a href="link2.html"&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class="item-inactive"&gt;&lt;a href="link3.html"&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class="item-1"&gt;&lt;a href="link4.html"&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">             &lt;li class="item-0"&gt;&lt;a href="link5.html"&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string">         &lt;/ul&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;div id="pp"&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="http://www.libai.com" title="李白"&gt;李白姓李&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="http://www.dufu.com" title="杜甫"&gt;杜甫姓杜&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;a href="http://www.lihei.com" title="李黑"&gt;李黑姓黑&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 获取html页面数据</span></span><br><span class="line">    html = etree.HTML(data)</span><br><span class="line">    <span class="comment"># 以字符串形式输出数据，并解码</span></span><br><span class="line">    <span class="comment"># print(etree.tostring(html).decode('utf-8'))  # 注意！解码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 全局匹配（查找所有）：//</span></span><br><span class="line">    <span class="comment"># 将匹配到的数据，依次放入list中，使用元素需遍历</span></span><br><span class="line">    result01 = html.xpath(<span class="string">'//li'</span>)</span><br><span class="line">    <span class="comment"># print(result01)</span></span><br><span class="line">    <span class="comment"># for i in result01:</span></span><br><span class="line">    <span class="comment">#     print(etree.tostring(i).decode('utf-8'))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 局部匹配（从当前路径中查找）：/</span></span><br><span class="line">    <span class="comment"># 将匹配到的数据，依次放入list中，使用元素需遍历</span></span><br><span class="line">    result02 = html.xpath(<span class="string">'/html/body/div/ul/li'</span>)  <span class="comment"># 注意！路径最前面的 /</span></span><br><span class="line">    <span class="comment"># result02 = html.xpath('/html//li')  # 局部匹配与全局匹配的使用</span></span><br><span class="line">    <span class="comment"># print(result02)</span></span><br><span class="line">    <span class="comment"># for i in result02:</span></span><br><span class="line">    <span class="comment">#     a = etree.tostring(i).decode('utf-8')</span></span><br><span class="line">    <span class="comment">#     print(a)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 属性匹配（根据标签的class属性，获取对应的标签数据）</span></span><br><span class="line">    <span class="comment"># 语法格式：/或// + 标签 + [@标签属性名称="标签属性值"]</span></span><br><span class="line">    result03 = html.xpath(<span class="string">'//li[@class="item-0"]'</span>)</span><br><span class="line">    <span class="comment"># for i in result03:</span></span><br><span class="line">    <span class="comment">#     a = etree.tostring(i).decode('utf-8')</span></span><br><span class="line">    <span class="comment">#     print(a)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取标签中的内容：text()</span></span><br><span class="line">    result04 = html.xpath(<span class="string">'//a/text()'</span>)</span><br><span class="line">    <span class="comment"># print(result04)  # text文本文件，可直接输出</span></span><br><span class="line">    <span class="comment"># for i in result04:</span></span><br><span class="line">    <span class="comment">#     print(i)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取标签的属性值</span></span><br><span class="line">    <span class="comment"># 语法格式：/或// + 标签/@标签属性名称</span></span><br><span class="line">    <span class="comment"># result05 = html.xpath('//div[@id="pp"]//a/@href')</span></span><br><span class="line">    result05 = html.xpath(<span class="string">'//div[@id="pp"]//a/@title'</span>)</span><br><span class="line">    print(result05)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> result05:</span><br><span class="line">        print(i)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取标签属性值中，带有指定字符的标签数据：contains()</span></span><br><span class="line">    <span class="comment"># 语法格式：/或// + 标签 + [contains(@标签属性名称,"指定字符")]</span></span><br><span class="line">    result06 = html.xpath(<span class="string">'//li[contains(@class,"0")]'</span>)</span><br><span class="line">    <span class="comment"># for i in result06:</span></span><br><span class="line">    <span class="comment">#     print(etree.tostring(i).decode('utf-8'))</span></span><br></pre></td></tr></table></figure></li><li><p>示例二：</p><ul><li><p><code>data.html</code>文件内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"haha"</span>&gt;</span>醉卧沙场君莫笑，古来征战几人回<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"heihei"</span>&gt;</span>两岸猿声啼不住，轻舟已过万重山<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"hehe"</span> <span class="attr">class</span>=<span class="string">"nene"</span>&gt;</span>一骑红尘妃子笑，无人知是荔枝来<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"xixi"</span>&gt;</span>停车坐爱枫林晚，霜叶红于二月花<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"lala"</span>&gt;</span>商女不知亡国恨，隔江犹唱后庭花<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>李白<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"huanghe"</span>&gt;</span>君不见黄河之水天上来，奔流到海不复回<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"tata"</span> <span class="attr">class</span>=<span class="string">"hehe"</span>&gt;</span>李白乘舟将欲行，忽闻岸上踏歌声<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tanshui"</span>&gt;</span>桃花潭水深千尺，不及汪伦送我情<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hh"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span>雷军<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jj"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>3<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>5<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>6<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>8<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>9<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">b</span> <span class="attr">href</span>=<span class="string">"http://mi.com"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">c</span>&gt;</span>3<span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dudu"</span>&gt;</span>are you ok<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"meme"</span>&gt;</span>会飞的猪<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>数据匹配</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 解析文件：parse()</span></span><br><span class="line">    html = etree.parse(<span class="string">'./data.html'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取对应的数据</span></span><br><span class="line">    <span class="comment"># result01 = html.xpath('/html/body/ol/li/text()')</span></span><br><span class="line">    result01 = html.xpath(<span class="string">'//ol/li/text()'</span>)</span><br><span class="line">    <span class="comment"># print(result01)</span></span><br><span class="line">    <span class="comment"># for i in result01:</span></span><br><span class="line">    <span class="comment">#     print(i)</span></span><br><span class="line"></span><br><span class="line">    result02 = html.xpath(<span class="string">'//div[@class="jj"]/b/c/text()'</span>)</span><br><span class="line">    print(result02)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="xpath实战应用"><a href="#xpath实战应用" class="headerlink" title="xpath实战应用"></a>xpath实战应用</h1><ol><li><p>应用：批量获取站长素材的高清图片</p></li><li><p>网址：<code>http://sc.chinaz.com/</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 第一页网址：http://aspx.sc.chinaz.com/query.aspx?keyword=%E7%8B%BC&amp;issale=&amp;classID=11&amp;navindex=0&amp;page=1</span></span><br><span class="line">    <span class="comment"># 第二页网址：http://aspx.sc.chinaz.com/query.aspx?keyword=%E7%8B%BC&amp;issale=&amp;classID=11&amp;navindex=0&amp;page=2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历网页</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">3</span>):</span><br><span class="line">        <span class="comment"># 确认目标地址</span></span><br><span class="line">        url01 = <span class="string">f'http://aspx.sc.chinaz.com/query.aspx?keyword=%E7%8B%BC&amp;issale=&amp;classID=11&amp;navindex=0&amp;page=<span class="subst">&#123;url&#125;</span>'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 请求目标地址</span></span><br><span class="line">        response01 = requests.get(url01)</span><br><span class="line">        text01 = response01.text</span><br><span class="line">        <span class="comment"># print(text01)  # 检查目标是否请求成功</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取整个html页面的数据</span></span><br><span class="line">        html01 = etree.HTML(text01)</span><br><span class="line">        <span class="comment"># print(etree.tostring(html01).decode('utf-8'))  # 检查html页面是否获取成功</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取二次页面的地址</span></span><br><span class="line">        url02 = html01.xpath(<span class="string">'//div[@class="imgload"]//div[@class="im"]/a/@href'</span>)</span><br><span class="line">        <span class="comment"># print(url02)  # 检查二次页面地址是否获取成功</span></span><br><span class="line">        <span class="comment"># print(len(url02))  # 检查二次页面中的地址数量</span></span><br><span class="line"></span><br><span class="line">        num = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> img02 <span class="keyword">in</span> url02:</span><br><span class="line">            <span class="comment"># 请求二次页面的地址</span></span><br><span class="line">            response02 = requests.get(str(img02))</span><br><span class="line">            url_03 = response02.content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            <span class="comment"># print(url_03)  # 检查二次页面是否请求成功</span></span><br><span class="line">            <span class="comment"># break  # 返回第一个就可以了</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取整个二次页面的地址</span></span><br><span class="line">            html02 = etree.HTML(url_03)</span><br><span class="line">            <span class="comment"># print(etree.tostring(html02).decode('utf-8'))  # 检查二次页面是否获取成功</span></span><br><span class="line">            <span class="comment"># break</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取高清图片的地址</span></span><br><span class="line">            img_url = html02.xpath(<span class="string">'//div[@class="imga"]/a/@href'</span>)</span><br><span class="line">            <span class="comment"># print(img_url)  # 检查图片地址是否获取成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取图片名称</span></span><br><span class="line">            img_name = html02.xpath(<span class="string">'//div[@class="imga"]/a/@title'</span>)</span><br><span class="line">            <span class="comment"># print(img_name)  # 检查图片是否获取成功</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 请求图片地址</span></span><br><span class="line">            <span class="keyword">if</span> len(img_url) &gt; <span class="number">0</span>:</span><br><span class="line">                response03 = requests.get(img_url[<span class="number">0</span>])</span><br><span class="line">                <span class="comment"># 获取图片数据</span></span><br><span class="line">                image = response03.content</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 保存图片</span></span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">f'./images01/<span class="subst">&#123;img_name[<span class="number">0</span>]&#125;</span>.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:</span><br><span class="line">                    w_stream.write(image)</span><br><span class="line">                    print(<span class="string">f'第<span class="subst">&#123;url&#125;</span>页，第<span class="subst">&#123;num&#125;</span>张，高清图片：<span class="subst">&#123;img_name[<span class="number">0</span>]&#125;</span>.jpg，保存成功！'</span>)</span><br><span class="line">                    num += <span class="number">1</span></span><br><span class="line">                    sleep(<span class="number">0.5</span>)</span><br><span class="line">        w_stream.close()  <span class="comment"># 全部图片保存成功后，关闭文件写入通道，优化代码</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3语言 </tag>
            
            <tag> Python3爬虫 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3进程、线程、协程的用法(十八)</title>
      <link href="/posts/77ba1902/"/>
      <url>/posts/77ba1902/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h1><ol><li><strong>单核CPU实现多任务原理</strong>：操作系统轮流让各个任务交替执行，QQ执行2us，切换到微信，在执行2us，再切换到陌陌，执行2us……表面是看，每个任务反复执行下去，但是CPU调度执行速度太快了，导致我们感觉就行所有任务都在同时执行一样</li><li><strong>多核CPU实现多任务原理</strong>：真正的秉性执行多任务只能在多核CPU上实现，但是由于任务数量远远多于CPU的核心数量，所以，操作系统也会自动把很多任务轮流调度到每个核心上执行</li><li><strong>并发</strong>：当有多个线程在操作时,如果系统只有一个CPU，则它根本不可能真正同时进行一个以上的线程，它只能把CPU运行时间划分成若干个时间段,再将时间段分配给各个线程执行，在一个时间段的线程代码运行时，其它线程处于挂起状。这种方式我们称之为并发(Concurrent)。</li><li><strong>并行</strong>：当系统有一个以上CPU时，则线程的操作有可能非并发。当一个CPU执行一个线程时，另一个CPU可以执行另一个线程，两个线程互不抢占CPU资源，可以同时进行，这种方式我们称之为并行(Parallel)。</li><li><strong>实现多任务的方式</strong>：多进程模式、多线程模式、协程</li></ol><h1 id="阻塞和非阻塞，同步和异步"><a href="#阻塞和非阻塞，同步和异步" class="headerlink" title="阻塞和非阻塞，同步和异步"></a>阻塞和非阻塞，同步和异步</h1><ol><li>故事：老王烧开水。</li><li>出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。</li><li>老王想了想，有好几种等待方式<ul><li>1.老王用水壶煮水，并且<em>站在那里</em>，<em>不管水开没开，每隔一定时间看看水开了没</em>。－<strong>同步阻塞</strong></li><li>老王想了想，这种方法不够聪明。</li><li>2.老王还是用水壶煮水，不再傻傻的站在那里看水开，<em>跑去寝室上网</em>，<em>但是还是会每隔一段时间过来看看水开了没有，水没有开就走人</em>。－<strong>同步非阻塞</strong></li><li>老王想了想，现在的方法聪明了些，但是还是不够好。</li><li>3.老王这次使用高大上的响水壶来煮水，<em>站在那里</em>，<em>但是不会再每隔一段时间去看水开，而是等水开了，水壶会自动的通知他</em>。－<strong>异步阻塞</strong></li><li>老王想了想，不会呀，既然水壶可以通知我，那我为什么还要傻傻的站在那里等呢，嗯，得换个方法。</li><li>4.老王还是使用响水壶煮水，<em>跑到客厅上网去</em>，等着响水壶<em>自己把水煮熟了以后通知他</em>。－<strong>异步非阻塞</strong></li><li>老王豁然，这下感觉轻松了很多。</li></ul></li></ol><h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><ul><li><strong>进程是最小的资源单位，线程是最小的执行单位</strong></li></ul><h2 id="进程的创建与使用"><a href="#进程的创建与使用" class="headerlink" title="进程的创建与使用"></a>进程的创建与使用</h2><ol><li><p>导入进程模块：<code>from multiprocessing import Process</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">注意事项：</span></span><br><span class="line"><span class="string">若直接调用多个函数，那么函数的执行会有严格的先后顺序，先将一个函数完整的执行完毕，另外一个函数才能继续执行；</span></span><br><span class="line"><span class="string">若给多个任务（函数）创建进程，那么在执行过程中，多个任务会同时执行，提高任务执行的效率</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一个任务</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func01</span><span class="params">(b=<span class="number">5</span>)</span>:</span></span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    list01 = []</span><br><span class="line">    <span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">        <span class="comment"># getpid打印自身的进程号，getppid打印父进程的进程号</span></span><br><span class="line">        print(<span class="string">f'&gt;&gt;&gt;第<span class="subst">&#123;a&#125;</span>次！PID：<span class="subst">&#123;os.getpid()&#125;</span>\tPPID：<span class="subst">&#123;os.getppid()&#125;</span>'</span>)</span><br><span class="line">        list01.append(str(a) + <span class="string">'---func01'</span>)  <span class="comment"># +号代表字符串的拼接，所以要用str()</span></span><br><span class="line">        print(list01)</span><br><span class="line">        sleep(b)  <span class="comment"># 设置延迟</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二个任务</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func02</span><span class="params">(b=<span class="number">5</span>)</span>:</span></span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    list02 = []</span><br><span class="line">    <span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">        print(<span class="string">f'&gt;&gt;&gt;第<span class="subst">&#123;a&#125;</span>次！PID：<span class="subst">&#123;os.getpid()&#125;</span>\tPPID：<span class="subst">&#123;os.getppid()&#125;</span>'</span>)</span><br><span class="line">        list02.append(str(a) + <span class="string">'---func02'</span>)</span><br><span class="line">        print(list02)</span><br><span class="line">        sleep(b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 直接调用任务</span></span><br><span class="line">    <span class="comment"># func01()</span></span><br><span class="line">    <span class="comment"># func02()</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 创建进程</span></span><br><span class="line">    p1 = Process(target=func01, name=<span class="string">'任务一'</span>, args=(<span class="number">1</span>,))</span><br><span class="line">    p2 = Process(target=func02, name=<span class="string">'任务二'</span>, args=(<span class="number">1</span>,))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 只运行程序，不启动程序</span></span><br><span class="line">    <span class="comment"># p1.run()</span></span><br><span class="line">    <span class="comment"># p2.run()</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 启动程序</span></span><br><span class="line">    p1.start()</span><br><span class="line">    print(<span class="string">'+++++++++++++++++++++++++++++++'</span>, <span class="string">f'<span class="subst">&#123;p1.name&#125;</span>：启动成功！'</span>)</span><br><span class="line">    p2.start()</span><br><span class="line">    print(<span class="string">'+++++++++++++++++++++++++++++++'</span>, <span class="string">f'<span class="subst">&#123;p2.name&#125;</span>：启动成功！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ul><li>进程在暂停或停止时，CUP处于空档期，其他程序可以在这段时间内运行，提高执行效率</li><li>在进程中，添加<code>sleep()</code>是因为，代码量较少，执行过程几乎不用时间，手动延时是为了更好的观察程序</li><li><code>target=func01</code>：指定目标，创建线程</li><li><code>name=&#39;任务一&#39;</code>：线程重命名（可省略）</li><li><code>args=(,)</code>：添加任务中的其他参数，并放入<code>tuple</code>中，若参数只有一个时，必须加<code>,</code>号</li></ul></li></ol><h2 id="自定义进程"><a href="#自定义进程" class="headerlink" title="自定义进程"></a>自定义进程</h2><ol><li><p>注意事项：</p><ul><li>自定义的进程必须继承父类</li><li>自定义进程中，必须要重定义<code>run()</code></li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义一个进程类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProcess</span><span class="params">(Process)</span>:</span></span><br><span class="line">    <span class="comment"># 自定义初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义运行程序方法（必须项）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        a = <span class="number">0</span></span><br><span class="line">        b = []</span><br><span class="line">        <span class="keyword">while</span> a &lt; <span class="number">5</span>:</span><br><span class="line">            a += <span class="number">1</span></span><br><span class="line">            b.append(str(a) + self.name)</span><br><span class="line">            print(<span class="string">f'第<span class="subst">&#123;a&#125;</span>次：<span class="subst">&#123;b&#125;</span>'</span>)</span><br><span class="line">            sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 创建进程</span></span><br><span class="line">    p1 = MyProcess(<span class="string">'任务一'</span>)</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt;任务一，启动成功！'</span>)</span><br><span class="line">    p2 = MyProcess(<span class="string">'任务二'</span>)</span><br><span class="line">    print(<span class="string">'&gt;&gt;&gt;任务一，启动成功！'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动进程</span></span><br><span class="line">    p1.start()</span><br><span class="line">    p2.start()</span><br></pre></td></tr></table></figure></li></ol><h2 id="进程池"><a href="#进程池" class="headerlink" title="进程池"></a>进程池</h2><ol><li><p>导入进程池模块：<code>from multiprocessing import Pool</code></p></li><li><p>作用：将多个进程放入到一个地方，同时进行，提高任务执行的效率（非阻塞式更具优势）</p></li><li><p>种类：阻塞式、非阻塞式</p></li><li><p>区别：</p><ul><li>阻塞式进程：内建函数<code>apply(func, args=(,))</code>；无返回值；若第一个任务没有执行完毕，则后面的任务无法执行</li><li>非阻塞式进程：内建函数<code>apply_async(func, args=(,), callback=value)</code>；有返回值；在一个进程池中，只要有一个进程执行完毕，那么其他进程就会插入到那个结束的进程位置（即PID号不变），开始执行</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个任务</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个任务</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func01</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">f'开始做任务：<span class="subst">&#123;name&#125;</span>'</span>)</span><br><span class="line">    start_time = time.time()  <span class="comment"># 任务开始的时间，以秒为单位</span></span><br><span class="line">    time.sleep(random.randint(<span class="number">1</span>, <span class="number">2</span>) * <span class="number">2</span>)  <span class="comment"># 随机延时</span></span><br><span class="line">    end_time = time.time()  <span class="comment"># 任务结束的时间</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f'完成任务：<span class="subst">&#123;name&#125;</span>\t用时：<span class="subst">&#123;end_time - start_time&#125;</span>秒\t进程id：<span class="subst">&#123;os.getpid()&#125;</span>'</span>  <span class="comment"># 返回值</span></span><br><span class="line"></span><br><span class="line">list01 = []  <span class="comment"># 全局空list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于接收返回值的方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback01</span><span class="params">(n)</span>:</span>  <span class="comment"># n代表返回值</span></span><br><span class="line">    list01.append(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务列表</span></span><br><span class="line">tasks = [<span class="string">'开机'</span>, <span class="string">'听音乐'</span>, <span class="string">'python编程'</span>, <span class="string">'看视频'</span>, <span class="string">'写文档'</span>, <span class="string">'清理内存'</span>, <span class="string">'关机'</span>]</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 定义进程池最大数</span></span><br><span class="line">    pool = Pool(<span class="number">4</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 开始依次执行列表中的任务</span></span><br><span class="line">    <span class="keyword">for</span> task <span class="keyword">in</span> tasks:</span><br><span class="line">        <span class="comment"># args接收的参数要放入到tuple中</span></span><br><span class="line">        pool.apply_async(func01, args=(task,), callback=callback01)  <span class="comment"># 非阻塞式进程</span></span><br><span class="line">        <span class="comment"># pool.apply(func01, args=(task,))  # 阻塞式进程</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 以下两个，缺一不可</span></span><br><span class="line">    pool.close()  <span class="comment"># 关闭进程池，不再接受新的进程</span></span><br><span class="line">    pool.join()  <span class="comment"># 主进程阻塞等待子进程的退出</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(list01)  # 查看所有的返回值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历所有的返回值</span></span><br><span class="line">    <span class="keyword">for</span> list <span class="keyword">in</span> list01:</span><br><span class="line">        print(list)</span><br><span class="line">    print(<span class="string">'over!!!'</span>)  <span class="comment"># 所有进程都结束后的输出值（包含主进程和子进程）</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="进程间的通信"><a href="#进程间的通信" class="headerlink" title="进程间的通信"></a>进程间的通信</h2><ol><li><p>作用：因为进程间不共享全局变量，所以使用<code>Queue</code>进行数据通信，可以在父进程中创建两个子进程，一个往<code>Queue</code>里写数据，一个从<code>Queue</code>里取出数据</p></li><li><p>导入模块：<code>from multiprocessing import Queue</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue, Process</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务一</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(q1)</span>:</span></span><br><span class="line">    <span class="comment"># 目标信息</span></span><br><span class="line">    images = [<span class="string">'python.py'</span>, <span class="string">'php.jpg'</span>, <span class="string">'test.py'</span>]</span><br><span class="line">    <span class="comment"># 遍历目标</span></span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">        print(<span class="string">'------&gt;&#123;&#125;正在下载！'</span>.format(image))</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 添加条件，避免超出Queue()的最大值</span></span><br><span class="line">        <span class="keyword">if</span> q1.full():</span><br><span class="line">            print(<span class="string">'队列已满！'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            q1.put(image, timeout=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 任务二</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getfile</span><span class="params">(q1)</span>:</span></span><br><span class="line">    <span class="comment"># 单个进程</span></span><br><span class="line">    <span class="comment"># file = q1.get()</span></span><br><span class="line">    <span class="comment"># print('------&gt;&#123;&#125;保存成功！'.format(file))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 循环多个进程</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># 异常处理</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sleep(<span class="number">1</span>)</span><br><span class="line">            file = q1.get(timeout=<span class="number">2</span>)</span><br><span class="line">            print(<span class="string">'------&gt;&#123;&#125;保存成功！'</span>.format(file))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'全部下载完成！'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    q1 = Queue(<span class="number">2</span>)  <span class="comment"># 设置最大进程数，</span></span><br><span class="line"></span><br><span class="line">    print(q1.qsize())  <span class="comment"># 查看有多少任务</span></span><br><span class="line"></span><br><span class="line">    p1 = Process(target=download, args=(q1,))</span><br><span class="line">    p2 = Process(target=getfile, args=(q1,))</span><br><span class="line"></span><br><span class="line">    p1.start()  <span class="comment"># 启动进程</span></span><br><span class="line">    <span class="comment"># p1.join()  # 主进程阻塞，子进程插队</span></span><br><span class="line"></span><br><span class="line">    print(q1.qsize())</span><br><span class="line"></span><br><span class="line">    p2.start()</span><br><span class="line">    p2.join()  <span class="comment"># 主进程阻塞，子进程插队</span></span><br><span class="line">    print(<span class="string">'over!!!'</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><h2 id="线程的创建与使用"><a href="#线程的创建与使用" class="headerlink" title="线程的创建与使用"></a>线程的创建与使用</h2><ol><li><p>作用：线程是逐个启动的，多线程在运行时不分顺序，当其中一个线程遇到<code>sleep()</code>休眠时，其他线程就会启动（乱序）</p></li><li><p>导入模块：<code>import threading</code></p></li><li><p>注意事项：<code>python3</code>中的线程属于伪线程，因为存在全局解释器锁</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 线程的创建（伪线程）</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">()</span>:</span></span><br><span class="line">    images = [<span class="string">'test.py'</span>, <span class="string">'abc.jpg'</span>, <span class="string">'wlt.php'</span>, <span class="string">'aaa.txt'</span>]</span><br><span class="line">    <span class="keyword">for</span> image <span class="keyword">in</span> images:</span><br><span class="line">        print(<span class="string">'》》》》》》&#123;&#125;正在下载中......'</span>.format(image))</span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">'&gt;&gt;&gt;&gt;&gt;&gt;&#123;&#125;下载完成！'</span>.format(image))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen_music</span><span class="params">()</span>:</span></span><br><span class="line">    musics = [<span class="string">'流浪'</span>, <span class="string">'一个人挺好'</span>, <span class="string">'流浪的子弹'</span>, <span class="string">'孤独的人'</span>]</span><br><span class="line">    <span class="keyword">for</span> music <span class="keyword">in</span> musics:</span><br><span class="line">        print(<span class="string">'++++++歌曲：&#123;&#125;，正在播放中......'</span>.format(music))</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 创建线程</span></span><br><span class="line">    t1 = threading.Thread(target=download, name=<span class="string">'下载'</span>)</span><br><span class="line">    t2 = threading.Thread(target=listen_music)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动线程</span></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br></pre></td></tr></table></figure></li></ol><h2 id="线程锁"><a href="#线程锁" class="headerlink" title="线程锁"></a>线程锁</h2><ol><li><p>作用：用来控制，添加线程后，计算数据时的准确性</p></li><li><p>注意事项：</p><ul><li>加锁：<code>python</code>在使用线程时默认加锁（全局解释器锁），但是计算量不能超过10万，若计算100万的数据时就会不准确</li><li>解锁：当线程计算量超过10万时，python系统就会解除解释器锁，运行会加速，但是数据就会不准确</li><li>自定义线程锁时，有加锁就必须有解锁，并且启动线程后必须要用<code>join()</code></li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="comment">#   创建线程锁</span></span><br><span class="line">lock = threading.Lock()</span><br><span class="line">num = <span class="number">0</span>  <span class="comment"># 全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> num  <span class="comment"># 声明全局变量</span></span><br><span class="line">    lock.acquire()  <span class="comment"># 添加线程锁</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):  <span class="comment"># 循环、计算100万次</span></span><br><span class="line">        num += <span class="number">1</span>  <span class="comment"># 修改全局变量</span></span><br><span class="line">    lock.release()  <span class="comment"># 释放线程锁</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 添加线程</span></span><br><span class="line">    th1 = threading.Thread(target=run)</span><br><span class="line">    th2 = threading.Thread(target=run)</span><br><span class="line">    th3 = threading.Thread(target=run)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动线程</span></span><br><span class="line">    th1.start()</span><br><span class="line">    th2.start()</span><br><span class="line">    th3.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多线程插入（自定义线程锁的必需项）</span></span><br><span class="line">    th1.join()</span><br><span class="line">    th2.join()</span><br><span class="line">    th3.join()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 输出计算后的值</span></span><br><span class="line">    print(num)</span><br></pre></td></tr></table></figure></li></ol><h2 id="自定义线程与死锁"><a href="#自定义线程与死锁" class="headerlink" title="自定义线程与死锁"></a>自定义线程与死锁</h2><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">lockA = Lock()</span><br><span class="line">lockB = Lock()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义一个线程</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThresd1</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> lockA.acquire():  <span class="comment"># 加锁A</span></span><br><span class="line">            print(<span class="string">'获取到A锁了！'</span>, self.name)</span><br><span class="line">            sleep(<span class="number">1</span>)  <span class="comment"># 阻塞</span></span><br><span class="line">            <span class="keyword">if</span> lockB.acquire(timeout=<span class="number">3</span>):  <span class="comment"># 加锁B，被阻塞后，无法运行</span></span><br><span class="line">                print(<span class="string">'又获取到B锁了'</span>, self.name)</span><br><span class="line">                lockB.release()  <span class="comment"># 解锁B</span></span><br><span class="line">            lockA.release() <span class="comment"># 解锁A</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义另一个线程</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThresd2</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> lockB.acquire():</span><br><span class="line">            print(<span class="string">'获取到B锁了！'</span>, self.name)</span><br><span class="line">            sleep(<span class="number">1</span>)  <span class="comment"># 阻塞</span></span><br><span class="line">            <span class="keyword">if</span> lockA.acquire(timeout=<span class="number">3</span>):  <span class="comment"># 被阻塞后，无法运行</span></span><br><span class="line">                print(<span class="string">'又获取到A锁了'</span>, self.name)</span><br><span class="line">                lockA.release()</span><br><span class="line">            lockB.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    t1 = MyThresd1()</span><br><span class="line">    t2 = MyThresd2()</span><br><span class="line"></span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br></pre></td></tr></table></figure></li></ul><h2 id="线程间的通信"><a href="#线程间的通信" class="headerlink" title="线程间的通信"></a>线程间的通信</h2><ol><li><p>导入模块：<code>from queue import Queue</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 线程之间的通信（生产者与消费者）</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">produce</span><span class="params">(q)</span>:</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        ran_num = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line">        q.put(ran_num)</span><br><span class="line">        print(<span class="string">'生产者生产出：&#123;&#125;'</span>.format(ran_num))</span><br><span class="line">        sleep(<span class="number">1</span>)  <span class="comment"># 设置休眠，作为阻塞</span></span><br><span class="line">    <span class="comment"># 在通道中加入None，通道：即线程之间通信的通道</span></span><br><span class="line">    q.put(<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 完成任务：每次get后都要调用task_done，知道所有任务都完成，join()才取消阻塞</span></span><br><span class="line">    q.task_done()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume</span><span class="params">(q)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        item = q.get()</span><br><span class="line">        <span class="keyword">if</span> item == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'消费者购买：&#123;&#125;'</span>.format(item))</span><br><span class="line">        sleep(<span class="number">2</span>)  <span class="comment"># 设置休眠，作为阻塞</span></span><br><span class="line">    <span class="comment"># 完成任务</span></span><br><span class="line">    q.task_done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    q = Queue(<span class="number">10</span>)  <span class="comment"># 定义线程之间的通道；     queue：中文翻译：队列</span></span><br><span class="line"></span><br><span class="line">    th1 = threading.Thread(target=produce, args=(q,))</span><br><span class="line">    th2 = threading.Thread(target=consume, args=(q,))</span><br><span class="line"></span><br><span class="line">    th1.start()</span><br><span class="line">    th2.start()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 线程插队</span></span><br><span class="line">    th1.join()</span><br><span class="line">    th2.join()</span><br></pre></td></tr></table></figure></li></ol><h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><ul><li>特点：<code>python</code>独有的属性</li></ul><h2 id="生成器创建协程"><a href="#生成器创建协程" class="headerlink" title="生成器创建协程"></a>生成器创建协程</h2><ul><li><p>特点：符合多任务同时执行，但是并不是正真的协程</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 协程创建之生成器</span></span><br><span class="line"><span class="comment"># generator实现的协程在yield value时只能将value返回给调用者，无法随意切换到指定的其他协程中</span></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">'A'</span> + str(i))</span><br><span class="line">        <span class="keyword">yield</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">'B'</span> + str(i))</span><br><span class="line">        <span class="keyword">yield</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">        print(<span class="string">'C'</span> + str(i))</span><br><span class="line">        <span class="keyword">yield</span></span><br><span class="line">        sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    g1 = a()</span><br><span class="line">    g2 = b()</span><br><span class="line">    g3 = c()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            next(g1)</span><br><span class="line">            next(g2)</span><br><span class="line">            next(g3)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="greenlet模块创建协程"><a href="#greenlet模块创建协程" class="headerlink" title="greenlet模块创建协程"></a>greenlet模块创建协程</h2><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 协程创建之greenlet</span></span><br><span class="line"><span class="comment"># greenlet中，target.switch（value）可以切换到指定的协程（target）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> greenlet <span class="keyword">import</span> greenlet</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        print(<span class="string">'A'</span> + str(i))</span><br><span class="line">        gb.switch()  <span class="comment"># 切换协程</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        print(<span class="string">'B'</span> + str(i))</span><br><span class="line">        gc.switch()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">4</span>):</span><br><span class="line">        print(<span class="string">'C'</span> + str(i))</span><br><span class="line">        print(<span class="string">'-------------------'</span>)</span><br><span class="line">        ga.switch()</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 创建协程</span></span><br><span class="line">    ga = greenlet(a)</span><br><span class="line">    gb = greenlet(b)</span><br><span class="line">    gc = greenlet(c)</span><br><span class="line"></span><br><span class="line">    ga.switch()  <span class="comment"># 从主进程转换到协程</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="gevent模块创建协程"><a href="#gevent模块创建协程" class="headerlink" title="gevent模块创建协程"></a>gevent模块创建协程</h2><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey  <span class="comment"># 导入猴子补丁</span></span><br><span class="line"><span class="keyword">import</span> urllib.request  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"></span><br><span class="line">monkey.patch_all()  <span class="comment"># 使用猴子补丁</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(url)</span>:</span></span><br><span class="line">    response = urllib.request.urlopen(url)  <span class="comment"># response：中文：响应</span></span><br><span class="line">    content = response.read()  <span class="comment"># content：中文：内容</span></span><br><span class="line">    print(<span class="string">'下载了&#123;&#125;数据，长度为&#123;&#125;'</span>.format(url, len(content)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    urls = [<span class="string">'http://www.baidu.com'</span>, <span class="string">'http://www.qq.com'</span>, <span class="string">'http://www.163.com'</span>]</span><br><span class="line">    g1 = gevent.spawn(download, urls[<span class="number">0</span>])</span><br><span class="line">    g2 = gevent.spawn(download, urls[<span class="number">1</span>])</span><br><span class="line">    g3 = gevent.spawn(download, urls[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">    g1.join()</span><br><span class="line">    g2.join()</span><br><span class="line">    g3.join()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3正则的用法(十七)</title>
      <link href="/posts/d85ea3d4/"/>
      <url>/posts/d85ea3d4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="正则模块"><a href="#正则模块" class="headerlink" title="正则模块"></a>正则模块</h1><ol><li>作用：自定义一个正则，对目标进行匹配</li><li>导入模块：<code>import re</code></li></ol><h1 id="定义正则"><a href="#定义正则" class="headerlink" title="定义正则"></a>定义正则</h1><ul><li><p>内建函数：<code>re.compile(arg)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a = re.compile(<span class="string">'张三'</span>)</span><br></pre></td></tr></table></figure></li></ul><h1 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h1><h2 id="match-的用法"><a href="#match-的用法" class="headerlink" title="match()的用法"></a>match()的用法</h2><ol><li><p>作用：在目标信息中，从头开始匹配；若头部不匹配，则返回None；反之亦然</p></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六'</span></span><br><span class="line"><span class="comment"># 定义正则</span></span><br><span class="line">a = re.compile(<span class="string">'张三'</span>)</span><br><span class="line">b = re.compile(<span class="string">'李四'</span>)</span><br><span class="line"><span class="comment"># 正则匹配</span></span><br><span class="line">print(a.match(msg))  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">print(b.match(msg))  <span class="comment"># None</span></span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ol><li><code>span=(0, 2)</code>：表示匹配成功了，匹配的位置在<code>[0, 2)</code>，下标从<code>0</code>开始，下标到<code>2</code>结束（不包含<code>2</code>的元素）</li><li><code>None</code>：表示匹配失败了，匹配的内容为空</li><li><code>match=&#39;张三&#39;</code>：表示匹配信息为’张三’</li></ol></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">print(re.match(<span class="string">'张三'</span>, msg))  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">print(re.match(<span class="string">'李四'</span>, msg))  <span class="comment"># None</span></span><br></pre></td></tr></table></figure></li><li><p>示例三：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">a = re.match(<span class="string">'张三'</span>, msg)  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">b = re.match(<span class="string">'李四'</span>, msg)  <span class="comment"># None</span></span><br><span class="line">print(a, <span class="string">'\n'</span>, b, sep=<span class="string">''</span>)</span><br><span class="line"><span class="comment"># 返回正则信息，若匹配结果为None，会报错</span></span><br><span class="line">print(a.span())   </span><br><span class="line">print(a.group())</span><br><span class="line">print(a.groups())</span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ul><li><code>span()</code>用法：返回匹配到的字符的位置</li><li><code>group(n)</code>用法：返回第n组匹配的结果，无参数时，返回第0组</li><li><code>groups()</code>用法：返回所有括号匹配的字符，以tuple格式</li></ul></li></ol><h2 id="search-的用法"><a href="#search-的用法" class="headerlink" title="search()的用法"></a>search()的用法</h2><ol><li><p>作用：在目标信息中，从头至尾开始匹配；只要目标信息中存在正则信息，只匹配第一次出现的正则</p></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则</span></span><br><span class="line">a = re.compile(<span class="string">'张三'</span>)</span><br><span class="line">b = re.compile(<span class="string">'李四'</span>)</span><br><span class="line"><span class="comment"># 正则匹配</span></span><br><span class="line">print(a.search(msg))  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">print(b.search(msg))  <span class="comment"># &lt;re.Match object; span=(2, 4), match='李四'&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">print(re.search(<span class="string">'张三'</span>, msg))  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">print(re.search(<span class="string">'李四'</span>, msg))  <span class="comment"># &lt;re.Match object; span=(2, 4), match='李四'&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例三：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">a = re.search(<span class="string">'张三'</span>, msg)  <span class="comment"># &lt;re.Match object; span=(0, 2), match='张三'&gt;</span></span><br><span class="line">b = re.search(<span class="string">'李四'</span>, msg)  <span class="comment"># &lt;re.Match object; span=(2, 4), match='李四'&gt;</span></span><br><span class="line">c = re.search(<span class="string">'张一'</span>, msg)  <span class="comment"># None</span></span><br><span class="line">print(a, <span class="string">'\n'</span>, b, <span class="string">'\n'</span>, c, sep=<span class="string">''</span>)</span><br><span class="line"><span class="comment"># 返回正则信息，若匹配结果为None，会报错</span></span><br><span class="line">print(b.span())</span><br><span class="line">print(b.group())</span><br><span class="line">print(b.groups())</span><br></pre></td></tr></table></figure></li></ol><h2 id="findall-的用法"><a href="#findall-的用法" class="headerlink" title="findall()的用法"></a>findall()的用法</h2><ol><li><p>作用：从头至尾，匹配目标信息中的所有正则，并放入<code>list</code>中</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'张三李四王五赵六李四'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">a = re.findall(<span class="string">'张三'</span>, msg)  <span class="comment"># ['张三']</span></span><br><span class="line">b = re.findall(<span class="string">'李四'</span>, msg)  <span class="comment"># ['李四', '李四']</span></span><br><span class="line">c = re.findall(<span class="string">'张一'</span>, msg)  <span class="comment"># []</span></span><br><span class="line">print(a, <span class="string">'\n'</span>, b, <span class="string">'\n'</span>, c, sep=<span class="string">''</span>)</span><br><span class="line"><span class="comment"># 以下信息，findall()无法使用，因为只返回字符</span></span><br><span class="line"><span class="comment"># print(b.span())</span></span><br><span class="line"><span class="comment"># print(b.group())</span></span><br><span class="line"><span class="comment"># print(b.groups())</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="sub-的用法"><a href="#sub-的用法" class="headerlink" title="sub()的用法"></a>sub()的用法</h2><ol><li><p>作用：利用正则，替换掉正则中的数据（替换的数据可以用函数完成）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">msg = <span class="string">'java:95,python:99'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a)</span>:</span></span><br><span class="line">    nums = a.group()  <span class="comment"># 此处必须用group()函数，获取匹配到的所有内容（注意！获取到的内容为str）</span></span><br><span class="line">    <span class="comment"># print(nums)</span></span><br><span class="line">    num01 = int(nums) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> str(num01)  <span class="comment"># 此处必须是返回值，值必须为str</span></span><br><span class="line"><span class="comment"># 定义正则并匹配，设置替换的内容（注意！有三个参数！）</span></span><br><span class="line">result01 = re.sub(<span class="string">'\d+'</span>, <span class="string">'66'</span>, msg)  <span class="comment"># java:66,python:66</span></span><br><span class="line">result02 = re.sub(<span class="string">'\d+'</span>, func, msg)  <span class="comment"># java:96,python:100</span></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">print(result01)</span><br><span class="line">print(result02)</span><br></pre></td></tr></table></figure></li></ol><h2 id="split-的用法"><a href="#split-的用法" class="headerlink" title="split()的用法"></a>split()的用法</h2><ol><li><p>作用：利用正则，分隔数据（可用多个分隔符同时进行分隔）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">msg = <span class="string">'java:95；python:99'</span></span><br><span class="line"></span><br><span class="line">result01 = re.split(<span class="string">'[；:]'</span>, msg)  <span class="comment"># ['java', '95', 'python', '99']</span></span><br><span class="line">result02 = re.split(<span class="string">'[;:]'</span>, msg)  <span class="comment"># ['java', '95；python', '99']</span></span><br><span class="line"></span><br><span class="line">print(result01)</span><br><span class="line">print(result02)</span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ul><li>分隔符区分中英文</li><li>分隔符必须放在<code>list</code>中，并且分隔符要连续写，空格也算分隔符</li></ul></li></ol><h1 id="正则中的常用符号"><a href="#正则中的常用符号" class="headerlink" title="正则中的常用符号"></a>正则中的常用符号</h1><ol><li><p>作用：可以使用这些符号，定义一个通用的正则</p></li><li><p>正则符号：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 想要获取更多的符号，可在pycharm中：ctrl + 鼠标左键，查看官方注释</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">特殊符号：</span></span><br><span class="line"><span class="string">    ^       开头</span></span><br><span class="line"><span class="string">    $       结尾</span></span><br><span class="line"><span class="string">    .       任意字符（除\n）</span></span><br><span class="line"><span class="string">    []      范围[abc] [0-9] [a-z] [A-Z] [0-9a-zA-Z]</span></span><br><span class="line"><span class="string">    |       或者（并列）</span></span><br><span class="line"><span class="string">    ()      整体包含，里面为word；[]里面是单个字符串</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">正则预定义：</span></span><br><span class="line"><span class="string">\s      space</span></span><br><span class="line"><span class="string">    \S      not space</span></span><br><span class="line"><span class="string">    \d      digit</span></span><br><span class="line"><span class="string">    \D      not digit</span></span><br><span class="line"><span class="string">    \w      word    [0-9a-zA-Z_]    字母数字下划线</span></span><br><span class="line"><span class="string">    \W      not word    [^0-9a-zA-Z_]   此时的^表示：非</span></span><br><span class="line"><span class="string">    \b      有边界</span></span><br><span class="line"><span class="string">    \B      无边界</span></span><br><span class="line"><span class="string">    大写代表反面 \S  非空格  \D  非数字 。。。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">量词：</span></span><br><span class="line"><span class="string">    *      &gt;=0</span></span><br><span class="line"><span class="string">    +      &gt;=1</span></span><br><span class="line"><span class="string">    ?      0 or 1</span></span><br><span class="line"><span class="string">    &#123;m&#125;      固定m位</span></span><br><span class="line"><span class="string">    &#123;m,&#125;     &gt;=m</span></span><br><span class="line"><span class="string">    &#123;m,n&#125;    &gt;= m and &lt;= n</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">qq01 = <span class="string">'249757554855'</span></span><br><span class="line">qq02 = <span class="string">'054865'</span></span><br><span class="line"><span class="comment"># 目标长度</span></span><br><span class="line">print(len(qq01))</span><br><span class="line">print(len(qq02))</span><br><span class="line"><span class="comment"># 定义正则并匹配正则</span></span><br><span class="line">result01 = re.match(<span class="string">'^[1-9][0-9]&#123;4,11&#125;$'</span>, qq01)  <span class="comment"># &lt;re.Match object; span=(0, 12), match='249757554855'&gt;</span></span><br><span class="line">result02 = re.match(<span class="string">'^[1-9][0-9]&#123;4,11&#125;$'</span>, qq02)  <span class="comment"># None</span></span><br><span class="line"><span class="comment"># 输出匹配后的结果</span></span><br><span class="line">print(result01)</span><br><span class="line">print(result02)</span><br></pre></td></tr></table></figure></li><li><p>注意事项：</p><ul><li><code>^</code>开始符，可省略不写；但是<code>$</code>结尾符一般情况下，要写，也可根据情况省略</li><li><code>{4,11}</code>的中间不能有<strong>空格</strong></li><li><code>^[1-9]</code>表示从头开始，<strong>第一位</strong>字符的取值范围为<code>1~9</code></li><li><code>[0-9]{4,11}$</code>表示剩余的取值范围为<code>0~9</code>，并且剩余的字符个数，<code>&gt;=4</code>位，<code>&lt;=11</code>位（注意！是<strong>剩余</strong>的字符个数）</li></ul></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># QQ注册验证</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">要求：</span></span><br><span class="line"><span class="string">    1.QQ号码为纯数字类型</span></span><br><span class="line"><span class="string">    2.QQ号码的第一位不能为0</span></span><br><span class="line"><span class="string">    3.QQ号码的长度必须大于等于5位</span></span><br><span class="line"><span class="string">    4.QQ号码的总长度不能超过12位</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">qq</span><span class="params">()</span>:</span></span><br><span class="line">    user_input = input(<span class="string">'请输入qq号码：'</span>)</span><br><span class="line">    result01 = re.match(<span class="string">'^[1-9][0-9]&#123;4,11&#125;$'</span>, user_input)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> result01 != <span class="literal">None</span>:</span><br><span class="line">        print(<span class="string">'QQ注册成功！'</span>)</span><br><span class="line">    <span class="keyword">elif</span> user_input[<span class="number">0</span>] == <span class="string">'0'</span>:</span><br><span class="line">        print(<span class="string">'QQ注册失败！QQ第一位不能为0'</span>)</span><br><span class="line">    <span class="keyword">elif</span> len(user_input) &gt;<span class="number">12</span>:</span><br><span class="line">        print(<span class="string">'QQ注册失败！长度不能超过12位！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'QQ注册失败！只能输入数字！！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    qq()</span><br></pre></td></tr></table></figure></li><li><p>示例三：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证邮箱</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">a = <span class="string">'test@qq.com'</span></span><br><span class="line">b = <span class="string">'1226@qq.cn'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">result01 = re.match(<span class="string">'^.+@(qq|QQ|163|126).com$'</span>, a)  <span class="comment"># &lt;re.Match object; span=(0, 11), match='test@qq.com'&gt;</span></span><br><span class="line">result02 = re.match(<span class="string">'^.+@(qq|QQ|163|126).com$'</span>, b)  <span class="comment"># None</span></span><br><span class="line"><span class="comment"># 返回匹配后的信息</span></span><br><span class="line">print(result01)</span><br><span class="line">print(result02)</span><br></pre></td></tr></table></figure></li></ol><h1 id="正则之分组"><a href="#正则之分组" class="headerlink" title="正则之分组"></a>正则之分组</h1><ol><li><p>作用：解决了正则表达式中的，重复利用的部分</p></li><li><p>分组符号：<code>()</code></p></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配区号和电话号码</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 目标信息</span></span><br><span class="line">msg = <span class="string">'010-15078618547'</span></span><br><span class="line"><span class="comment"># 目标长度</span></span><br><span class="line">print(len(msg))</span><br><span class="line"><span class="comment"># 定义正则表达式，并匹配</span></span><br><span class="line">result = re.match(<span class="string">'(\d&#123;3&#125;|\d&#123;4&#125;)-([1][3578]\d&#123;9&#125;$)'</span>, msg)</span><br><span class="line"><span class="comment"># 输入匹配的结果</span></span><br><span class="line">print(result)  <span class="comment"># &lt;re.Match object; span=(0, 15), match='010-15078618547'&gt;</span></span><br><span class="line"><span class="comment"># 获取默认第一个分组的内容</span></span><br><span class="line">print(result.group(<span class="number">1</span>))  <span class="comment"># 010</span></span><br><span class="line"><span class="comment"># 获取默认第二个分组的内容</span></span><br><span class="line">print(result.group(<span class="number">2</span>))  <span class="comment"># 15078618547</span></span><br><span class="line"><span class="comment"># 获取正则表达式中的所有分组的内容，并放入tuple中</span></span><br><span class="line">print(result.groups())  <span class="comment"># ('010', '15078618547')</span></span><br></pre></td></tr></table></figure></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分则根据圆括号()，默认从左到右依次1,2,3,...</span></span><br><span class="line"><span class="comment"># 在一个正则表达式中，要使用分组，可用\1,\2,\3,...进行调用（注意格式化字符串r）</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">msg = <span class="string">'&lt;html&gt;&lt;img&gt;hellow python!&lt;/img&gt;&lt;/html&gt;'</span></span><br><span class="line">result = re.match(<span class="string">r'&lt;(\w+)&gt;&lt;(\w+)&gt;.*&lt;/\2&gt;&lt;/\1&gt;$'</span>, msg)</span><br><span class="line">print(result)  <span class="comment"># &lt;re.Match object; span=(0, 38), match='&lt;html&gt;&lt;img&gt;hellow python!&lt;/img&gt;&lt;/html&gt;'&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例三：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义分组名称的格式：?P&lt;name01&gt;</span></span><br><span class="line"><span class="comment"># 调用分组格式：?P=name01</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">msg = <span class="string">'&lt;html&gt;&lt;img&gt;hellow python!&lt;/img&gt;&lt;/html&gt;'</span></span><br><span class="line">result = re.match(<span class="string">r'&lt;(?P&lt;name05&gt;\w+)&gt;&lt;(?P&lt;name02&gt;\w+)&gt;.*&lt;/(?P=name02)&gt;&lt;/(?P=name05)&gt;'</span>, msg)</span><br><span class="line">print(result)  <span class="comment"># &lt;re.Match object; span=(0, 38), match='&lt;html&gt;&lt;img&gt;hellow python!&lt;/img&gt;&lt;/html&gt;'&gt;</span></span><br><span class="line">print(result.groups())  <span class="comment"># ('html', 'img')</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="正则中的贪婪与非贪婪"><a href="#正则中的贪婪与非贪婪" class="headerlink" title="正则中的贪婪与非贪婪"></a>正则中的贪婪与非贪婪</h1><ol><li><p>作用：</p><ul><li><code>Python</code>中数量词默认是贪婪的（在少数语言里也可能是默认非贪婪）</li><li>贪婪模式，总是尝试匹配尽可能多的字符</li><li>非贪婪则相反，总是尝试匹配尽可能少的字符</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">msg = <span class="string">'abc123abc'</span></span><br><span class="line"><span class="comment"># 在每个量词后面都加上 ? 就可以让贪婪模式变为非贪婪模式（注意！是在每个量词后面！）</span></span><br><span class="line">result01 = re.search(<span class="string">'\w+\d+'</span>, msg)  <span class="comment"># 贪婪模式</span></span><br><span class="line">result02 = re.search(<span class="string">'\w+?\d+?'</span>, msg)  <span class="comment"># 非贪婪模式</span></span><br><span class="line"></span><br><span class="line">print(result01.group())  <span class="comment"># abc123</span></span><br><span class="line">print(result02.group())  <span class="comment"># abc1</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="正则应用：爬虫"><a href="#正则应用：爬虫" class="headerlink" title="正则应用：爬虫"></a>正则应用：爬虫</h1><ol><li><p>作用：通过正则表达式，批量进行自动化处理数据</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests  <span class="comment"># 导入网络请求模块</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标信息（可从html页面中获取）</span></span><br><span class="line">msg = <span class="string">'&lt;img src="https://imgsa.baidu.com/forum/crop%3D69%2C0%2C879%2C658%3Bwh%3D227%2C170%3B/sign=63d79c7796dda144ce4636f28f81e98e/5ce87cd98d1001e956012c6bb90e7bec54e797bd.jpg" width="232" height="174"&gt;'</span></span><br><span class="line"><span class="comment"># 定义正则并匹配</span></span><br><span class="line">result = re.search(<span class="string">'&lt;img src="(.+?)"'</span>, msg)</span><br><span class="line"><span class="comment"># 获取匹配到的内容</span></span><br><span class="line">image_path = result.group(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 输出匹配到的内容</span></span><br><span class="line">print(image_path)</span><br><span class="line"><span class="comment"># 网络请求</span></span><br><span class="line">response = requests.get(image_path)</span><br><span class="line"><span class="comment"># 文件写入</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./test.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:</span><br><span class="line">    w_stream.write(response.content)</span><br><span class="line">    print(<span class="string">'图片下载完成！'</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3常用模块的用法(十六)</title>
      <link href="/posts/ab0bc086/"/>
      <url>/posts/ab0bc086/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="random模块"><a href="#random模块" class="headerlink" title="random模块"></a>random模块</h1><ol><li><p>作用：产生一个随机数</p></li><li><p>导入模块：<code>import random</code></p></li><li><p>random模块中的内建函数：</p><ul><li><p><code>random.random()</code>：产生<code>(0,1)</code>之间的随机数，<code>float</code>型</p></li><li><p><code>random.randint(a, b)</code>：产生<code>[a,b]</code>之间的随机整数，<code>int</code>型</p></li><li><p><code>random.randrange(a, b, c)</code>：产生<code>[a,b,c)</code>，产生<code>a~b</code>之间，步长为<code>c</code>（<code>step=c</code>）的随机整数，<code>int</code>型</p></li><li><p><code>random.choice(seq)</code>：随机选择序列中的一个元素，<code>seq</code>代表可迭代的序列</p></li><li><p>random.choices(seq)：随机选择序列中的一个元素，并将此元素放入<code>list</code>中</p><ul><li><p><code>k</code>代表选取的次数，<code>weights</code>代表每个元素的选择概率（必将元素一一对应）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个序列</span></span><br><span class="line">tuple01 = (<span class="string">'张三'</span>, <span class="string">'李四'</span>, <span class="string">'王五'</span>, <span class="string">'赵六'</span>)</span><br><span class="line"><span class="comment"># 按概率选取10个元素，并放入list中，（其中0代表，第一个元素被选取的概率为0）</span></span><br><span class="line">print(random.choices(tuple01, k=<span class="number">10</span>, weights=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]))</span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>random.shuffle(list)</code>：将列表中的元素顺序打乱（仅限于<code>list</code>）</p></li></ul></li><li><p>应用：验证码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    code = <span class="string">''</span>  <span class="comment"># 定义空字符串</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">6</span>):  <span class="comment"># 遍历6次</span></span><br><span class="line">        ran1 = str(random.randint(<span class="number">0</span>, <span class="number">9</span>))  <span class="comment"># 0~9整数</span></span><br><span class="line">        <span class="comment">#   chr()函数：将ascii值，转换为字母；Unicode码 --&gt; str</span></span><br><span class="line">        ran2 = chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))  <span class="comment"># 大写字母(A~Z):65~90</span></span><br><span class="line">        ran3 = chr(random.randint(<span class="number">97</span>, <span class="number">122</span>))  <span class="comment"># 小写字母(a~z)：97~122</span></span><br><span class="line"></span><br><span class="line">        ran = [ran1, ran2, ran3]  <span class="comment"># list中包含：数字、大写字母、小写字母</span></span><br><span class="line">        <span class="comment"># print(ran)</span></span><br><span class="line"></span><br><span class="line">        ran_value = random.choice(ran)  <span class="comment"># 随机选择一个元素</span></span><br><span class="line">        code += ran_value  <span class="comment"># 字符的添加</span></span><br><span class="line">    <span class="keyword">return</span> code  <span class="comment"># 返回最后选择的6个字符</span></span><br><span class="line"></span><br><span class="line">print(func())  <span class="comment"># 输出6个字符，即6为验证码</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h1><ol><li><p>作用：python中的操作模块，可以处理文件和目录（文件夹）</p></li><li><p>导入模块：<code>import os</code></p></li><li><p>注意事项：<code>path</code>代表绝对路径和相对路径</p></li><li><p>os模块下的内建函数</p><ul><li><code>os.getpid()</code>：获取自身的进程号</li><li><code>os.getppid()</code>：获取父进程的进程号</li><li><code>os.getcwd()</code>：获取当前文件夹的绝对路径（无参）</li><li><code>os.listdir(path)</code>：遍历文件夹，获取指定路径下的所有文件，并保存在<code>list</code>中（无参默认路径为当前）</li><li><code>os.remove(path)</code>：删除指定的文件（必须要写路径）</li><li><code>os.mkdir(path)</code>：创建一个文件夹（必须要写路径）</li><li><code>os.rmdir(path)</code>：删除空文件夹（必须要写路径，只能删除空的）</li><li><code>os.chdir(path)</code>：切换文件夹（切换后，用<code>os.getcwd()</code>查看是否切换成功）</li></ul></li><li><p><code>os.path</code>中的内建函数</p><ul><li><code>os.path.dirname(path)</code>：获取<strong>文件夹</strong>的路径（参数为<code>__file__</code>代表当前<strong>文件夹</strong>的路径）</li><li><code>os.path.abspath(path)</code>：获取<strong>文件</strong>或<strong>文件夹</strong>的路径（参数为<code>__file__</code>代表当前<strong>文件</strong>的路径）</li><li><code>os.path.split(path)</code>：将获得的<strong>文件</strong>或<strong>文件夹</strong>路径一分为二，并将其放入<code>tuple</code>中；默认分隔符为最后一个<code>//</code>或<code>\\</code></li><li><code>os.path.splitext(path)</code>：将获得的<strong>文件</strong>路径一分为二，并将其放入<code>tuple</code>中；默认分隔符为最后一个<code>.</code>（必须是文件的路径)</li><li><code>os.path.join(path, file_name)</code>：拼接文件的路径（字符串的拼接）</li><li><code>os.path.getsize(path)</code>：获取<strong>文件</strong>或<strong>文件夹</strong>的大小</li><li><code>os.path.exists(path)</code>：判断<strong>文件</strong>或<strong>文件夹</strong>是否存在</li><li><code>os.path.isabs(path)</code>：判断<code>path</code>是否为<strong>绝对路径</strong>格式，不在乎路径是否存在</li><li><code>os.path.isdir(path)</code>：判断路径是否存在</li></ul></li><li><p>应用：文件复制</p><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   文件复制</span></span><br><span class="line"><span class="comment">#   包含文件夹，实现完整的复制过程</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment">#   确定复制的文件夹路径和复制后的文件夹路径</span></span><br><span class="line">src_path = <span class="string">r'c:\test'</span></span><br><span class="line">target_path = <span class="string">r'c:\test1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   定义复制函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copy</span><span class="params">(src, target)</span>:</span></span><br><span class="line">    <span class="comment"># 判断路径是否存在</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(src) <span class="keyword">and</span> os.path.isdir(target):</span><br><span class="line">        <span class="comment"># 获取文件夹中的文件</span></span><br><span class="line">        file_list = os.listdir(src)</span><br><span class="line">        print(file_list)</span><br><span class="line">        <span class="comment"># 遍历文件</span></span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> file_list:</span><br><span class="line">            <span class="comment"># 拼接完整的路径（要复制文件的路径）</span></span><br><span class="line">            path = os.path.join(src, file)</span><br><span class="line">            <span class="comment"># 判断是否为文件夹</span></span><br><span class="line">            <span class="keyword">if</span> os.path.isdir(path):</span><br><span class="line">                <span class="comment"># 拼接完整文件夹路径</span></span><br><span class="line">                target_path1 = os.path.join(target, file)</span><br><span class="line">                <span class="comment"># 判断文件夹是否存在</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(target_path1):</span><br><span class="line">                    <span class="comment"># 创建文件夹</span></span><br><span class="line">                    os.mkdir(target_path1)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">'文件夹已存在！'</span>)</span><br><span class="line">                <span class="comment"># 递归调用</span></span><br><span class="line">                copy(path, target_path1)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 读取目标文件</span></span><br><span class="line">                <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> r_stream:</span><br><span class="line">                    container = r_stream.read()</span><br><span class="line">                    <span class="comment"># 拼接完整路径（复制后的文件路径）</span></span><br><span class="line">                    path1 = os.path.join(target, file)</span><br><span class="line">                    <span class="comment"># 写入文件</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path1):</span><br><span class="line">                        <span class="keyword">with</span> open(path1, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:</span><br><span class="line">                            w_stream.write(container)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        print(<span class="string">'文件已存在！'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'复制完成！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'输入的路径有误！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用复制函数</span></span><br><span class="line">copy(src_path, target_path)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h1><ol><li>作用：提供对解释器使用或维护的一些变量的访问，以及与解释器强烈交互的函数</li><li>导入模块：<code>import sys</code></li><li>sys模块中的内建函数<ul><li><code>sys.exit(n)</code>：退出程序，正常退出时，<code>n=0</code></li></ul></li><li>sys模块中的内建参数<ul><li><code>sys.version</code>：获取python解释程序的版本信息</li><li><code>sys.path</code>：返回模块的搜索路径，初始化时使用python环境变量的值</li></ul></li></ol><h1 id="time模块"><a href="#time模块" class="headerlink" title="time模块"></a>time模块</h1><ol><li>作用：获取时间和修改时间</li><li>导入模块：<code>import time</code></li><li>time模块中的内建函数：<ul><li><code>time.time()</code>：获取时间戳（以秒为单位）</li><li><code>time.sleep(n)</code>：时间延时，当<code>n=2</code>时，延时2秒</li><li><code>time.ctime()</code>：将时间戳转换为str型；输出（星期，月，日，时分秒，年）</li><li><code>time.localtime()</code>：将时间戳转换为<code>tuple</code>型</li><li><code>time.mktime()</code>：将<code>tuple</code>型时间转换为时间戳，此时的时间戳保留一位小数（四舍五入）</li><li><code>time.strftime()</code>：将<code>tuple</code>型的时间，转换为自定义<code>str</code>型时间；此时的<code>tuple</code>型由底层完成，无需手动<ul><li>示例：<code>time.strftime(&#39;%Y-%m-%d&#39;)</code></li></ul></li><li><code>time.strptime()</code>：将<code>str</code>型时间，转换为自定义<code>tuple</code>型时间<ul><li>示例：<code>time.strptime(&#39;2020/05/22&#39;,&#39;%Y/%m/%d&#39;)</code>（年月日必须一一对应，并且年份必须大写）</li></ul></li></ul></li></ol><h1 id="datetime模块"><a href="#datetime模块" class="headerlink" title="datetime模块"></a>datetime模块</h1><ol><li>作用：获取时间和修改时间</li><li>导入模块：<code>import datetime</code></li><li>datatime模块中的内建函数：<ul><li><code>datetime.time()</code>：输出初始化如期：<code>00:00:00</code></li><li><code>datetime.date(*args)</code>：自定义日期</li><li><code>datetime.datetime.now()</code>：获取当前时间</li><li><code>datetime.timedelta(hours=n)</code>：设置时间差（<code>hours</code>可以替换为其他的关键字，如<code>days</code>等）<ul><li>示例一：<code>datetime.timedelta(hours=2) + datetime.datetime.now()</code> （利用时间差，重定义时间，延时两个小时）</li><li>示例二：<code>datetime.datetime.now() + datetime.timedelta(hours=-2)</code>（提前两个小时）</li></ul></li></ul></li></ol><h1 id="hashlib模块"><a href="#hashlib模块" class="headerlink" title="hashlib模块"></a>hashlib模块</h1><ol><li><p>作用：对数据进行加密操作（不可逆转）</p></li><li><p>导入模块：<code>import hashlib</code></p></li><li><p>内建函数：</p><ul><li><code>hashlib.md5()</code>：低级加密</li><li><code>hashlib.sha3_256()</code>：高级加密</li><li>等等。。。</li></ul></li><li><p>语法格式示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment">#   md5加密</span></span><br><span class="line">msg = <span class="string">'我喜欢你！'</span></span><br><span class="line">md5 = hashlib.md5(msg.encode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#   输出加密结果，必须调用hexdigest()函数</span></span><br><span class="line">print(md5.hexdigest())</span><br><span class="line">print(len(md5.hexdigest()))</span><br><span class="line"></span><br><span class="line"><span class="comment">#   sha3_256加密</span></span><br><span class="line">sha = hashlib.sha3_256(msg.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(sha.hexdigest())</span><br><span class="line">print(len(sha.hexdigest()))</span><br></pre></td></tr></table></figure></li></ol><h2 id="应用：密码验证"><a href="#应用：密码验证" class="headerlink" title="应用：密码验证"></a>应用：密码验证</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   示例：密码验证</span></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="comment"># 注册密码</span></span><br><span class="line">password = <span class="string">'123456'</span> </span><br><span class="line"><span class="comment"># 密码加密</span></span><br><span class="line">md5 = hashlib.md5(password.encode(<span class="string">'utf-8'</span>))  </span><br><span class="line"><span class="comment"># 获取加密后的密码</span></span><br><span class="line">md5_password = md5.hexdigest()</span><br><span class="line">list1 = []</span><br><span class="line">list1.append(md5_password)</span><br><span class="line">print(list1)</span><br><span class="line"><span class="comment"># 输入明文密码</span></span><br><span class="line">input_password = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line"><span class="comment"># 将明文密码进行加密处理</span></span><br><span class="line">input_password = hashlib.md5(input_password.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">input_password1 = input_password.hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 判断密码是否正确</span></span><br><span class="line">    <span class="keyword">if</span> input_password1 == list1[<span class="number">0</span>]:</span><br><span class="line">        print(<span class="string">'密码正确！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'密码输入有误！'</span>)</span><br></pre></td></tr></table></figure><h2 id="哈希算法"><a href="#哈希算法" class="headerlink" title="哈希算法"></a>哈希算法</h2><ol><li><p>通用算法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">disgest = hashlib.md5()  <span class="comment"># 开启哈希指纹</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./Python-3.8.4.tar.xz'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> file_stream:</span><br><span class="line">    data = file_stream.read(<span class="number">1024</span>)  <span class="comment"># 每次读取1024byte数据</span></span><br><span class="line">    <span class="keyword">while</span> data:  <span class="comment"># 当读取到数据时</span></span><br><span class="line">        disgest.update(data)  <span class="comment"># 更新之前所读取的数据</span></span><br><span class="line">        data = file_stream.read(<span class="number">1024</span>)  <span class="comment"># 继续读取剩余的数据</span></span><br><span class="line">print(disgest.hexdigest())  <span class="comment"># 当所有数据都读取完成后，输出hash值</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">代码说明：</span></span><br><span class="line"><span class="string">    1. 通过hashlib计算出文件的hash值；</span></span><br><span class="line"><span class="string">    2. 比较计算后的hash值与初始的hash值是否相同（初始hash值在官网上公布）；</span></span><br><span class="line"><span class="string">    3. 若hash值相同，表示下载的文件是初始文件，安全；若hash值不同，表示下载的文件可能被第三方恶意篡改了或下载的文件有损坏，不是初始文件（慎用），请重新下载。</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    init = <span class="string">'e16df33cd7b58702e57e137f8f5d13e7'</span></span><br><span class="line">    print(<span class="string">'原始文件的hash值：'</span>, init)</span><br><span class="line">    <span class="comment"># 加密方法：md5()、sha1、sha256等  此加密算法属于单向算法，无法还原</span></span><br><span class="line">    digester = hashlib.md5()  <span class="comment"># 开启哈希指纹</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./Python-3.8.4.tar.xz'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> file_stream:</span><br><span class="line">        <span class="comment"># 文件迭代：若文件过大，不可以一次性读取完成，可以每次只读1024个byte，依次迭代</span></span><br><span class="line">        <span class="comment"># 系统内建函数：iter()迭代函数</span></span><br><span class="line">        file_iter = iter(<span class="keyword">lambda</span>: file_stream.read(<span class="number">1024</span>), <span class="string">b''</span>)  <span class="comment"># b''表示读取到空字节时，停止迭代</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> file_iter:</span><br><span class="line">            digester.update(data)</span><br><span class="line">    result = digester.hexdigest()</span><br><span class="line">    print(<span class="string">'该文件的hash值：'</span>, result)</span><br><span class="line">    <span class="keyword">if</span> result == init:</span><br><span class="line">        print(<span class="string">'安全！该文件是初始文件！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'警告！该文件与初始文件不符，请重新下载！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3模块和包的介绍(十五)</title>
      <link href="/posts/901bbff3/"/>
      <url>/posts/901bbff3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一个完整的项目"><a href="#一个完整的项目" class="headerlink" title="一个完整的项目"></a>一个完整的项目</h1><ul><li>项目 &gt; 包 &gt; 模块 &gt; 类 / 全局方法 / 全局变量</li></ul><h1 id="模块和包"><a href="#模块和包" class="headerlink" title="模块和包"></a>模块和包</h1><ul><li><p>包的结构如下：</p><ul><li><code>article</code>包<ul><li><code>__init__.py</code>文件</li><li><code>modules</code>模块</li><li><code>new_modules</code>模块</li></ul></li></ul></li><li><p>特点：</p><ol><li>模块就是一个<code>py</code>文件</li><li>包就是一个包含<code>py</code>文件的文件夹（文件夹中必须要有<code>__init__.py</code>文件）</li></ol></li><li><p>模块示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模块的名称为：modules.py</span></span><br><span class="line"><span class="comment"># 限制模块中的属性</span></span><br><span class="line">__all__ = [<span class="string">'Article'</span>, <span class="string">'a'</span>]  <span class="comment"># 只能访问和使用这两个属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   定义类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span>:</span>  <span class="comment"># article：文章</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, author)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.author = author</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'发表文章：&#123;&#125;  作者：&#123;&#125;'</span>.format(self.name, self.author)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   定义全局方法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span><span class="params">(name, author)</span>:</span></span><br><span class="line">    <span class="comment"># print('发表文章：&#123;&#125;  作者：&#123;&#125;'.format(name,author))</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'发表文章：&#123;&#125;  作者：&#123;&#125;'</span>.format(name, author)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义全局变量</span></span><br><span class="line">a = <span class="string">'全局变量'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 调用类中的普通方法，并输出方法的返回值</span></span><br><span class="line">    print(Article(<span class="string">'张三的自我修养'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    <span class="comment"># 调用函数，并输出返回值</span></span><br><span class="line">    print(article(<span class="string">'李四的自我修养'</span>, <span class="string">'李四'</span>))</span><br><span class="line">    <span class="comment"># 输出全局变量</span></span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li></ul><h1 id="模块的导入与使用"><a href="#模块的导入与使用" class="headerlink" title="模块的导入与使用"></a>模块的导入与使用</h1><ol><li><p><code>import + 模块名</code> / <code>模块名.变量</code> / <code>模块名.函数</code> / <code>模块名.类</code></p></li><li><p><code>from 模块名 import 变量</code> / <code>函数</code> / <code>类</code></p></li><li><p><code>from 模块名 import *</code> （<code>*</code>代表访问所有或部分）</p><ul><li>若模块中没有定义限制访问的内容，则<code>*</code>代表可访问模块的全部内容</li><li>在模块中定义限制访问的内容，形如<code>__all__ = [&#39;变量名&#39;, &#39;函数名&#39;, &#39;类名&#39;]</code>，列表中存放的是可访问的内容</li></ul></li><li><p>注意事项：</p><ul><li>无论是<code>import</code>还是<code>from</code>的形式，都会将模块进行加载</li><li>若模块自身存在调用输出，导入模块时又不想自动调用，可使用<code>if __name__ == &#39;__main__&#39;:</code>进行阻拦</li><li><code>if __name__ == &#39;__main__&#39;:</code>在<code>pycharm</code>中的快捷输入法，直接输入<code>main</code>，在<strong>回车</strong>或者<strong>tab键</strong></li></ul></li><li><p>模块的使用：</p><ul><li><p>若只导入了整个模块，没有导入模块中的内容，使用时必须用<code>模块名 + 属性名</code>，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本文的前提条件：modules.py与当前文件在同一目录下</span></span><br><span class="line"><span class="comment"># 导入整个模块（包含所有属性）</span></span><br><span class="line"><span class="keyword">import</span> modules</span><br><span class="line"><span class="comment"># 通过模块，间接的使用模块中的属性</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(modules.Article(<span class="string">'张三的自我修养'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    print(modules.article(<span class="string">'李四的自我修养'</span>, <span class="string">'李四'</span>))</span><br><span class="line">    print(modules.a)</span><br></pre></td></tr></table></figure></li><li><p>若分别导入了模块中的属性，就不需要再导入整个模块了，使用时，正常调用即可，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本文的前提条件：modules.py与当前文件在同一目录下</span></span><br><span class="line"><span class="comment"># 导入模块中个各个属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入模块中的类</span></span><br><span class="line"><span class="keyword">from</span> modules <span class="keyword">import</span> Article</span><br><span class="line"><span class="comment"># 导入模块中的全局函数</span></span><br><span class="line"><span class="keyword">from</span> modules <span class="keyword">import</span> article</span><br><span class="line"><span class="comment"># 导入模块中的全局变量</span></span><br><span class="line"><span class="keyword">from</span> modules <span class="keyword">import</span> a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接使用模块中的属性</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 调用类中的普通方法，并输出该方法的返回值</span></span><br><span class="line">    print(Article(<span class="string">'张三的自我修养'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    <span class="comment"># 调用函数，并输出返回值</span></span><br><span class="line">    print(article(<span class="string">'李四的自我修养'</span>, <span class="string">'李四'</span>))</span><br><span class="line">    <span class="comment"># 输出全局变量</span></span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li><li><p>若模块导入了指定的属性，只能使用指定的属性，未包含的属性无法使用</p><ul><li><p>注意事项：只能用<code>__all__</code> 来限制访问的属性，并且这个属性是定义在模块中的</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本文的前提条件：modules.py与当前文件在同一目录下</span></span><br><span class="line"><span class="comment"># 导入指定的模块中的属性</span></span><br><span class="line"><span class="keyword">from</span> modules <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(Article(<span class="string">'王五的学习笔记'</span>, <span class="string">'王五'</span>).show())</span><br><span class="line">    <span class="comment"># print(article('王五的学习笔记', '王五'))  # 因为__all__里面不存在 article 属性，所以，无法使用</span></span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ol><h1 id="模块的循环导入"><a href="#模块的循环导入" class="headerlink" title="模块的循环导入"></a>模块的循环导入</h1><ol><li><p>注意事项：</p><ul><li>在一个项目中，尽可能的不要使用循环导入，而且每个模块中的调用或输出语句，应该都放置在<code>__main__</code>中</li><li>若非要循环导入，那么模块中导入的语句，必须要放置一个属性中，比如放在函数中</li></ul></li><li><p>模块1示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> 导入模块<span class="number">2</span> <span class="keyword">import</span> func02</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func01</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'func01()'</span>)</span><br><span class="line">    func02()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task01</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'task01()'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:  <span class="comment"># 只允许自己使用</span></span><br><span class="line">    task01()</span><br><span class="line">    func01()</span><br></pre></td></tr></table></figure></li><li><p>模块2示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func02</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'func02()'</span>)</span><br><span class="line">    <span class="keyword">from</span> 导入模块<span class="number">1</span> <span class="keyword">import</span> task01, func01  <span class="comment"># 导入模块中的task01和fun01属性</span></span><br><span class="line">    task01()</span><br><span class="line">    func01()</span><br></pre></td></tr></table></figure></li></ol><h1 id="包的导入与使用"><a href="#包的导入与使用" class="headerlink" title="包的导入与使用"></a>包的导入与使用</h1><ol><li><p>注意事项：只要两个包在同一目录下，是可以跨包导入的</p></li><li><p>导入包中的指定模块（包括所有属性）：<code>from 包名 import 模块名</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前提条件：article包必须和当前文件在同一目录下（包中必须存在__init__.py文件）</span></span><br><span class="line"><span class="comment"># 导入包中的指定模块（包括所有属性）</span></span><br><span class="line"><span class="keyword">from</span> article <span class="keyword">import</span> modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 使用类属性</span></span><br><span class="line">    print(modules.Article(<span class="string">'张三的学习笔记'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    <span class="comment"># 使用全局方法属性</span></span><br><span class="line">    print(modules.article(<span class="string">'李四的自我修养'</span>, <span class="string">'李四'</span>))</span><br><span class="line">    <span class="comment"># 使用全局变量属性</span></span><br><span class="line">    print(modules.a)</span><br></pre></td></tr></table></figure></li><li><p>导入包中的模块中的属性：<code>from 包名.模块名 import 模块中的属性名</code>（类名 / 全局函数名 / 全局变量名）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前提条件：article包必须和当前文件在同一目录下（包中必须存在__init__.py文件）</span></span><br><span class="line"><span class="comment"># 导入包中的模块中的类属性</span></span><br><span class="line"><span class="keyword">from</span> article.modules <span class="keyword">import</span> Article</span><br><span class="line"><span class="comment"># 导入包中的模块中的全局方法属性</span></span><br><span class="line"><span class="keyword">from</span> article.modules <span class="keyword">import</span> article</span><br><span class="line"><span class="comment"># 导入包中的模块中的全局变量属性</span></span><br><span class="line"><span class="keyword">from</span> article.modules <span class="keyword">import</span> a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(Article(<span class="string">'张三的学习笔记'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    print(article(<span class="string">'李四的学习笔记'</span>, <span class="string">'李四'</span>))</span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li><li><p>导入包中的模块中的指定属性：<code>from 包名.模块名 import *</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入包中的模块中的指定属性</span></span><br><span class="line"><span class="keyword">from</span> article.modules <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(Article(<span class="string">'张三的学习笔记'</span>, <span class="string">'张三'</span>).show())</span><br><span class="line">    <span class="comment"># print(article('李四的学习笔记', '李四'))  # 因为__all__里面不存在 article 属性，所以，无法使用</span></span><br><span class="line">    print(a)</span><br></pre></td></tr></table></figure></li></ol><h1 id="包中的初始化文件的用法"><a href="#包中的初始化文件的用法" class="headerlink" title="包中的初始化文件的用法"></a>包中的初始化文件的用法</h1><ol><li><p>初始化文件：<code>__init__.py</code>（只要是<code>python</code>的包，此文件必须有，否则就不叫包）</p></li><li><p>若在此文件中定义全局变量、全局函数、类，在导入包时，会将这些属性也一并导入（因为导入包会加载此文件）</p></li><li><p>在此文件中，也可以定义<code>__all__</code>全局变量，用来设置包中可使用的模块</p></li><li><p><code>__init__.py</code>文件，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义可访问模块</span></span><br><span class="line">__all__ = [<span class="string">'new_modules'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Run</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'&#123;&#125;今年&#123;&#125;岁！正在跑步中......'</span>.format(self.name, self.age))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建全局函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'&#123;&#125;正在吃饭中......'</span>.format(name))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建全局变量</span></span><br><span class="line">a = <span class="string">'article---&gt;__init__'</span></span><br></pre></td></tr></table></figure></li><li><p><code>new_modules.py</code>文件，内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">students</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'这是new_modules模块中的students()函数！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>直接导入包并使用：<code>import 包名</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接导入包</span></span><br><span class="line"><span class="keyword">import</span> article</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只可以使用__init__.py文件中的属性，无法使用其他包中的属性</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 使用初始化文件中的类属性</span></span><br><span class="line">    article.Run(<span class="string">'小明'</span>, <span class="number">88</span>).show()  <span class="comment"># 类中的普通方法时打印值，可以直接调用</span></span><br><span class="line">    <span class="comment"># 使用初始化文件中的全局函数属性</span></span><br><span class="line">    print(article.eat(<span class="string">'张三'</span>))  <span class="comment"># 全局函数中有返回值，所以用print输出</span></span><br><span class="line">    <span class="comment"># 使用初始化方法中的全局变量属性</span></span><br><span class="line">    print(article.b)</span><br></pre></td></tr></table></figure></li><li><p>导入包中的指定模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接导入包</span></span><br><span class="line"><span class="keyword">from</span> article <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只能使用__all__中指定的模块，不能使用__init__.py文件中的属性</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># 使用包中的指定模块</span></span><br><span class="line">    new_modules.students()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3类的用法(十四)</title>
      <link href="/posts/a9edf108/"/>
      <url>/posts/a9edf108/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h1><ol><li><p>类的作用：用来描述具有相同的属性和方法的对象的集合，它定义了该集合中每个对象所共有的属性和方法，对象是类的实例</p></li><li><p>类：面向对象（OOP）</p></li><li><p>命名规则：类名必须为：首字母大写；若类名由多个单词组成，必须使用驼峰式命名法，如：ValueError</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个简单的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span>  <span class="comment"># 在python中(object)可以省略</span></span><br><span class="line">    name = <span class="string">'张三'</span></span><br><span class="line">    age = <span class="number">88</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接输出类中的属性值</span></span><br><span class="line">print(Person.name)</span><br><span class="line">print(Person.age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类中的属性值</span></span><br><span class="line">Person.name = <span class="string">'李四'</span></span><br><span class="line">print(Person.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用类，并将类存储在变量中</span></span><br><span class="line">a = Person()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出类中的属性值</span></span><br><span class="line">print(a.name)</span><br><span class="line">print(a.age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类中的属性</span></span><br><span class="line">a.age = <span class="number">66</span></span><br><span class="line">print(a.age)</span><br></pre></td></tr></table></figure></li></ol><h1 id="类中的方法"><a href="#类中的方法" class="headerlink" title="类中的方法"></a>类中的方法</h1><ol><li>类中的方法：就是在类中的动作</li><li>种类：普通方法、类方法、静态方法、魔术方法</li></ol><h2 id="初始化方法与普通方法"><a href="#初始化方法与普通方法" class="headerlink" title="初始化方法与普通方法"></a>初始化方法与普通方法</h2><ol><li><p>作用：在类实例化时，会自动调用，属于类中的共有属性，也叫做构造方法</p></li><li><p>注意事项：</p><ul><li>类的方法与普通的函数只有一个特别的区别，它们必须有一个额外的<strong>第一个参数名称</strong>，按照惯例它的名称是<code>self</code></li><li><code>self</code> 代表的是类的实例，代表当前对象的地址，而 <code>self.class</code> 则指向类</li><li><code>self</code> 不是 <code>python</code> 关键字，我们把他换成 <code>arg</code> 也是可以正常执行的</li></ul></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>  <span class="comment"># 定义初始化方法</span></span><br><span class="line">        <span class="comment"># 定义类中的初始化属性（共有属性）</span></span><br><span class="line">        self.name = <span class="string">'张三'</span></span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span>  <span class="comment"># 定义普通方法</span></span><br><span class="line">        <span class="comment"># 在普通方法中使用初始化属性</span></span><br><span class="line">        print(self.name)</span><br><span class="line">        print(self.age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先调用类，在调用类中的普通方法</span></span><br><span class="line">Person().test()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先调用类，并赋值，再调用类中的普通方法</span></span><br><span class="line">a = Person()</span><br><span class="line">a.test()</span><br></pre></td></tr></table></figure></li><li><p>初始化方法中的参数</p><ul><li><p>示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化方法中的参数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.x = name</span><br><span class="line">        self.y = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.x)</span><br><span class="line">        print(self.y)</span><br><span class="line"></span><br><span class="line">Person(<span class="string">'张三'</span>, <span class="number">66</span>).test()</span><br><span class="line"></span><br><span class="line">a = Person(<span class="string">'王五'</span>, <span class="number">99</span>)</span><br><span class="line">a.test()</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h2><ol><li><p>特点：</p><ul><li>类方法只能使用自身的类属性，无法使用<code>__init__(self)</code>及其他属性</li><li>定义类方法，必须使用装饰器<code>@classmethod</code></li><li>类方法中的参数不是一个对象，而是一个类，参数为：<code>cls</code></li><li>类方法不可以使用普通方法</li></ul></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name01 = <span class="string">'王五'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></span><br><span class="line">        self.x = name</span><br><span class="line">        self.y = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.x)</span><br><span class="line">        print(self.y)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(cls, name, food)</span>:</span>  <span class="comment"># 类方法中，可以不加参数</span></span><br><span class="line">        cls.name01 = <span class="string">'李华'</span>  <span class="comment"># 类方法不仅可以使用类中的自由属性，还可以修改</span></span><br><span class="line">        cls.name = name</span><br><span class="line">        cls.food = food</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;cls.name&#125;</span>正在吃<span class="subst">&#123;cls.food&#125;</span>...'</span>)</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;cls.name01&#125;</span>正在吃<span class="subst">&#123;cls.food&#125;</span>...'</span>)  <span class="comment"># 类方法可以使用类中的自由属性</span></span><br><span class="line">        <span class="comment"># print(f'&#123;self.x&#125;正在吃&#123;cls.food&#125;...')  # 错误！不能在类方法中使用初始化方法的属性（默认参数也不同）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 类方法可以不用调用类，直接调用方法即可</span></span><br><span class="line">Person.eat(<span class="string">'小王'</span>, <span class="string">'汉堡'</span>)</span><br><span class="line"></span><br><span class="line">b = Person  <span class="comment"># 无需调用类</span></span><br><span class="line">b.eat(<span class="string">'李四'</span>, <span class="string">'香蕉'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以先调用类，再调用类方法</span></span><br><span class="line">a = Person(<span class="string">'小明'</span>, <span class="number">66</span>)  <span class="comment"># 因为初始化方法有两个形参，所以调用类时，也必须加实参</span></span><br><span class="line">a.eat(<span class="string">'张三'</span>, <span class="string">'苹果'</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h2><ol><li><p>特点：</p><ul><li>定义静态方法，必须使用装饰器<code>@staticmethod</code></li><li>静态方法中，无需添加默认参数<code>self, cls</code>，但是在使用类中的自由属性时，必须以<code>类名.属性</code>格式写入</li><li>只能访问类中的自由属性，不能访问对象的属性</li><li>加载时机和类方法相同</li></ul></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">'张三'</span></span><br><span class="line">    age = <span class="number">66</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">        Person.age = <span class="number">88</span>  <span class="comment"># 类方法不仅可以使用类中的自由属性，还可以修改</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;Person.name&#125;</span>今年<span class="subst">&#123;Person.age&#125;</span>岁！'</span>)  <span class="comment"># 使用类中的自由属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态方法可以不用调用类，直接调用方法即可</span></span><br><span class="line">Person.test()</span><br><span class="line"></span><br><span class="line">a = Person</span><br><span class="line">a.test()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以先调用类，再调用类方法</span></span><br><span class="line">b = Person()</span><br><span class="line">b.test()</span><br></pre></td></tr></table></figure></li></ol><h2 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h2><ol><li><p>常用的魔术方法</p><ul><li><code>__init__():</code> 初始化魔术方法，触发时机：初始化对象时触发（不是实例化触发，但是和实例化在一个操作中）</li><li><code>__str__():</code> 返回格式化字符串魔术方法，触发时机：打印对象名时触发</li><li><code>__new__():</code> 实例化的魔术方法，触发时机： 在实例化对时触发</li><li><code>__call__():</code> 对象调用方法，触发时机：将对象当成函数使用的时候，会默认调用此函数中的内容</li><li><code>__del__():</code> delete的缩写，析构魔术方法，触发时机：当对象没有用（引用次数为0时）的时候被触发</li></ul></li><li><p>魔术方法的特点：自动调用，无需手动调用</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">     self.name = <span class="string">'张三'</span></span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 格式化输出</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁！'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分配空间</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">'已执行__new__()'</span>)</span><br><span class="line">        position = object.__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> position</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将对象当作函数调用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, age)</span>:</span></span><br><span class="line">        self.name = <span class="string">'李四'</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span>今年<span class="subst">&#123;age&#125;</span>岁！'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'缓存清理完毕！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接输出对象</span></span><br><span class="line">print(Person())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'----------------------------'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将对象当作函数使用</span></span><br><span class="line">a = Person()</span><br><span class="line">a(<span class="number">66</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'----------------------------'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将对象当作函数使用</span></span><br><span class="line">Person()(<span class="number">55</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'----------------------------'</span>)</span><br><span class="line"></span><br><span class="line">Person()(<span class="number">99</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'----------------------------'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment"># sys.getrefcount()函数的作用：查看引用次数，在使用此函数时，自身会调用一次，所以会多一次引用次数</span></span><br><span class="line">print(sys.getrefcount(a))</span><br></pre></td></tr></table></figure></li></ol><h1 id="私有化属性"><a href="#私有化属性" class="headerlink" title="私有化属性"></a>私有化属性</h1><ol><li><p>作用：私有化属性后，外界不可以随意访问</p></li><li><p>特点：在Python中，如果一个属性的前面出现两个下划线__,就表示这个属性只能在当前类的方法中被直接访问，不能通过对象直接访问，这个变量就被称为私有变量</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__name = <span class="string">'张三'</span></span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 格式化输出默认属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.__name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁！'</span>  <span class="comment"># 私有属性，内部可访问</span></span><br><span class="line"></span><br><span class="line">a = Person()</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">a.name = <span class="string">'李四'</span>  <span class="comment"># 无法访问和修改</span></span><br><span class="line">a.__name = <span class="string">'李四'</span>  <span class="comment"># 无法访问和修改</span></span><br><span class="line"></span><br><span class="line">a.age = <span class="number">66</span>  <span class="comment"># 没有私有化的属性，外界不仅可以访问，还可以修改</span></span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ol><h1 id="私有化属性的修改"><a href="#私有化属性的修改" class="headerlink" title="私有化属性的修改"></a>私有化属性的修改</h1><ol><li><p>作用：</p><ul><li>利用装饰器，将私有化属性先返回出来，再重定义（先get再set）</li><li>利用普通函数，先重定义私有化属性，再返回重定义后的属性（先set再get）</li></ul></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.__name = <span class="string">'张三'</span></span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line">        self.__sex = <span class="string">'男'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 格式化输出默认属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.__name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁，是个<span class="subst">&#123;self.__sex&#125;</span>孩纸！'</span>  <span class="comment"># 私有属性，内部可访问</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># get私有化属性</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nickname</span><span class="params">(self, )</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set私有化属性</span></span><br><span class="line"><span class="meta">    @nickname.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nickname</span><span class="params">(self, arg)</span>:</span></span><br><span class="line">        self.__name = arg</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 先set私有化属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_sex</span><span class="params">(self, arg)</span>:</span></span><br><span class="line">        self.__sex = arg</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再get私有化属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_sex</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.__sex</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出类中的默认属性值</span></span><br><span class="line">a = Person()</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类中的初始化属性（未私有化）</span></span><br><span class="line">a.age = <span class="number">66</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类中的初始化中的私有化属性（装饰器重定义）</span></span><br><span class="line">a.nickname = <span class="string">'李四'</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改类中的初始化中的私有化属性（普通函数重定义）</span></span><br><span class="line">a.set_sex(<span class="string">'女'</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ol><h1 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h1><ol><li><p>作用：子类继承父类，让子类拥有父类的属性，简化代码</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.name = <span class="string">'张三'</span></span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line">        self.sex = <span class="string">'男'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁了，是个<span class="subst">&#123;self.sex&#125;</span>孩纸！'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建子类（需继承父类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = Person()</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">b = Doctor()</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">c = Student()</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></li><li><p>子类中重定义<code>__init__()</code></p><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line">        self.sex = <span class="string">'男'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁了，是个<span class="subst">&#123;self.sex&#125;</span>孩纸！'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建子类（需继承父类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span><span class="params">(Person)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子类中重定义初始化属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, salary)</span>:</span></span><br><span class="line">        super().__init__(name)</span><br><span class="line">        self.salary = salary</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 子类中重定义字符串输出（覆盖父类中的属性）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span>的工资为<span class="subst">&#123;self.salary&#125;</span>'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></span><br><span class="line">    <span class="comment"># 子类中重定义初始化属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, classroom)</span>:</span></span><br><span class="line">        Person.__init__(self, name)</span><br><span class="line">        self.classroom = classroom</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span>在<span class="subst">&#123;self.classroom&#125;</span>班'</span>)</span><br><span class="line"></span><br><span class="line">a = Person(<span class="string">'张三'</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------------------'</span>)</span><br><span class="line"></span><br><span class="line">b = Doctor(<span class="string">'李四'</span>, <span class="number">5000</span>)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------------------'</span>)</span><br><span class="line"></span><br><span class="line">c = Student(<span class="string">'王五'</span>, <span class="number">6</span>)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>子类中的<code>supper()</code>用法</p><ul><li><p>作用：可以通过<code>super()</code>在子类中的内部调用父类中的普通方法</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = <span class="number">88</span></span><br><span class="line">        self.sex = <span class="string">'男'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'<span class="subst">&#123;self.name&#125;</span>今年<span class="subst">&#123;self.age&#125;</span>岁了，是个<span class="subst">&#123;self.sex&#125;</span>孩纸！'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span>正在吃饭。。。'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建子类（需继承父类）</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Doctor</span><span class="params">(Person)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">food</span><span class="params">(self, food)</span>:</span></span><br><span class="line">        super().eat()  <span class="comment"># 子类在内部调用父类的普通方法</span></span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;self.name&#125;</span>今天吃的是<span class="subst">&#123;food&#125;</span>！'</span>)</span><br><span class="line"></span><br><span class="line">a = Doctor(<span class="string">'张三'</span>)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment"># 子类也可以在外部调用父类的普通方法</span></span><br><span class="line">a.eat()</span><br><span class="line"><span class="comment"># 调用子类中的普通方法</span></span><br><span class="line">a.food(<span class="string">'蛋炒饭'</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="父类与子类中的私有化属性"><a href="#父类与子类中的私有化属性" class="headerlink" title="父类与子类中的私有化属性"></a>父类与子类中的私有化属性</h1><ol><li><p>特点：父类和子类中的私有化属性，只能给自己用，无法通过继承使用</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.a = <span class="number">66</span></span><br><span class="line">        self.__b = <span class="number">88</span>  <span class="comment"># 父类中的私有化属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f'结果：<span class="subst">&#123;self.a&#125;</span>\t<span class="subst">&#123;self.__b&#125;</span>'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B1</span><span class="params">(A1)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span>  <span class="comment"># 自定义初始化属性</span></span><br><span class="line">        super().__init__()  <span class="comment"># 继承父类中的初始化属性</span></span><br><span class="line">        self.a = <span class="number">6</span>  <span class="comment"># 修改父类中的普通属性</span></span><br><span class="line">        self.__b = <span class="number">8</span>  <span class="comment"># 子类中的私有化属性</span></span><br><span class="line"></span><br><span class="line">x = B1()  <span class="comment"># 调用子类</span></span><br><span class="line">print(x)  <span class="comment"># 输出子类</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="多继承与顺序搜索"><a href="#多继承与顺序搜索" class="headerlink" title="多继承与顺序搜索"></a>多继承与顺序搜索</h1><ol><li><p>作用：子类可以有多个父类，根据一定的顺序，确定要执行的是那个父类</p></li><li><p>特点：</p><ul><li><code>python3</code>中，搜索顺序为：广度优先</li><li><code>python2</code>中，搜索顺序为：从左到右，深度优先</li></ul></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义第一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">P1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'p1---&gt;foo'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'p1---&gt;bar'</span>)</span><br><span class="line"><span class="comment"># 定义第二个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">P2</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'p2---&gt;foo'</span>)</span><br><span class="line"><span class="comment"># 继承两个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1</span><span class="params">(P1, P2)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="comment"># 继承两个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C2</span><span class="params">(P1, P2)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'c2---&gt;bar'</span>)</span><br><span class="line"><span class="comment"># 继承两个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span><span class="params">(C1, C2)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   搜索顺序：D--&gt;C1--&gt;C2--&gt;P1--&gt;P2      (广度优先)</span></span><br><span class="line"><span class="comment">#   注意：在python2中，搜索顺序：D--&gt;C1--&gt;P1--&gt;P2--&gt;C2（从左到右，深度优先）</span></span><br><span class="line">d = D()</span><br><span class="line">d.bar()</span><br><span class="line">d.foo()</span><br></pre></td></tr></table></figure></li><li><p>查看搜索顺序的内建函数</p><ul><li><p>示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"></span><br><span class="line"><span class="comment">#   方法一</span></span><br><span class="line"><span class="comment">#   查看搜索顺序的函数：inspect.getmro()</span></span><br><span class="line">print(inspect.getmro(D))</span><br><span class="line"><span class="comment">#   方法二</span></span><br><span class="line">print(D.__mro__)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="类的多态"><a href="#类的多态" class="headerlink" title="类的多态"></a>类的多态</h1><ul><li>作用：一个对象可以有多种形态，例如，<strong>猫</strong>既是<strong>动物类</strong>又是<strong>宠物类</strong></li></ul><h1 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h1><ul><li><p>作用：使用同一个内存空间，优化内存空间，节省内存空间</p></li><li><p>注意事项：并不是所有的类都要用单例，只有在特殊情况下才用单例</p></li><li><p>使用时机：多个对象需要用同一个地址时，要用单例</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    <span class="comment"># 私有化属性，单例的地址就存在于__abc中</span></span><br><span class="line">    __abc = <span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cls.__abc <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            cls.__abc = object.__new__(cls)</span><br><span class="line">        <span class="keyword">return</span> cls.__abc</span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     return cls.__abc</span></span><br><span class="line"></span><br><span class="line">t1 = Test()</span><br><span class="line">t2 = Test()</span><br><span class="line"></span><br><span class="line">print(t1)</span><br><span class="line">print(t2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   查看类中的所有属性</span></span><br><span class="line">print(t1.__dir__())</span><br><span class="line">print(dir(Test))</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3异常处理、推导式、文件操作的用法(十三)</title>
      <link href="/posts/a53dfe16/"/>
      <url>/posts/a53dfe16/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li><p>什么是异常：异常是一个<strong>事件</strong>，该事件会在程序运行中发生，会影响程序的正常执行</p></li><li><p>作用：让程序正常运行（在<code>python</code>脚本运行时，捕获它，并处理）</p></li><li><p>基本语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># 写入可能存在异常的代码，尽可能不要使用return</span></span><br><span class="line"><span class="keyword">except</span> 异常类型<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># 存在异常类型1后，要执行的代码，而且try中的代码会终止</span></span><br><span class="line"><span class="keyword">except</span> 异常类型<span class="number">2</span>:</span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># 存在异常类型2后，要执行的代码，而且try中的代码会终止</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span>  <span class="comment"># 当try中的代码不存在异常时，先执行完try中的代码，并且try中不能存在return，再执行else中的代码</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">pass</span>  </span><br><span class="line"><span class="comment"># 不管try中的代码有没有异常，都会执行finally中的代码，并覆盖之前相同的值，而且finally必须在程序最后面写，否则报错</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    a = int(input(<span class="string">'请输入被除数：'</span>))</span><br><span class="line">    b = int(input(<span class="string">'请输入除数：'</span>))</span><br><span class="line">    result = a / b</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    print(<span class="string">'除数不能为0'</span>)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    print(<span class="string">'只能输入数字。'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'代码正常！'</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'代码运行完毕！'</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="多个异常处理方式"><a href="#多个异常处理方式" class="headerlink" title="多个异常处理方式"></a>多个异常处理方式</h2><ul><li><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> error:  <span class="comment"># error可重命名</span></span><br><span class="line">    print(error)</span><br></pre></td></tr></table></figure></li></ul><h2 id="异常中return的用法："><a href="#异常中return的用法：" class="headerlink" title="异常中return的用法："></a>异常中return的用法：</h2><ul><li><p>注意事项：</p><ol><li>若在<code>try</code>中出现<code>return</code>，会终止<code>try</code>中<code>return</code>以下代码的执行</li><li>若存在<code>else</code>分支，在<code>try</code>中就不能使用<code>return</code>了，因为<code>else</code>分支会报错</li><li>若在<code>try</code>中使用<code>return</code>，必须用函数包装起来，否则程序错误</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a = int(input(<span class="string">'请输入被除数：'</span>))</span><br><span class="line">        b = int(input(<span class="string">'请输入除数：'</span>))</span><br><span class="line">        result = a / b</span><br><span class="line">        print(result)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> error:</span><br><span class="line">        print(error)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">finally</span>:  <span class="comment"># 使用了finally，会覆盖return的返回值</span></span><br><span class="line">        print(<span class="string">'代码运行完毕！'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">print(test())  <span class="comment"># 函数中存在return，调用并输出函数</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="异常中raise的用法"><a href="#异常中raise的用法" class="headerlink" title="异常中raise的用法"></a>异常中raise的用法</h2><ul><li><p>作用：自定义异常</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自定义一个存在异常的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">()</span>:</span></span><br><span class="line">    username = input(<span class="string">'请输入用户名：'</span>)</span><br><span class="line">    <span class="keyword">if</span> len(username) &lt; <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'用户名长度必须在6位以上！'</span>)  <span class="comment"># raise抛出异常</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(username)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理异常</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    register()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    print(<span class="string">'注册失败！'</span>)</span><br><span class="line">    print(err)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'注册成功！'</span>)</span><br></pre></td></tr></table></figure></li></ul><h1 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h1><h2 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h2><ol><li><p>语法格式1</p><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str01 = <span class="string">'abcdefg'</span></span><br><span class="line">result = [value <span class="keyword">for</span> value <span class="keyword">in</span> str01]  <span class="comment"># 没有添加限制条件，就遍历所有元素</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>语法格式2：<code>result01 = [结果 for value in iterable if 条件]</code></p><ul><li><p>注意事项：当结果只有一个时，判断条件在后面（先遍历后判断）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出名字长度小于等于3的名字</span></span><br><span class="line">names = [<span class="string">'tom'</span>, <span class="string">'jack'</span>, <span class="string">'bob'</span>, <span class="string">'lucy'</span>]</span><br><span class="line">result01 = [value <span class="keyword">for</span> value <span class="keyword">in</span> names <span class="keyword">if</span> len(value) &lt;= <span class="number">3</span>]</span><br><span class="line">print(result01)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>语法格式3：<code>result02 = [结果1 if 条件 else 结果2 for value in iterable]</code></p><ul><li><p>注意事项：当结果有两个时，判断条件在前面（先判断后遍历）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断数字，如果为偶数就输出该值，否则就输出该值的平方</span></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">result02 = [value <span class="keyword">if</span> value % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> value ** <span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> numbers]</span><br><span class="line">print(result02)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="集合推导式"><a href="#集合推导式" class="headerlink" title="集合推导式"></a>集合推导式</h2><ul><li><p>注意事项：集合推导式遵循集合的特性，会去除重复项并且无序输出，其他和列表推导式相同</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历所有元素</span></span><br><span class="line">str01 = <span class="string">'11224567'</span></span><br><span class="line">result01 = &#123;value <span class="keyword">for</span> value <span class="keyword">in</span> str01&#125;</span><br><span class="line">print(result01)</span><br><span class="line"><span class="comment"># 添加判断条件，只有一种结果：if...</span></span><br><span class="line">result02 = &#123;value <span class="keyword">for</span> value <span class="keyword">in</span> str01 <span class="keyword">if</span> value &gt;= <span class="string">'3'</span>&#125;  <span class="comment"># value的值为str类型</span></span><br><span class="line">print(result02)</span><br><span class="line"><span class="comment"># 添加判断条件，有两种结果：if...else...</span></span><br><span class="line">result03 = &#123;value <span class="keyword">if</span> int(value) % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> int(value) ** <span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> str01&#125;</span><br><span class="line">print(result03)</span><br></pre></td></tr></table></figure></li></ul><h2 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h2><ul><li><p>注意事项：遵循字典的所有特性</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历所有元素（键值对）</span></span><br><span class="line">dict01 = &#123;<span class="string">'name'</span>: <span class="string">'张三'</span>, <span class="string">'age'</span>: <span class="number">88</span>, <span class="string">'sex'</span>: <span class="string">'男'</span>&#125;</span><br><span class="line">result01 = &#123;key: value <span class="keyword">for</span> key, value <span class="keyword">in</span> dict01.items()&#125;</span><br><span class="line">result02 = &#123;key <span class="keyword">for</span> key <span class="keyword">in</span> dict01.keys()&#125;</span><br><span class="line">result03 = &#123;value <span class="keyword">for</span> value <span class="keyword">in</span> dict01.values()&#125;</span><br><span class="line">print(result01)</span><br><span class="line">print(result02)</span><br><span class="line">print(result03)</span><br><span class="line"><span class="comment"># 添加判断条件，只有一种结果：if...</span></span><br><span class="line">dict02 = &#123;<span class="string">'张三'</span>: <span class="number">35</span>, <span class="string">'李四'</span>: <span class="number">59</span>, <span class="string">'王五'</span>: <span class="number">99</span>, <span class="string">'赵六'</span>: <span class="number">66</span>&#125;</span><br><span class="line">result04 = &#123;key <span class="keyword">for</span> key, value <span class="keyword">in</span> dict02.items() <span class="keyword">if</span> value &gt;= <span class="number">60</span>&#125;</span><br><span class="line">print(result04)</span><br><span class="line"><span class="comment"># 添加判断条件，有两种结果：if...else...</span></span><br><span class="line">result05 = &#123;key: value +<span class="number">1</span> <span class="keyword">if</span> value &gt;= <span class="number">60</span> <span class="keyword">else</span> value <span class="keyword">for</span> key, value <span class="keyword">in</span> dict02.items()&#125;</span><br><span class="line">print(result05)</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><ul><li>系统内置函数：<code>open()</code></li></ul><h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><ol><li><p>语法格式：<code>open(&#39;path\file_name&#39;, mode=&#39;rb&#39;)</code></p><ul><li><code>path\file_name</code>：要读取的文件（绝对或相对路径）</li><li><code>mode=&#39;rb&#39;</code>：执行的动作：读取数据（<code>mode</code>可以省略，直接写参数）；<code>b</code>：代表以二进制方式读取（读取文本文件可直接用<code>&#39;r&#39;</code>）</li></ul></li><li><p>文件读取内建函数：</p><ul><li><code>read()</code>：读取文件中的所有数据</li><li><code>readable()</code>：判断文件是否可以读取</li><li><code>readline()</code>：读取文件中的第一行数据；前提条件：之前没有读取记录</li><li><code>readlines()</code>：读取文件中的所有数据，且每隔一行自动换行，并将读取的数据存放在list中；前提条件：之前没有读取记录</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取指定文件（绝对路径也阔以）</span></span><br><span class="line">stream = open(<span class="string">'./test/test.txt'</span>, <span class="string">'r'</span>)  <span class="comment"># mode可以省略不写，读取文本文件，可不用二进制方式，b也可以省略</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否可以读取</span></span><br><span class="line">result = stream.readable()  </span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件中的所有数据（保留数据格式）</span></span><br><span class="line"><span class="comment"># result = stream.read()       </span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件中的一行数据，每执行一次取一行数据，并且每隔一行数据都空一行（前提条件：之前没有读取记录）</span></span><br><span class="line"><span class="comment"># result = stream.readline()</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"><span class="comment"># result = stream.readline()  # 第二行数据</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"><span class="comment"># result = stream.readline()  # 第三行数据</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件中的所有数据，并将读取的数据存放在list中，每一行数据表示一个元素，并且每行后面添加换行符，最后一行不添加（前提条件：之前没有读取记录）</span></span><br><span class="line">result = stream.readlines()</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭读取通道</span></span><br><span class="line">print(stream.close())</span><br></pre></td></tr></table></figure></li></ol><h2 id="文件写入和追加"><a href="#文件写入和追加" class="headerlink" title="文件写入和追加"></a>文件写入和追加</h2><ol><li><p>语法格式：<code>open(&#39;path\file_name&#39;, mode=&#39;wb&#39;)</code></p></li><li><p>注意事项：</p><ul><li><code>&#39;wb&#39;</code>：文件写入，首次执行，就会刷新原文件的数据（覆盖数据）</li><li><code>&#39;ab&#39;</code>：文件追加，每次执行，不刷新原来的内容，会在原始文件末尾一直追加；执行一次就多一组数据</li></ul></li><li><p>文件写入和追加内建函数：</p><ul><li><code>write(str)</code>：需要传入一个字符串做为参数，否则会报错</li><li><code>writable()</code>：判断指定文件是否可以写入数据（注意函数的拼写）</li><li><code>writelines(iterable)</code>：既可以传入字符串又可以传入一个字符序列，并将该字符序列写入文件</li><li><code>close()</code>：关闭写入通道，释放资源，但是必须在所有程序执行完后添加，否则，后面的程序报错，无法执行</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取指定文件，并指定动作：先清除原始文件中的内容，再写入数据</span></span><br><span class="line">stream = open(<span class="string">'./test/test.py'</span>, <span class="string">'w'</span>)</span><br><span class="line">date01 = [<span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>]</span><br><span class="line"><span class="comment"># 判断文件是否可以写入，并返回bool值</span></span><br><span class="line">print(stream.writable())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始写入文件，并返回写入的字符数量</span></span><br><span class="line">print(stream.write(<span class="string">'abcd\n'</span>))</span><br><span class="line"><span class="comment"># print(stream.write(date))  # 报错</span></span><br><span class="line">print(stream.writelines(date01))  <span class="comment"># 正确</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭写入通道</span></span><br><span class="line">print(stream.close())</span><br><span class="line"></span><br><span class="line">print(<span class="string">'-------------------------------------------------------'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取指定文件，并指定动作：直接再原始文件后面追加数据</span></span><br><span class="line">stream = open(<span class="string">'./test/test.py'</span>, <span class="string">'a'</span>)</span><br><span class="line">date02 = [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'abc'</span>]</span><br><span class="line"><span class="comment"># 判断文件是否可以写入，并返回bool值</span></span><br><span class="line">print(stream.writable())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始写入文件，并返回写入的字符数量</span></span><br><span class="line">print(stream.write(<span class="string">'\nqqqq\n'</span>))</span><br><span class="line"><span class="comment"># print(stream.write(date))  # 报错</span></span><br><span class="line">print(stream.writelines(date02))  <span class="comment"># 正确</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="应用：文件复制"><a href="#应用：文件复制" class="headerlink" title="应用：文件复制"></a>应用：文件复制</h2><ul><li><p>先读取指定文件，再将读取到的内容，写入指定文件</p></li><li><p>注意事项：<code>with...as...</code>用法</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">r'c:\test\aaa.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> r_stream:  <span class="comment"># 获取图片地址，指定动作：二进制读取</span></span><br><span class="line">    container = r_stream.read()  <span class="comment"># 读取文件中的所有数据并存放于 变量 中</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'./test/bbb.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> w_stream:  <span class="comment"># 指定文件写入的路径</span></span><br><span class="line">        w_stream.write(container)  <span class="comment"># 开始执行文件的写入</span></span><br><span class="line">        print(<span class="string">'复制完毕！'</span>)  <span class="comment"># 全部数据写入完成后，输出打印值</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3闭包的用法(十一)</title>
      <link href="/posts/3bf538dd/"/>
      <url>/posts/3bf538dd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="创建闭包"><a href="#创建闭包" class="headerlink" title="创建闭包"></a>创建闭包</h1><ol><li><p>条件：</p><ul><li>函数中必须有一个内部函数，并且内部函数必须引用外部函数的变量</li><li>外部函数必须要有一个返回值，并且返回值为：内部函数名</li></ul></li><li><p>作用：保存函数的状态信息，使函数的局部变量信息依然可以保存下来</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    c = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func8</span><span class="params">()</span>:</span></span><br><span class="line">        result = (a + b) * c</span><br><span class="line">        print(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func8  <span class="comment"># 返回值为：内部函数名；返回内嵌函数的地址，从而形成闭包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   接收返回值</span></span><br><span class="line">x = func(<span class="number">3</span>, <span class="number">5</span>)  <span class="comment"># 函数内有返回值，就要用变量来接收</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用内部函数</span></span><br><span class="line">x()  <span class="comment"># 此时，x=func8</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="闭包之保存参数的状态"><a href="#闭包之保存参数的状态" class="headerlink" title="闭包之保存参数的状态"></a>闭包之保存参数的状态</h1><ol><li><p>说明：闭包后，每次传参都会新建一个地址（id），不会覆盖之前的地址</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    c = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func5</span><span class="params">(n)</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> c</span><br><span class="line">        c += <span class="number">100</span></span><br><span class="line">        result = a + b + c + n</span><br><span class="line">        print(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func5</span><br><span class="line"></span><br><span class="line"><span class="comment">#   接收返回值(地址)</span></span><br><span class="line">x = func(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">y = func(<span class="number">8</span>, <span class="number">8</span>)</span><br><span class="line">z = func(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   闭包后，每次传参都会新建一个地址（id），不会覆盖之前的地址</span></span><br><span class="line">print(id(x), x)</span><br><span class="line">print(id(y), y)</span><br><span class="line">print(id(z), z)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用内部函数</span></span><br><span class="line">x(<span class="number">100</span>)  <span class="comment"># 因为内部函数存在一个参数，所以必须加参数</span></span><br><span class="line">y(<span class="number">100</span>)</span><br><span class="line">z(<span class="number">100</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="闭包之计数器"><a href="#闭包之计数器" class="headerlink" title="闭包之计数器"></a>闭包之计数器</h1><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span>  <span class="comment"># def &lt;=&gt; defined</span></span><br><span class="line">    list8 = [<span class="number">0</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func8</span><span class="params">()</span>:</span></span><br><span class="line">        list8[<span class="number">0</span>] = list8[<span class="number">0</span>] + <span class="number">1</span></span><br><span class="line">        print(<span class="string">'第&#123;&#125;次！'</span>.format(list8[<span class="number">0</span>]), list8)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func8  <span class="comment"># 闭包返回值：内部函数名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   接收函数的返回值</span></span><br><span class="line">x = func()</span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用内部函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        x()</span><br></pre></td></tr></table></figure></li></ul><h1 id="闭包之同级访问"><a href="#闭包之同级访问" class="headerlink" title="闭包之同级访问"></a>闭包之同级访问</h1><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></span><br><span class="line">        b = <span class="number">99</span></span><br><span class="line">        s = a + b</span><br><span class="line">        print(s)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(n)</span>:</span></span><br><span class="line">        func1()  <span class="comment"># 同级访问（调用）</span></span><br><span class="line">        print(<span class="string">'使用成功！'</span>, n)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'成功返回！'</span>, n  <span class="comment"># 内部函数自己的返回值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> func2  <span class="comment"># 闭包返回值：内部函数名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   接收闭包返回值</span></span><br><span class="line">x = func()  <span class="comment"># x &lt;=&gt; func2</span></span><br><span class="line">x(<span class="number">1</span>)  <span class="comment"># x &lt;=&gt; func2()</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------------'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   输出内部函数自己的返回值</span></span><br><span class="line">y = x(<span class="number">2</span>)</span><br><span class="line">print(y, id(y))</span><br><span class="line"></span><br><span class="line">z = x(<span class="number">3</span>)</span><br><span class="line">print(z, id(z))</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3迭代器、生成器、装饰器的用法(十二)</title>
      <link href="/posts/1ebe0c3c/"/>
      <url>/posts/1ebe0c3c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><ol><li><p>作用：将一个可迭代的或者不可迭代的对象进行迭代</p></li><li><p>迭代器的创建与使用</p><ul><li><p>迭代器内建函数：<code>iter.__next__()</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个可迭代的对象：list</span></span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>]  <span class="comment"># 共4个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个迭代器，名称为：iter01</span></span><br><span class="line">iter01 = iter(list01)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 迭代器内建函数：__next__()</span></span><br><span class="line">print(iter01.__next__())</span><br><span class="line">print(iter01.__next__())</span><br><span class="line">print(iter01.__next__())</span><br><span class="line"><span class="comment"># print(iter01.__next__())</span></span><br><span class="line"><span class="comment"># print(iter01.__next__())  # 迭代到第5个元素，会报错，因为没元素了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决办法：异常处理</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(iter01.__next__())</span><br><span class="line">    print(iter01.__next__())  <span class="comment"># 取第5个元素时，不存在，输出异常解决</span></span><br><span class="line"><span class="keyword">except</span> StopIteration:</span><br><span class="line">    print(<span class="string">'没有更多元素了！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>迭代器与系统内置函数：<code>next()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>]  <span class="comment"># 共4个元素</span></span><br><span class="line">iter01 = iter(list01)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 系统内置函数：next()</span></span><br><span class="line">print(next(iter01))</span><br><span class="line">print(next(iter01))</span><br><span class="line">print(next(iter01))</span><br><span class="line"><span class="comment"># print(next(iter01))</span></span><br><span class="line"><span class="comment"># print(next(iter01))  # 迭代到第5个元素，会报错，因为没元素了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决办法：异常处理</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(next(iter01))</span><br><span class="line">    print(next(iter01))  <span class="comment"># 取第5个元素时，不存在，输出异常解决</span></span><br><span class="line"><span class="keyword">except</span> StopIteration:</span><br><span class="line">    print(<span class="string">'没有更多元素了！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>迭代器与for循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个可迭代的对象：list</span></span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个迭代器，名称为：iter01</span></span><br><span class="line">iter01 = iter(list01)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环迭代器：不会有异常输出</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> iter01:</span><br><span class="line">    print(value, end=<span class="string">'\t'</span>)</span><br><span class="line">print()  <span class="comment"># 用于换行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环可迭代对象</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> list01:</span><br><span class="line">    print(value, end=<span class="string">'\t'</span>)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><ol><li><p>作用：</p><ul><li>一个返回迭代器的函数，只能用于迭代操作</li><li>每调用一次生成器函数，就返回一个迭代器对象</li></ul></li><li><p>用推导式创建生成器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建生成器：g</span></span><br><span class="line">g = (x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>))</span><br><span class="line"><span class="comment"># 内建函数使用生成器：__next__()</span></span><br><span class="line">print(g.__next__())  <span class="comment"># 超出范围用异常解决</span></span><br><span class="line">print(g.__next__())</span><br><span class="line"><span class="comment"># 系统内置函数使用生成器</span></span><br><span class="line">print(next(g))  </span><br><span class="line">print(next(g))</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># 超出范围用异常解决</span></span><br><span class="line">        print(next(g))</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        print(<span class="string">'没有更多元素了！'</span>)</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 跳出死循环</span></span><br><span class="line"><span class="comment"># for循环使用生成器</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> g:</span><br><span class="line">    print(value)</span><br></pre></td></tr></table></figure></li><li><p>创建生成器函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span>  <span class="comment"># 创建生成器函数</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:  <span class="comment"># 此处可添加限定条件</span></span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> n  <span class="comment"># 只要在函数体内存在yield，说明此时的函数不代表函数，而是生成器的一种定义方式</span></span><br><span class="line"></span><br><span class="line">x = func()  <span class="comment"># x为生成器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   使用生成器，用next()或者__next__()</span></span><br><span class="line">print(x.__next__())</span><br><span class="line">print(x.__next__())</span><br><span class="line">print(next(x))</span><br><span class="line">print(next(x))</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环输出生成器</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> x:</span><br><span class="line">    <span class="keyword">if</span> value &lt;= <span class="number">10</span>:  <span class="comment"># 添加限制条件，否则无线循环</span></span><br><span class="line">        print(value, end=<span class="string">'\t'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 不满足条件，直接跳出循环；否则循环一直处于暂停状态</span></span><br><span class="line">print()  <span class="comment"># 换行</span></span><br></pre></td></tr></table></figure></li><li><p>用生成器定义菲波那切数列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   定义菲波那切数列    0,1,1,2,3,5,8,13    规律：后一个数是前两个数的和</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(length)</span>:</span></span><br><span class="line">    print(<span class="number">0</span>)</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &lt; length:</span><br><span class="line">        <span class="keyword">yield</span> b  <span class="comment"># 相当于return b</span></span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'没有更多元素了！'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y = func(<span class="number">4</span>)</span><br><span class="line"><span class="comment">#   length定义是多少，就只能调用多少次，否则报错</span></span><br><span class="line">print(next(y))</span><br><span class="line">print(next(y))</span><br><span class="line">print(next(y))</span><br><span class="line">print(next(y))</span><br><span class="line"><span class="comment"># print(next(y))</span></span><br></pre></td></tr></table></figure></li><li><p>生成器函数send()的用法</p><ul><li><p>作用：当执行到<code>yield</code>时，利用<code>send()</code>给<code>yield</code>赋值，进行其他操作</p></li><li><p>注意事项：</p><ol><li>要想使用生成器内建函数：<code>send()</code>，必须先将<code>yield</code>存放在变量中</li><li>在使用send()之前，必须要先用<code>__next__()</code>或<code>next()</code>或<code>send(None)</code>调用一次生成器（因为<code>yield</code>是将函数中的代码拦截到此处，也就是暂停，若先不执行函数，怎么会有暂停操作；暂停后，再利用<code>send()</code>函数赋值，进行其他操作）</li><li>当<code>send(None)</code>参数为<code>None</code>时，会默认开启生成器（即首次调用生成器）</li></ol></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 斐波那契数列</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(max)</span>:</span>  <span class="comment"># 创建生成器函数</span></span><br><span class="line">    a, b, num = <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> num &lt;= max:</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line">        <span class="comment"># 当yield返回多个值时，默认用tuple接收</span></span><br><span class="line">        result = <span class="keyword">yield</span> a, b  <span class="comment"># yield必须有变量接收（关键一步）</span></span><br><span class="line">        print(<span class="string">'插入数据：'</span>, result)</span><br><span class="line"></span><br><span class="line">x = test(<span class="number">5</span>)  <span class="comment"># 创建生成器，并限制生成器调用次数</span></span><br><span class="line">print(x.__next__())  <span class="comment"># 第一次使用生成器</span></span><br><span class="line"><span class="comment"># print(x.__next__())  # 若要用__next__()继续调用，也阔以，但是result为：None</span></span><br><span class="line"><span class="comment"># print(next(x))  # 继续用next()调用，result的值依然为：None</span></span><br><span class="line"><span class="comment"># print(next(x))</span></span><br><span class="line">print(x.send(<span class="number">99</span>))  <span class="comment"># 当使用send()调用时，必须要有一个参数，否则报错</span></span><br><span class="line">print(x.send(<span class="number">66</span>))</span><br><span class="line">print(next(x))</span><br><span class="line">print(x.send(<span class="number">88</span>))</span><br><span class="line"><span class="comment"># print(x.send(22))  # max的最大值为：5，最多只能使用5次生成器</span></span><br></pre></td></tr></table></figure></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(max)</span>:</span></span><br><span class="line">    num = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> num &lt;= max:</span><br><span class="line">        result = <span class="keyword">yield</span> <span class="string">f'第<span class="subst">&#123;num&#125;</span>次使用生成器！'</span></span><br><span class="line">        print(<span class="string">f'遍历次数：<span class="subst">&#123;result&#125;</span>'</span>)</span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>, result + <span class="number">1</span>):</span><br><span class="line">            print(<span class="string">f'---&gt;<span class="subst">&#123;value&#125;</span>'</span>)</span><br><span class="line">        num += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">y = func(<span class="number">5</span>)  <span class="comment"># 创建生成器，并限制生成器调用次数</span></span><br><span class="line">print(y.send(<span class="literal">None</span>))  <span class="comment"># 首次使用生成器</span></span><br><span class="line">print(y.send(<span class="number">2</span>))</span><br><span class="line">print(y.send(<span class="number">5</span>))</span><br><span class="line">print(y.send(<span class="number">3</span>))</span><br><span class="line">print(y.send(<span class="number">10</span>))</span><br><span class="line"><span class="comment"># print(y.send(5))  # 超过限制</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>生成器的应用</p><ul><li><p>同时执行多任务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建第一个任务</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># print('正在下载第&#123;&#125;首歌曲...'.format(i))</span></span><br><span class="line">        <span class="comment"># yield None</span></span><br><span class="line">        <span class="keyword">yield</span> <span class="string">f'正在下载第<span class="subst">&#123;i&#125;</span>首歌曲...'</span></span><br><span class="line"><span class="comment"># 创建第二个任务</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        print(<span class="string">'正在看第&#123;&#125;集动漫...'</span>.format(i))</span><br><span class="line">        <span class="keyword">yield</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">x = func1(<span class="number">5</span>)  <span class="comment"># 两个参数必须相同</span></span><br><span class="line">y = func2(<span class="number">5</span>)  <span class="comment"># 参数不同时，以最少的为主</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(next(x))  <span class="comment"># 两个中，有其中一个不满足条件，就会直接终止，另一个生成器也会直接终止</span></span><br><span class="line">        next(y)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'歌曲下载完毕！'</span>)</span><br><span class="line">        print(<span class="string">'动漫完结！'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h1><ol><li><p>作用：修改其他函数的功能的函数，让代码更加的简洁</p></li><li><p>条件：</p><ul><li>必须要闭包</li><li>内部函数要调用外部函数的参数（即外部函数的参数为函数）</li></ul></li><li><p>普通装饰器的创建及使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate</span><span class="params">(func)</span>:</span></span><br><span class="line">    a = <span class="number">100</span></span><br><span class="line">    print(<span class="string">'wrapper上层测试......'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">()</span>:</span>  <span class="comment">#简单的装饰器，内部函数中没有参数</span></span><br><span class="line">        func()</span><br><span class="line">        print(<span class="string">'占地面积为&#123;&#125;平方米！'</span>.format(a))</span><br><span class="line">        print(<span class="string">'铺地板！'</span>)</span><br><span class="line">        print(<span class="string">'装门！'</span>)</span><br><span class="line">    print(<span class="string">'wrapper下层加载完成！'</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用装饰器</span></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">house</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'毛坯房！'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义函数的调用</span></span><br><span class="line">house()</span><br></pre></td></tr></table></figure></li><li><p>使用装饰器后的加载顺序</p><ul><li>第一步：先加载装饰器的外部函数的内容（不包括内部函数）</li><li>第二步：再加载本体函数中的内容</li><li>第三步：最后加载装饰器的内部函数中的内容</li></ul></li><li><p>万能装饰器</p><ul><li><p>作用：满足函数的所有条件</p></li><li><p>特点：内部函数中必须有参数，并且参数为：万能参数（<code>*args, **kwargs</code>）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   定义装饰器</span></span><br><span class="line"><span class="keyword">import</span> time  <span class="comment"># 引入时间函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*a, **kwargs)</span>:</span>  <span class="comment"># 万能装饰器，内部函数中有参数</span></span><br><span class="line">        func(*a, **kwargs)</span><br><span class="line">        print(<span class="string">'校检中......'</span>)</span><br><span class="line">        time.sleep(<span class="number">1</span>)  <span class="comment"># 快捷键：alt + enter</span></span><br><span class="line">        print(<span class="string">'校检完成！'</span>)</span><br><span class="line">        print(<span class="string">'*'</span> * <span class="number">36</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment">#   使用装饰器</span></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'---&gt;func'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">(n)</span>:</span></span><br><span class="line">    print(<span class="string">'---&gt;func1：'</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">(name,age, sex=<span class="string">'女'</span>)</span>:</span></span><br><span class="line">    print(<span class="string">f'---&gt;func2：姓名：<span class="subst">&#123;name&#125;</span>\t年龄：<span class="subst">&#123;age&#125;</span>\t性别：<span class="subst">&#123;sex&#125;</span>'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@decorate</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span><span class="params">(students, classes=<span class="number">8</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'幼儿园&#123;&#125;班的同学如下&#123;&#125;：'</span>.format(classes, students))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> students:</span><br><span class="line">        print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用函数</span></span><br><span class="line">func()  <span class="comment"># 无参数</span></span><br><span class="line">func1(<span class="number">6</span>)  <span class="comment"># 有一个参数</span></span><br><span class="line">func2(<span class="string">'jack'</span>, <span class="number">8</span>)  <span class="comment"># 有多个参数</span></span><br><span class="line"></span><br><span class="line">list01 = [<span class="string">'张三'</span>, <span class="string">'李四'</span>, <span class="string">'王五'</span>]</span><br><span class="line">func3(list01, <span class="number">6</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>多层装饰器的使用</p><ul><li><p>特点：</p><ol><li>在使用装饰器时，遵循函数 “就近原则”，即：距离调用函数越近，则优先执行</li><li>在调用输出时，先依次输出外部函数的所有打印值，再依次输出内部函数的所有打印值（即，先执行完所有外部函数，在执行所有内部函数）</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   定义装饰器decorate1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate1</span><span class="params">(func)</span>:</span></span><br><span class="line">    print(<span class="string">'decorate1正在启动中......'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wraooer</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        print(<span class="string">'正在刷漆中......'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'decorate1运行完毕......'</span>)</span><br><span class="line">    <span class="keyword">return</span> wraooer</span><br><span class="line"></span><br><span class="line"><span class="comment">#   定义装饰器decorate2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate2</span><span class="params">(func)</span>:</span></span><br><span class="line">    print(<span class="string">'decorate2正在启动中......'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wraooer</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        print(<span class="string">'正在铺地板中......'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'decorate2运行完毕......'</span>)</span><br><span class="line">    <span class="keyword">return</span> wraooer</span><br><span class="line"></span><br><span class="line"><span class="comment">#   定义装饰器decorate3</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorate3</span><span class="params">(func)</span>:</span></span><br><span class="line">    print(<span class="string">'decorate3正在启动中......'</span>)</span><br><span class="line">    print(<span class="string">'decorate3运行完毕......'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        func(*args,**kwargs)</span><br><span class="line">        print(<span class="string">'装修完毕！'</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用装饰器</span></span><br><span class="line"><span class="meta">@decorate3      #距离函数最远，最后使用此装饰器</span></span><br><span class="line"><span class="meta">@decorate1</span></span><br><span class="line"><span class="meta">@decorate2      #距离函数最近，优先使用此装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">house</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'现在是毛坯房！'</span>)</span><br><span class="line">house()</span><br></pre></td></tr></table></figure></li></ul></li><li><p>带参数的装饰器（三层）</p><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   定义装饰器（带参数）</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">(n)</span>:</span>   <span class="comment">#第一层：负责接收装饰器的参数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorate</span><span class="params">(func)</span>:</span>     <span class="comment">#第二层：负责接收函数的</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args,**kwargs)</span>:</span>    <span class="comment">#第三层：负责接收函数的参数</span></span><br><span class="line">            func(*args,**kwargs)    <span class="comment">#在内部函数调用外部函数的参数</span></span><br><span class="line">            print(<span class="string">'---&gt;需要铺设地板&#123;&#125;块！'</span>.format(n))</span><br><span class="line">        <span class="keyword">return</span> wrapper      <span class="comment">#负责返回第三层的值</span></span><br><span class="line">    <span class="keyword">return</span> decorate     <span class="comment">#负责返回第二层的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   使用装饰器</span></span><br><span class="line"><span class="meta">@outer(1000)  # 装饰器中有参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">house</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'毛坯房正在装修中......'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   使用装饰器</span></span><br><span class="line"><span class="meta">@outer(9999)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">street</span><span class="params">(time)</span>:</span></span><br><span class="line">    print(<span class="string">'&#123;&#125;的时候，街道要施工！'</span>.format(time))</span><br><span class="line"></span><br><span class="line"><span class="comment">#   调用函数</span></span><br><span class="line">street(<span class="string">'2020-04-04'</span>)</span><br><span class="line">house()</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3系统内置函数的用法(十)</title>
      <link href="/posts/8fa15c00/"/>
      <url>/posts/8fa15c00/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="python最常用的函数"><a href="#python最常用的函数" class="headerlink" title="python最常用的函数"></a>python最常用的函数</h1><ol><li><p>作用：为python语言奠定了基础</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># print()  list()  tuple()  set()  dict()  int()  str()</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="range-函数"><a href="#range-函数" class="headerlink" title="range()函数"></a>range()函数</h1><ol><li><p>作用：范围函数，创建一个整数序列的对象，一般用在for循环中，可用<code>list()</code>、<code>tuple()</code>来转换输出</p></li><li><p>语法格式：<code>range(start, stop, step)</code></p><ul><li><code>start</code>：计数从 <code>start</code> 开始。默认是从 <code>0</code> 开始。例如<code>range(5)</code>等价于<code>range(0, 5)</code></li><li><code>stop</code>：计数到 <code>stop</code> 结束，但不包括 <code>stop</code>，例如：<code>range(0, 5)</code> 是<code>[0, 1, 2, 3, 4]</code>没有<code>5</code></li><li><code>step</code>：步长，默认为<code>1</code>，例如：<code>range(0, 5)</code> 等价于 <code>range(0, 5. 1)</code></li></ul></li><li><p>返回值：整数序列的对象，而不是列表</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = range(<span class="number">10</span>)  <span class="comment"># 从 0 到 10（不包括10）</span></span><br><span class="line">print(list(a))</span><br><span class="line"></span><br><span class="line">b = range(<span class="number">1</span>, <span class="number">10</span>)  <span class="comment"># 从 1 到 10</span></span><br><span class="line">print(tuple(a))</span><br><span class="line"></span><br><span class="line">c = range(<span class="number">0</span>, <span class="number">30</span>, <span class="number">5</span>)  <span class="comment"># 从 0 到 30，步长为5</span></span><br><span class="line">print(list(c))</span><br><span class="line"></span><br><span class="line"><span class="comment"># range()函数与for循环联用</span></span><br><span class="line">d = <span class="string">'range'</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(d)):</span><br><span class="line">    print(d[index])</span><br></pre></td></tr></table></figure></li></ol><h1 id="isinstance-与type-函数"><a href="#isinstance-与type-函数" class="headerlink" title="isinstance()与type()函数"></a>isinstance()与type()函数</h1><ol><li><p>作用：判断一个对象，是否是一个已知的类型</p><ul><li><code>type()</code> 不会认为子类是一种父类类型，<strong>不考虑</strong>继承关系。</li><li><code>isinstance()</code> 会认为子类是一种父类类型，<strong>考虑</strong>继承关系。</li></ul></li><li><p>语法格式：<code>isinstance(object, classinfo)</code></p><ul><li>object：一个实例对象</li><li>classinfo：基本类型（类名）</li></ul></li><li><p>返回值：bool</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">int01 = <span class="number">66</span></span><br><span class="line">print(isinstance(int01, int))</span><br><span class="line">str01 = <span class="string">'88'</span></span><br><span class="line">print(isinstance(str01, str))</span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">print(isinstance(list01, list))</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(A)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = isinstance(A(), A)  <span class="comment"># True</span></span><br><span class="line">aa = type(A()) == A     <span class="comment"># True</span></span><br><span class="line">b = isinstance(B(), A)  <span class="comment"># True</span></span><br><span class="line">bb = type(B()) == A     <span class="comment"># False 因为type()不认同继承关系</span></span><br><span class="line">print(a, aa, b, bb)</span><br></pre></td></tr></table></figure></li></ol><h1 id="sorted-函数"><a href="#sorted-函数" class="headerlink" title="sorted()函数"></a>sorted()函数</h1><ol><li><p>作用：</p><ul><li><code>sort()</code>是应用在<code>list</code>上的方法，<code>sorted()</code>可以对所有<strong>可迭代</strong>的对象进行<strong>排序</strong>操作</li><li><code>list</code>的 <code>sort()</code>方法返回的是对<strong>已经存在</strong>的列表进行操作，而内建函数<code>sorted()</code>方法返回的是一个<strong>新</strong>的<code>list</code>，而不是在原来的基础上进行的操作。</li></ul></li><li><p>语法格式：<code>sorted(iterable, key=None, reverse=False)</code></p><ul><li><code>iterable</code>：可迭代的对象</li><li><code>key</code>：指定排序的元素属性，按照指定的属性进行排序（默认为None）</li><li><code>reverse</code>：进行反转，排序规则<code>reverse=False</code>（升序，默认，可省略），<code>reverse=True</code>（降序）</li></ul></li><li><p>返回值：返回重新排序的列表</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>]</span><br><span class="line">b = sorted(a)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'小明'</span>, <span class="string">'age'</span>: <span class="number">66</span>, <span class="string">'gender'</span>: <span class="string">'男'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'小王'</span>, <span class="string">'age'</span>: <span class="number">99</span>, <span class="string">'gender'</span>: <span class="string">'男'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'小花'</span>, <span class="string">'age'</span>: <span class="number">88</span>, <span class="string">'gender'</span>: <span class="string">'女'</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'薇薇'</span>, <span class="string">'age'</span>: <span class="number">18</span>, <span class="string">'gender'</span>: <span class="string">'女'</span>&#125;</span><br><span class="line">]</span><br><span class="line">a01 = sorted(students, key=<span class="keyword">lambda</span> x : x[<span class="string">'age'</span>], reverse=<span class="literal">True</span>)  <span class="comment"># 按照age倒序排列</span></span><br><span class="line">print(a01)</span><br></pre></td></tr></table></figure></li></ol><h1 id="进制转换函数"><a href="#进制转换函数" class="headerlink" title="进制转换函数"></a>进制转换函数</h1><ol><li><p>作用：通过python的内置函数，自动转换为所需的进制数</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">8888</span>  <span class="comment"># 十进制数</span></span><br><span class="line">print(bin(a))  <span class="comment"># bin()  二进制 ---&gt; 0b10001010111000</span></span><br><span class="line">print(oct(a))  <span class="comment"># oct()  八进制 ---&gt; 0o21270</span></span><br><span class="line">print(hex(a))  <span class="comment"># hex()  十六进制 ---&gt; 0x22b8</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="chr-与ord-函数"><a href="#chr-与ord-函数" class="headerlink" title="chr()与ord()函数"></a>chr()与ord()函数</h1><ol><li><p>chr()的作用：将unicode码转换为str字母</p></li><li><p>ord()的作用：将str字母转换为unicode码</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大写字母(A~Z):65~90</span></span><br><span class="line"><span class="comment"># 小写字母(a~z)：97~122</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">upper_str = chr(random.randint(<span class="number">65</span>, <span class="number">90</span>))  <span class="comment"># 随机产生一个大写字母</span></span><br><span class="line"></span><br><span class="line">print(upper_str)</span><br><span class="line"></span><br><span class="line">print(ord(upper_str))  <span class="comment"># ascii码对照表可查看</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="filter-函数"><a href="#filter-函数" class="headerlink" title="filter()函数"></a>filter()函数</h1><ol><li><p>作用：</p><ul><li>函数用于<strong>过滤</strong>序列，过滤掉不符合条件的元素，返回由符合条件元素组成的<strong>新列表</strong></li><li>接收两个参数，第一个为<strong>函数</strong>，第二个为<strong>序列</strong>，序列的每个元素作为参数传递给函数进行<strong>判断</strong>，然后返回 True 或 False，最后将返回 True 的元素放到<strong>新列表</strong>中</li></ul></li><li><p>注意事项：</p><ul><li><code>filter()</code>中的<code>function</code>代表函数名，不调用函数</li><li><code>filter()</code>返回的是一个<code>object</code>，使用时需要转换为其他类型，如：<code>list</code>、<code>tuple</code></li></ul></li><li><p>语法格式：<code>filter(function, iterable)</code> </p><ul><li><code>function</code>：函数名（判断函数）</li><li><code>iterable</code>：可迭代的对象</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = filter(<span class="keyword">lambda</span> x : x % <span class="number">2</span>==<span class="number">0</span>, range(<span class="number">10</span>))</span><br><span class="line">print(a)  <span class="comment"># 返回一个对象，节省内存</span></span><br><span class="line">print(list(a))  <span class="comment"># 将对象转化为list</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(n)</span>:</span>  <span class="comment"># 定义判断函数：test()</span></span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> ==<span class="number">0</span></span><br><span class="line"></span><br><span class="line">b = filter(test, range(<span class="number">10</span>))</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment"># print(list(b))</span></span><br><span class="line">print(tuple(b))  <span class="comment"># 将对象转换为tuple，转换后就不能再转换了</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="map-函数"><a href="#map-函数" class="headerlink" title="map()函数"></a>map()函数</h1><ol><li><p>作用</p><ul><li>会根据提供的函数，对指定序列做映射</li><li>将可<code>iterable</code>的对象的每一个元素，作为<code>function</code>的实参</li></ul></li><li><p>语法格式：<code>map(function, iterable, ...)</code></p><ul><li><code>function</code>：函数</li><li><code>iterable</code>：一个或多个可迭代的序列</li></ul></li><li><p>返回值：返回迭代器</p></li><li><p>示例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">a = map(test, list01)</span><br><span class="line">print(a)</span><br><span class="line">print(list(a))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匿名函数</span></span><br><span class="line">b = map(<span class="keyword">lambda</span> x: x ** <span class="number">2</span>, list01)</span><br><span class="line">print(b)</span><br><span class="line">print(list(b))</span><br></pre></td></tr></table></figure></li><li><p>示例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数有多个参数, 但每个参数的序列中的元素数量不一样, 会根据最少元素的序列进行</span></span><br><span class="line">list_x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]  <span class="comment"># 7 个元素</span></span><br><span class="line">list_y = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]  <span class="comment"># 6 个元素</span></span><br><span class="line">list_z = [<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>]  <span class="comment"># 4 个元素</span></span><br><span class="line">list_result = map(<span class="keyword">lambda</span> x, y, z: x ** <span class="number">2</span> + y + z, list_x, list_y, list_z)</span><br><span class="line">print(list(list_result))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 规范名字格式</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Names</span><span class="params">(object)</span>:</span></span><br><span class="line">    name_set = &#123;<span class="string">'tony'</span>, <span class="string">'cHarLIE'</span>, <span class="string">'rachAEl'</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">format_name</span><span class="params">(name)</span>:</span></span><br><span class="line">        new_names = name[<span class="number">0</span>:<span class="number">1</span>].upper() + name[<span class="number">1</span>:].lower()</span><br><span class="line">        <span class="keyword">return</span> new_names</span><br><span class="line"></span><br><span class="line">    new_name_set = set(map(format_name, name_set))</span><br><span class="line">    print(new_name_set)</span><br><span class="line"></span><br><span class="line">Names()</span><br></pre></td></tr></table></figure></li></ol><h1 id="enumerate-函数"><a href="#enumerate-函数" class="headerlink" title="enumerate()函数"></a>enumerate()函数</h1><ol><li><p>作用：枚举函数，将一个可遍历的数据对象(如<code>list</code>、<code>tuple</code>或<code>str</code>)组合为一个索引序列，同时列出<code>index</code>和<code>value</code>，一般用在 for 循环当中</p></li><li><p>语法格式：<code>enumerate(iterable, start=0)</code></p><ul><li><code>iterable</code>：可迭代的对象</li><li><code>start</code>：下标起始位置</li></ul></li><li><p>返回值：枚举的对象</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enumerate()函数的用法</span></span><br><span class="line">seasons = [<span class="string">'Spring'</span>, <span class="string">'Summer'</span>, <span class="string">'Fall'</span>, <span class="string">'Winter'</span>]</span><br><span class="line">a = list(enumerate(seasons, start=<span class="number">1</span>))</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通for循环</span></span><br><span class="line">index = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> seasons:</span><br><span class="line">    print(index, i)</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环与enumerate()函数联用</span></span><br><span class="line"><span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(seasons, start=<span class="number">1</span>):</span><br><span class="line">    print(index, value)</span><br></pre></td></tr></table></figure></li></ol><h1 id="reduce-函数"><a href="#reduce-函数" class="headerlink" title="reduce()函数"></a>reduce()函数</h1><ol><li><p>作用：利用作为参数的函数，中的 2 个元素，进行各种运算</p></li><li><p>注意事项：<code>from functools import reduce</code> （使用<code>reduce()</code>函数时，必须先引入）</p></li><li><p>语法格式：<code>reduce(function, iterable, initializer)</code></p><ul><li><code>function</code>：函数，有两个参数</li><li><code>iterable</code>：可迭代的对象</li><li><code>initializer</code>：初始参数，可省略</li></ul></li><li><p>返回值：返回函数计算的结果</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="comment"># 定义普通函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a + b  <span class="comment"># 普通函数中，必须要有返回值（reduce()使用的可是返回值）</span></span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">result01 = reduce(add, list01, <span class="number">0</span>)  <span class="comment"># 初始参数为 0</span></span><br><span class="line">print(result01) <span class="comment"># 运算过程：0+1+2+3+4+5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 匿名函数</span></span><br><span class="line">result02 = reduce(<span class="keyword">lambda</span> x, y: x + y, list01)  <span class="comment"># 没有初始参数</span></span><br><span class="line">print(result02)  <span class="comment"># 运算过程：1+2+3+4+5</span></span><br><span class="line"></span><br><span class="line">result03 = reduce(<span class="keyword">lambda</span> x, y: x + y,list01, <span class="number">100</span>)  <span class="comment"># 初始参数为100</span></span><br><span class="line">print(result03)  <span class="comment"># 运算过程：100+1+2+3+4+5</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3函数的用法(九)</title>
      <link href="/posts/b6cac916/"/>
      <url>/posts/b6cac916/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h1><ol><li><p>关键词：<code>def</code> </p></li><li><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名<span class="params">(形参)</span>:</span>  <span class="comment"># 定义函数</span></span><br><span class="line">    函数体  </span><br><span class="line">函数名(实参)  <span class="comment"># 调用函数</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="函数中的不可变参数与可变参数"><a href="#函数中的不可变参数与可变参数" class="headerlink" title="函数中的不可变参数与可变参数"></a>函数中的不可变参数与可变参数</h1><ol><li><p>不可变参数：</p><ul><li><p>占位符：单个或多个有效字符，例如：<code>arg</code>、<code>name</code>等等</p></li><li><p>注意事项：不可变参数，可以有<strong>单个</strong>或<strong>多个</strong>，而且，调用时必须一一对应添加实参</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(arg, age)</span>:</span></span><br><span class="line">    print(<span class="string">f'<span class="subst">&#123;arg&#125;</span>今年<span class="subst">&#123;age&#125;</span>岁了！'</span>)</span><br><span class="line">person(<span class="string">'张三'</span>, <span class="number">66</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>可变参数：</p><ul><li><p>占位符：<code>*args</code> （<code>*</code>是标识符，<code>args</code> 是形参）</p></li><li><p>注意事项：</p><ol><li>可变参数，只能有一个<code>*args</code></li><li>在调用时，可以<strong>无</strong>实参或输入<strong>单个</strong>或输入<strong>多个</strong>实参</li><li>输出的类型为<code>tuple</code>型</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fruits</span><span class="params">(*fruit)</span>:</span></span><br><span class="line">    print(fruit)</span><br><span class="line">    <span class="keyword">if</span> len(fruit) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> fruit:</span><br><span class="line">            print(<span class="string">f'张三喜欢吃<span class="subst">&#123;i&#125;</span>'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">f'張三不喜歡吃水果！'</span>)</span><br><span class="line">a = [<span class="string">'苹果6'</span>, <span class="string">'香蕉8'</span>, <span class="string">'西瓜9'</span>]</span><br><span class="line"></span><br><span class="line">fruits(<span class="string">'苹果'</span>, <span class="string">'香蕉'</span>, <span class="string">'西瓜'</span>)  <span class="comment"># 输入多个实参</span></span><br><span class="line">fruits()  <span class="comment"># 无参数</span></span><br><span class="line">fruits(a)  <span class="comment"># 输单个实参，将 a 作为一个整体</span></span><br><span class="line">fruits(*a)  <span class="comment"># 输入多个实参，*代表依次取 a 中的元素</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>不可变参数与可变参数的混合使用</p><ul><li><p>注意事项：必须先写不可变参数，再写可变参数；若存在两个不可变参数，可变参数以第三个参数为开始计算</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fruits</span><span class="params">(name,num, *fruit)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> len(fruit) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> fruit:</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;name&#125;</span>喜欢吃<span class="subst">&#123;num&#125;</span>个<span class="subst">&#123;i&#125;</span>！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;name&#125;</span>不喜歡吃水果！'</span>)</span><br><span class="line">a = [<span class="string">'苹果1'</span>, <span class="string">'香蕉2'</span>, <span class="string">'西瓜7'</span>]</span><br><span class="line">fruits(<span class="string">'張三'</span>, <span class="number">8</span>, <span class="string">'苹果'</span>, <span class="string">'香蕉'</span>, <span class="string">'西瓜'</span>)</span><br><span class="line">fruits(<span class="string">'張三'</span>, <span class="number">9</span>)</span><br><span class="line">fruits(<span class="string">'張三'</span>, <span class="number">6</span>, a)</span><br><span class="line">fruits(<span class="string">'張三'</span>, <span class="number">3</span>, *a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="函数中的关键字参数"><a href="#函数中的关键字参数" class="headerlink" title="函数中的关键字参数"></a>函数中的关键字参数</h1><ol><li><p>占位符：<code>**kwargs</code> （<code>**</code>是标识符，<code>kwargs</code> 是形参）</p></li><li><p>注意事项：<code>**kwargs</code>在调用时，必须用<code>key=value</code>的形式，作为实参</p></li><li><p>输出的类型为<code>dict</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span><span class="params">(**abc)</span>:</span></span><br><span class="line">    print(abc)</span><br><span class="line">person(name=<span class="string">'李四'</span>, age=<span class="number">88</span>, 性别=<span class="string">'男'</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="默认值参数"><a href="#默认值参数" class="headerlink" title="默认值参数"></a>默认值参数</h1><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add0</span><span class="params">(a, b=<span class="number">10</span>, c=<span class="number">5</span>)</span>:</span></span><br><span class="line">    result0 = a + b + c</span><br><span class="line">    print(result0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add0()    # 当函数参数都为默认值参数时。可以不用输入值，因为存在默认值</span></span><br><span class="line">add0(<span class="number">5</span>)  <span class="comment"># 当输入1个值时，只对a进行赋值，其余默认；即a=5,b=10,c=5</span></span><br><span class="line">add0(<span class="number">4</span>, <span class="number">5</span>)  <span class="comment"># 当输入2个值时，会覆盖原来的参数的默认值；即a=4,b=5,c=5</span></span><br><span class="line">add0(<span class="number">5</span>, c=<span class="number">10</span>)  <span class="comment"># 要想改变指定默认值参数的值，需写入指定参数并赋值</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="混合参数的用法"><a href="#混合参数的用法" class="headerlink" title="混合参数的用法"></a>混合参数的用法</h1><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a,b,*c,**kwargs)</span>:</span>      <span class="comment">#*代表：tuple  **代表：dict</span></span><br><span class="line">    print(a,b,c,kwargs)</span><br><span class="line"></span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,x=<span class="number">666</span>)</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">'arg'</span>,<span class="number">7</span>,<span class="number">8</span>,aaa=<span class="number">888</span>)</span><br><span class="line"><span class="comment"># test(1,2,x=77,5)  #错误的输出调用，因为和定义的参数顺序有关</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h1><ol><li><p>说明：</p><ul><li>当返回值可以是一个值，输出时需要用变量接收，如：<code>w = add0(2,8)</code></li><li>当返回值为多个时，底层逻辑是，先将返回的多个值放入<code>tuple</code>中，再将<code>tuple</code>作为一个整体输出，如：<code>(13, &#39;admin&#39;, 5)</code></li><li>当接收多个返回值时，可以将返回值的值定义变量输出（有几个值就必须要定义几个变量值），如：<code>x,y,z = add0(2,8)</code></li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add0</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    result = a+b</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="keyword">return</span> result,<span class="string">'admin'</span>,<span class="number">5</span></span><br><span class="line">add0(<span class="number">2</span>,<span class="number">8</span>)</span><br><span class="line">w = add0(<span class="number">5</span>,<span class="number">8</span>)</span><br><span class="line">print(w)</span><br><span class="line"></span><br><span class="line">x,y,z = add0(<span class="number">2</span>,<span class="number">8</span>)</span><br><span class="line">print(x,y,z)</span><br></pre></td></tr></table></figure></li></ol><h1 id="函数之全局变量和局部变量"><a href="#函数之全局变量和局部变量" class="headerlink" title="函数之全局变量和局部变量"></a>函数之全局变量和局部变量</h1><ol><li><p>全局变量：在函数体外定义的变量，可以在函数内和函数体外调用使用</p></li><li><p>局部变量：在函数体内定义的变量，只能在自身定义的函数体内使用</p></li><li><p>定义全局变量和局部变量，示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'小明'</span>  <span class="comment"># 全局变量（不可变类型：str）</span></span><br><span class="line">s = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  <span class="comment"># 全局变量（可变类型：list）</span></span><br><span class="line">print(<span class="string">'没有修改的原始数据：'</span>, name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'func：'</span>,name)  <span class="comment"># 在函数体内使用全局变量</span></span><br><span class="line">func()    </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func1</span><span class="params">()</span>:</span></span><br><span class="line">    name = <span class="string">'小王'</span>  <span class="comment"># 定义局部变量（强烈建议，局部变量和全局变量不能重名）</span></span><br><span class="line">    print(<span class="string">'func1：'</span>, name)  <span class="comment"># 打印局部变量，就近原则，因为局部变量最近</span></span><br><span class="line">func1()</span><br><span class="line">    </span><br><span class="line">print(name)  <span class="comment"># 输出全局变量</span></span><br></pre></td></tr></table></figure></li><li><p>修改全局变量与局部变量</p><ul><li><p>注意事项：</p><ol><li>若要在函数体内修改全局变量，必须用<code>global + 变量名</code> 进行声明，修改后，不可变类型的全局变量将被<strong>永久</strong>修改，会影响后续输出</li><li>若变量为<strong>不可变</strong>类型，在函数体内修改，必须使用<code>global</code>声明</li><li>若变量为<strong>可变</strong>类型，在函数体内修改，无需<code>global</code>声明，直接修改即可，如：<code>list</code></li><li>全局变量与局部变量一定不能重名</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'小明'</span>  <span class="comment"># 全局变量（不可变类型：str）</span></span><br><span class="line">s = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  <span class="comment"># 全局变量（可变类型：list）</span></span><br><span class="line">print(<span class="string">'原始数据：'</span>, name)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> name  <span class="comment"># 声明全局变量 name（不可变类型str）</span></span><br><span class="line">    s = <span class="string">'是程序员！'</span>  <span class="comment"># 修改全局变量 s （可变类型list）</span></span><br><span class="line">    name += s  <span class="comment"># 修改全局变量name</span></span><br><span class="line">    print(name)</span><br><span class="line">func2()</span><br><span class="line">print(<span class="string">'修改后：'</span>, name)  <span class="comment"># 修改后的值</span></span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="内部函数"><a href="#内部函数" class="headerlink" title="内部函数"></a>内部函数</h1><ol><li><p>特点:</p><ul><li>可以访问外部函数的变量</li><li>内部函数可以修改<strong>外部函数</strong>的<strong>可变类型</strong>的变量比如：<code>list</code></li><li>内部函数修改<strong>全局</strong>的<strong>不可变变量</strong>时，需要在内部函数声明<code>global</code> 变量名</li><li>内部函数修改<strong>外部函数</strong>的<strong>不可变</strong>的变量时，需要在<strong>内部函数</strong>中声明: <code>nonlocal</code> 变量名</li><li><code>locals()</code> 查看<strong>本地变量</strong>有哪些，以<strong>字典</strong>的形式输出</li><li><code>globals()</code> 查看<strong>全局变量</strong>有哪些，以<strong>字典</strong>的形式输出（注意里面会有一些<strong>系统</strong>的键值对）</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span>  <span class="comment"># 外部函数</span></span><br><span class="line">    n = <span class="number">100</span>  <span class="comment"># 局部变量</span></span><br><span class="line">    list8 = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]  <span class="comment"># 局部变量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">a</span><span class="params">()</span>:</span>  <span class="comment"># 内部函数</span></span><br><span class="line">        <span class="keyword">nonlocal</span> n  <span class="comment"># 内部函数声明不可变类型时，用nonlocal + 变量名</span></span><br><span class="line">        <span class="comment"># n += 100</span></span><br><span class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(list8):  <span class="comment"># 枚举函数enumerate()遍历list8</span></span><br><span class="line">            list8[index] = value + n</span><br><span class="line">        list8.sort()</span><br><span class="line">        <span class="comment"># list8.reverse()</span></span><br><span class="line">        n += <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    a()  <span class="comment"># 调用内部函数</span></span><br><span class="line"></span><br><span class="line">    print(list8)</span><br><span class="line">    print(n)  <span class="comment"># 在内部函数中nonlocal声明了变量，并且+100，所以原始数据发生了变化</span></span><br><span class="line"></span><br><span class="line">func()  <span class="comment"># 调用外部函数</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有的全局变量与局部变量（本地变量）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line">print(globals())  <span class="comment"># 查看全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    b = <span class="number">99</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func8</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">global</span> a</span><br><span class="line">        <span class="keyword">nonlocal</span> b</span><br><span class="line">        c = <span class="number">88</span></span><br><span class="line">        c += <span class="number">100</span></span><br><span class="line">        a += <span class="number">100</span></span><br><span class="line">        b += <span class="number">100</span></span><br><span class="line">        print(<span class="string">'a:'</span>, a, <span class="string">'\n'</span>, <span class="string">'b:'</span>, b, <span class="string">'\n'</span>, <span class="string">'c:'</span>, c, sep=<span class="string">''</span>)</span><br><span class="line">        print(locals())  <span class="comment"># 查看本地变量</span></span><br><span class="line"></span><br><span class="line">    func8()</span><br><span class="line">    print(locals())  <span class="comment"># 查看本地变量</span></span><br><span class="line"></span><br><span class="line">func()</span><br></pre></td></tr></table></figure></li></ol><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><ol><li><p>格式：<code>lambda 参数:返回结果</code></p></li><li><p>关键词：<code>lambda</code></p></li><li><p>作用：简化函数</p></li><li><p>注意事项：</p><ul><li>匿名函数的返回结果只能有一个</li><li>匿名函数必须有一个变量接收或做自身作为一个变量</li><li>匿名函数的结果是一个<strong>返回值</strong>，所以必须有变量接收，否则无法输出</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="keyword">lambda</span> a, b: a + b</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">x = a(<span class="number">3</span>, <span class="number">8</span>)</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将匿名函数作为一个参数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y, func)</span>:</span></span><br><span class="line">    a = x + y</span><br><span class="line">    print(a)</span><br><span class="line">    b = func(x, y)</span><br><span class="line">    print(b)</span><br><span class="line"></span><br><span class="line">add(<span class="number">7</span>, <span class="number">8</span>, <span class="keyword">lambda</span> x, y: x * y)</span><br></pre></td></tr></table></figure></li></ol><h1 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h1><ol><li><p>作用：在自己的函数体内调用自己，起到类似迭代的效果，而且递归求解比迭代求解更简单</p></li><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(n)</span>:</span></span><br><span class="line">print(n)</span><br><span class="line">test(n)  <span class="comment"># 注意：内部调用时，必须要有条件约束，否则死循环</span></span><br><span class="line">test(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义 斐波那契数列 函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> n + test(n - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line"><span class="comment"># 外部调用函数</span></span><br><span class="line">x = test(<span class="number">10</span>)  <span class="comment"># 函数的返回值必须用变量来接收</span></span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure></li></ol><h1 id="函数之作用域"><a href="#函数之作用域" class="headerlink" title="函数之作用域"></a>函数之作用域</h1><ul><li><p>顺序</p><ol><li>L：<code>local</code>     本地  局部变量</li><li>E：<code>encloseing</code>    嵌套</li><li>G：<code>global</code>    全局变量</li><li>B：<code>built-in</code>    内置的</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span>     <span class="comment">#第三步：global</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outer</span><span class="params">()</span>:</span></span><br><span class="line">    a = <span class="number">10</span>      <span class="comment">#第二步：encloseing</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">        a = <span class="number">1</span>       <span class="comment">#第一步：local</span></span><br><span class="line">        print(max([<span class="number">1</span>, <span class="number">2</span>]))  <span class="comment">#最后一步：built-in</span></span><br><span class="line">    func()</span><br><span class="line">outer()</span><br></pre></td></tr></table></figure></li></ul><h1 id="函数的调用与删除"><a href="#函数的调用与删除" class="headerlink" title="函数的调用与删除"></a>函数的调用与删除</h1><ol><li><p>注意事项：</p><ul><li>若函数中存在<strong>返回值</strong>，必须用一个<strong>变量</strong>来接收，或者直接<code>print()</code>函数</li><li>函数可以传递给其他变量，让此变量获得函数的功能</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(msg=<span class="string">'Python'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hi!\t'</span> + msg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数后，直接输出</span></span><br><span class="line">print(<span class="string">'第一次输出：'</span>, test())</span><br><span class="line"><span class="comment"># 调用函数后，存放于变量中</span></span><br><span class="line">a = test()</span><br><span class="line">print(<span class="string">'第二次输出：'</span>, a)</span><br><span class="line"><span class="comment"># 函数传递功能</span></span><br><span class="line">b = test</span><br><span class="line">print(<span class="string">'第三次输出：'</span>, test())</span><br><span class="line"><span class="comment"># 此时的变量 b 已经具有了test函数的功能</span></span><br><span class="line">print(<span class="string">'第四次输出：'</span>, b())</span><br><span class="line"><span class="comment"># 删除函数</span></span><br><span class="line"><span class="keyword">del</span> test</span><br><span class="line"><span class="comment"># 删除test函数后，就不能再调用test了，否则报错</span></span><br><span class="line"><span class="comment"># print('第五次输出：', test())</span></span><br><span class="line"><span class="comment"># 调用赋值的函数 b()</span></span><br><span class="line">print(<span class="string">'第六次输出：'</span>, b())  <span class="comment"># 此时的 b 属于一个，具有单独功能的函数，和test没有直接关系</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="系统内置函数"><a href="#系统内置函数" class="headerlink" title="系统内置函数"></a>系统内置函数</h1>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3集合、数据可变与不可变的用法(八)</title>
      <link href="/posts/2e7949f6/"/>
      <url>/posts/2e7949f6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="集合的创建"><a href="#集合的创建" class="headerlink" title="集合的创建"></a>集合的创建</h1><ol><li><p>集合的特点：集合中的元素时无序不重复的</p></li><li><p>格式：<code>set01 = {value}</code></p></li><li><p>空集合：<code>set02 = set()</code> （空集合只能用这种方式创建，<code>a={}</code>表示一个<strong>空字典</strong>）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dict01 = &#123;&#125;  <span class="comment"># 空字典</span></span><br><span class="line">print(dict01, type(dict01))</span><br><span class="line"></span><br><span class="line">set01 = set()  <span class="comment"># 空集合</span></span><br><span class="line">print(set01, type(set01))</span><br><span class="line"></span><br><span class="line">set02 = &#123;<span class="number">3</span>, <span class="number">6</span>, <span class="string">'1'</span>, <span class="string">'4'</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">5</span>&#125;</span><br><span class="line">print(set02)</span><br></pre></td></tr></table></figure></li></ol><h1 id="集合添加元素"><a href="#集合添加元素" class="headerlink" title="集合添加元素"></a>集合添加元素</h1><ol><li><p>添加单个元素</p><ul><li><p>内建函数：<code>add()</code></p></li><li><p>格式：<code>set.add(value)</code> </p></li><li><p>注意事项：不管添加的是什么类型的元素，加入后都代表<code>set</code>的其中一个元素</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'小明'</span>,<span class="string">'abc'</span>&#125;</span><br><span class="line">b = (<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>)</span><br><span class="line">a.add(<span class="string">'张三'</span>)</span><br><span class="line">a.add(b)        <span class="comment"># 添加tuple时，直接将tuple作为整体添加，即保留原始type</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加多个元素</p><ul><li><p>内建函数：<code>update()</code></p></li><li><p>格式：<code>set.update(value)</code></p></li><li><p>注意事项：若添加的内容是一个可迭代的类型，会将里面的元素一一取出来添加，即一次添加多个元素</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'小明'</span>,<span class="string">'abc'</span>&#125;</span><br><span class="line">b = (<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>)</span><br><span class="line">a.update(<span class="string">'张三'</span>)</span><br><span class="line">a.update(b)        </span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="集合删除元素"><a href="#集合删除元素" class="headerlink" title="集合删除元素"></a>集合删除元素</h1><ol><li><p>删除指定元素</p><ul><li><p>内建函数：<code>remove()</code>、<code>discard()</code></p></li><li><p>格式：<code>set.remove(value)</code>、<code>set.discard(value)</code> （只能删除一个元素）</p></li><li><p>注意事项：<code>remove()</code>删除不存在的元素，会报错；<code>discard()</code>删除不存在的元素，不报错</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># remove()</span></span><br><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'abc'</span>&#125;</span><br><span class="line"><span class="comment"># a.remove('李四7')  # 删除不存在的元素，会报错</span></span><br><span class="line">a.remove(<span class="string">'李四'</span>)</span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line"><span class="comment"># discard()</span></span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'abc'</span>&#125;</span><br><span class="line">b.discard(<span class="number">3</span>)</span><br><span class="line">b.discard(<span class="number">30</span>)  <span class="comment"># 删除不存在的元素，不报错</span></span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除第一个元素</p><ul><li><p>内建函数：<code>pop()</code></p></li><li><p>格式：<code>set.pop()</code> （默认删除第一个元素，此内建函数没有参数）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'abc'</span>,<span class="string">'qwer'</span>&#125;</span><br><span class="line">print(a)</span><br><span class="line">a.pop()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>清空集合</p><ul><li><p>内建函数：<code>clear()</code></p></li><li><p>格式：<code>set.clear()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'张三'</span>,<span class="string">'李四'</span>,<span class="string">'abc'</span>&#125;</span><br><span class="line">a.clear()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="求集合的差集、交集、并集、对称差集"><a href="#求集合的差集、交集、并集、对称差集" class="headerlink" title="求集合的差集、交集、并集、对称差集"></a>求集合的差集、交集、并集、对称差集</h1><ol><li><p>差集</p><ul><li><p>符号：<code>-</code></p></li><li><p>内建函数：<code>difference()</code>、<code>difference_update()</code></p></li><li><p>格式：<code>set.difference(value)</code>、<code>set.difference_update(value)</code></p></li><li><p>注意事项：<code>difference_update()</code>是改变原始的数据</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line">c = a - b  <span class="comment"># 差集符号 -</span></span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">c = b.difference(a)</span><br><span class="line">print(c)</span><br><span class="line">print(b)  <span class="comment"># 原始集合 b 没有改变</span></span><br><span class="line"></span><br><span class="line">print(a)  <span class="comment"># 此时原始集合 a 没有改变</span></span><br><span class="line">d = a.difference_update(b)      <span class="comment">#注意：使用了此函数，后面的数据会发生改变，更新</span></span><br><span class="line">print(d)  <span class="comment"># 此时的 d 是空的，因为difference_update()是在原数据上修改的</span></span><br><span class="line">print(a)  <span class="comment"># 此时 a 发生了实质性的改变</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>交集 </p><ul><li><p>符号：<code>&amp;</code></p></li><li><p>内建函数：<code>intersection()</code>、<code>intersection_update()</code></p></li><li><p>注意事项：<code>intersection_update()</code>是改变原始的数据</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line">c = a &amp; b  <span class="comment"># 差集符号 &amp;</span></span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">c = b.intersection(a)</span><br><span class="line">print(c)</span><br><span class="line">print(b) </span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">d = a.intersection_update(b)      </span><br><span class="line">print(d)  </span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>并集</p><ul><li><p>符号：<code>|</code></p></li><li><p>内建函数：<code>union()</code>、<code>update()</code></p></li><li><p>注意事项：<code>update()</code>是改变原始的数据</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line">c = a | b  <span class="comment"># 差集符号 |</span></span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">c = b.union(a)</span><br><span class="line">print(c)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">d = a.update(b)</span><br><span class="line">print(d)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对称差集</p><ul><li><p>符号：<code>^</code></p></li><li><p>内建函数：<code>symmetric_difference()</code>、<code>symmetric_difference_update()</code></p></li><li><p>注意事项：<code>symmetric_difference_update()</code>是改变原始的数据</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;</span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line">c = a ^ b  <span class="comment"># 差集符号 |</span></span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">f = (a | b) - (a &amp; b)</span><br><span class="line">print(<span class="string">'对称差集：'</span>, f)</span><br><span class="line"></span><br><span class="line">c = b.symmetric_difference(a)</span><br><span class="line">print(<span class="string">'对称差集：'</span>, c)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">print(a)</span><br><span class="line">d = a.symmetric_difference_update(b)</span><br><span class="line">print(d)</span><br><span class="line">print(<span class="string">'对称差集：'</span>, a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="数据的可变与不可变"><a href="#数据的可变与不可变" class="headerlink" title="数据的可变与不可变"></a>数据的可变与不可变</h1><ol><li><p>可变类型：<code>list</code>、<code>dict</code>、<code>set</code></p></li><li><p>不可变类型：<code>str</code>、<code>int</code>、<code>float</code>、<code>tuple</code></p></li><li><p>判断依据：数据类型是否具有删除属性，并且删除后<code>id()</code>不变的为可变类型</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># list示例</span></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">print(a, id(a))</span><br><span class="line"></span><br><span class="line">a.pop(<span class="number">5</span>)  <span class="comment"># 删除后list的地址不变</span></span><br><span class="line">print(a, id(a))</span><br><span class="line"></span><br><span class="line"><span class="comment"># dict示例</span></span><br><span class="line">b = &#123;<span class="string">'name'</span>: <span class="string">'小明'</span>, <span class="string">'age'</span>: <span class="number">88</span>, <span class="string">'gender'</span>: <span class="string">'男'</span>&#125;</span><br><span class="line">print(b, id(b))</span><br><span class="line"></span><br><span class="line">b.pop(<span class="string">'name'</span>)  <span class="comment"># 删除后dict的地址不变</span></span><br><span class="line">print(b, id(b))</span><br><span class="line"></span><br><span class="line"><span class="comment"># set示例</span></span><br><span class="line">c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">print(c, id(c))</span><br><span class="line"></span><br><span class="line">c.discard(<span class="number">5</span>)  <span class="comment"># 删除后set的地址不变</span></span><br><span class="line">print(c, id(c))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3元组和字典的用法(七)</title>
      <link href="/posts/81d89753/"/>
      <url>/posts/81d89753/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="元组的创建"><a href="#元组的创建" class="headerlink" title="元组的创建"></a>元组的创建</h1><ol><li><p>格式：<code>tuple = (value, )</code></p></li><li><p>元组的特点：<strong>不能修改</strong>元组中的元素，但是两个或多个元组可以相互<strong>组合</strong>和<strong>重复</strong>使用</p></li><li><p>创建元组：<code>tuple01 = (1,)</code>，当元组中只有一个元素时，必须用逗号<code>,</code>分割，否则就是一个<code>int</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tuple01 = (<span class="number">1</span>, <span class="number">2</span>, <span class="string">'5'</span>)</span><br><span class="line">print(tuple01, type(tuple01))</span><br><span class="line">tuple02 = (<span class="number">5</span>)</span><br><span class="line">print(tuple02, type(tuple02))</span><br><span class="line">tuple03 = (<span class="number">5</span>,)</span><br><span class="line">print(tuple03, type(tuple03))</span><br></pre></td></tr></table></figure></li></ol><h1 id="元组的组合和重复使用"><a href="#元组的组合和重复使用" class="headerlink" title="元组的组合和重复使用"></a>元组的组合和重复使用</h1><ul><li><p>符号：<code>+</code>组合，<code>*</code>重复</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple01 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) * <span class="number">3</span> + (<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>) + (<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line">print(tuple01)</span><br></pre></td></tr></table></figure></li></ul><h1 id="元组查询元素"><a href="#元组查询元素" class="headerlink" title="元组查询元素"></a>元组查询元素</h1><ol><li><p>用下标查询元素</p><ul><li><p>格式：<code>tuple[index]</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple01 = (<span class="number">1</span>, <span class="number">2</span>, <span class="string">'5'</span>)</span><br><span class="line">print(tuple01[<span class="number">2</span>], type(tuple01[<span class="number">2</span>]))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>切片查询多个元素</p><ul><li><p>格式：<code>tuple[start:end:step​]</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tuple02 = (<span class="number">1</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>)</span><br><span class="line">print(tuple02[<span class="number">2</span>:<span class="number">6</span>:<span class="number">2</span>])</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询指定元素的下标</p><ul><li><p>内建函数：<code>index()</code></p></li><li><p>格式：<code>tuple.index(value, start, end)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">5</span>, <span class="string">'5'</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="string">'5'</span>)</span><br><span class="line">print(a.index(<span class="string">'5'</span>))  <span class="comment"># 不指定开始和结束位置，只返回第一次出现的值的index（从左到右）</span></span><br><span class="line">print(a.index(<span class="string">'5'</span>, <span class="number">2</span>))  <span class="comment"># 指定开始位置（结束位置默认为最后一个元素）</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询指定元素在元组中出现的次数</p><ul><li><p>内建函数：<code>count()</code></p></li><li><p>格式：<code>tuple.count(value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">5</span>, <span class="string">'5'</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="string">'5'</span>)</span><br><span class="line">print(a.count(<span class="number">5</span>))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询元组中重复元素的位置</p><ul><li><p>系统枚举函数：<code>enumerate()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="number">5</span>, <span class="string">'5'</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="string">'5'</span>)</span><br><span class="line">b = []</span><br><span class="line">target= <span class="string">'5'</span></span><br><span class="line"><span class="keyword">for</span> index,value <span class="keyword">in</span> enumerate(a):</span><br><span class="line">    <span class="keyword">if</span> value == target:</span><br><span class="line">        b.append(index)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字典的创建"><a href="#字典的创建" class="headerlink" title="字典的创建"></a>字典的创建</h1><ol><li><p>特点：字典中只有键值对<code>key</code>和<code>value</code>，没有<code>index</code>；字典中的<code>key</code>是唯一的，但<code>value</code>是不唯一的（<code>value</code>可重复）</p></li><li><p>格式：<code>dict = {key1: value1, key2: value2}</code></p></li><li><p>说明：字典中的<strong>元素</strong>都是以<strong>键值对</strong>的形式存放，元素之间用逗号隔开</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'id'</span>: <span class="number">1001</span>, <span class="string">'name'</span>: <span class="string">'小明'</span>, <span class="string">'age'</span>: <span class="number">88</span>&#125;</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li><li><p>复杂字典的创建</p><ul><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   注意：list可以转换成dict，前提是：list中的元素必须成对出现（tuple中只能包含两个元素）</span></span><br><span class="line"><span class="comment">#   list中包含tuple</span></span><br><span class="line">c = dict([(<span class="string">'name'</span>, <span class="string">'小明'</span>), (<span class="string">'age'</span>, <span class="number">4</span>), (<span class="number">5</span>, <span class="number">6</span>)])</span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#   tuple中的元素必须承兑出现（list中只能包含两个元素）</span></span><br><span class="line">d = dict(([<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字典添加元素"><a href="#字典添加元素" class="headerlink" title="字典添加元素"></a>字典添加元素</h1><ol><li><p>格式：<code>dict[key] = value</code></p></li><li><p>注意事项：若新添加的<code>key</code>在字典中存在，则会覆盖原来的<code>key</code>的<code>value</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'id'</span>: <span class="number">1001</span>, <span class="string">'name'</span>: <span class="string">'小明'</span>, <span class="string">'age'</span>: <span class="number">88</span>&#125;</span><br><span class="line">a[<span class="string">'id'</span>] = <span class="number">1002</span></span><br><span class="line">a[pid] = <span class="number">88</span></span><br><span class="line">a[<span class="string">'sex'</span>] = <span class="string">'男'</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li><li><p>字典添加相同的值</p><ul><li><p>内建函数：<code>fromkeys()</code></p></li><li><p>格式：<code>dict.fromkeys(iterable, default)</code>  (<code>iterable</code>：可迭代)</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;&#125;  <span class="comment"># 若字典 a 中存在数据，则会被覆盖</span></span><br><span class="line">b = <span class="string">'abcdefg'</span>  <span class="comment"># b 的值必须是可迭代的</span></span><br><span class="line">c = a.fromkeys(b)  <span class="comment"># 不添加默认值，默认value为None</span></span><br><span class="line">print(c)</span><br><span class="line">c = a.fromkeys(b, <span class="number">66</span>)  <span class="comment"># 添加默认值，此字典中的所有value都为66</span></span><br><span class="line">print(c)</span><br><span class="line"></span><br><span class="line">d = dict.fromkeys(b, <span class="number">88</span>)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字典删除元素"><a href="#字典删除元素" class="headerlink" title="字典删除元素"></a>字典删除元素</h1><ol><li><p>删除指定元素：</p><ul><li><p>关键词格式：<code>del dict[key]</code></p></li><li><p>内建函数格式：<code>dict.pop(key, default)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>: <span class="number">100</span>, <span class="string">'李四'</span>: <span class="number">90</span>, <span class="string">'王五'</span>: <span class="number">80</span>, <span class="string">'赵六'</span>: <span class="number">59</span>&#125;</span><br><span class="line">b = a.pop(<span class="string">'李四5'</span>, <span class="string">'删除失败！key不存在！'</span>)</span><br><span class="line">print(a, b)</span><br><span class="line">b = a.pop(<span class="string">'李四'</span>, <span class="string">'删除失败！key不存在！'</span>)</span><br><span class="line">print(a, b)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>只删除最后一个元素：</p><ul><li><p>内建函数格式：<code>dict.popitem()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>: <span class="number">100</span>, <span class="string">'李四'</span>: <span class="number">90</span>, <span class="string">'王五'</span>: <span class="number">80</span>, <span class="string">'赵六'</span>: <span class="number">59</span>&#125;</span><br><span class="line">a.popitem()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>清空字典中的元素</p><ul><li><p>内建函数格式：<code>dict.clear()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>: <span class="number">100</span>, <span class="string">'李四'</span>: <span class="number">90</span>, <span class="string">'王五'</span>: <span class="number">80</span>, <span class="string">'赵六'</span>: <span class="number">59</span>&#125;</span><br><span class="line">a.clear()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字典修改元素"><a href="#字典修改元素" class="headerlink" title="字典修改元素"></a>字典修改元素</h1><ol><li><p>修改指定的元素</p><ul><li><p>格式：<code>dict[key] = value</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dict01 = &#123;<span class="string">'id'</span>: <span class="number">1001</span>, <span class="string">'name'</span>: <span class="string">'张三'</span>,<span class="string">'age'</span>: <span class="number">66</span>&#125;</span><br><span class="line">dict01[<span class="string">'age'</span>] = <span class="number">88</span></span><br><span class="line">print(dict01)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>合并两个字典</p><ul><li><p>内建函数：<code>update()</code></p></li><li><p>格式：<code>dict.update(dict)</code> （参数只有一个）</p></li><li><p>注意事项：若两个字典存在相同的<code>key</code>，则原有的<code>key</code>的<code>value</code>会被新添加的<code>key</code>的<code>value</code>覆盖；不能用<code>{} + {}</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'name'</span>:<span class="string">'张三'</span>,<span class="string">'age'</span>:<span class="number">88</span>,<span class="string">'gender'</span>:<span class="string">'男'</span>&#125;</span><br><span class="line">b = &#123;<span class="string">'name'</span>:<span class="string">'李四'</span>,<span class="string">'gender'</span>:<span class="string">'女'</span>&#125;</span><br><span class="line">c = &#123;<span class="string">'hobby'</span>:<span class="string">'玩游戏'</span>&#125;</span><br><span class="line"></span><br><span class="line">a.update(b)</span><br><span class="line">a.update(c)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字典查询元素"><a href="#字典查询元素" class="headerlink" title="字典查询元素"></a>字典查询元素</h1><ol><li><p>查询指定元素：</p><ul><li><p>普通格式：<code>dict[key]</code> （若<code>key</code>不存在，则报错）</p></li><li><p>内建函数格式：<code>dict.get(key, default)</code> （若key不存在，输出默认值None，默认值可自定义）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>:<span class="number">100</span>,<span class="string">'李四'</span>:<span class="number">90</span>,<span class="string">'王五'</span>:<span class="number">80</span>,<span class="string">'赵六'</span>:<span class="number">59</span>&#125;</span><br><span class="line">print(a[<span class="string">'李四'</span>])</span><br><span class="line">print(a.get(<span class="string">'李四5'</span>, <span class="string">'key不存在！'</span>))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询所有键值对</p><ul><li><p>内建函数：<code>items()</code></p></li><li><p>格式：<code>dict.items()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>:<span class="number">100</span>,<span class="string">'李四'</span>:<span class="number">90</span>,<span class="string">'王五'</span>:<span class="number">80</span>,<span class="string">'赵六'</span>:<span class="number">59</span>&#125;</span><br><span class="line">print(a.items())  <span class="comment"># 以列表的形式输出</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询所有键</p><ul><li><p>内建函数：<code>keys()</code></p></li><li><p>格式：<code>dict.keys()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>:<span class="number">100</span>,<span class="string">'李四'</span>:<span class="number">90</span>,<span class="string">'王五'</span>:<span class="number">80</span>,<span class="string">'赵六'</span>:<span class="number">59</span>&#125;</span><br><span class="line">print(a.keys())</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询所有值</p><ul><li><p>内建函数：<code>values()</code></p></li><li><p>格式：<code>dict.values()</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">'张三'</span>:<span class="number">100</span>,<span class="string">'李四'</span>:<span class="number">90</span>,<span class="string">'王五'</span>:<span class="number">80</span>,<span class="string">'赵六'</span>:<span class="number">59</span>&#125;</span><br><span class="line">print(a.values())</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3条件判断和循环语句的用法(五)</title>
      <link href="/posts/e04909ba/"/>
      <url>/posts/e04909ba/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><ol><li><p>pass()函数</p><ul><li>作用：用做<strong>占位符</strong>，保持程序结构的完整性，不做任何事情</li></ul></li><li><p>普通格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 表达式<span class="number">1</span>:  <span class="comment"># 若表达式1成立，则进入此缩进的内容</span></span><br><span class="line"><span class="keyword">pass</span>  <span class="comment"># pass代表 “占位符”</span></span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">2</span>:  <span class="comment"># 若表达式2成立，则进入此缩进的内容</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># 若以上两个或多个表达式都不成立，则进入此缩进的内容</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>嵌套格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入一个数，判断是否是2和3的倍数</span></span><br><span class="line">user_input = int(input(<span class="string">'请输入一个整数：'</span>))</span><br><span class="line"><span class="keyword">if</span> user_input %<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> user_input %<span class="number">3</span> ==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'既是2的倍数，又是3的倍数！'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'只是2的倍数！'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> user_input %<span class="number">3</span> ==<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'只能是3的倍数'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'既不是2的倍数，也不是3的倍数！'</span>)</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>注意事项：</p><ul><li>每个判断语句末尾都有<code>:</code>（分号）</li><li>使用<strong>缩进</strong>来划分<strong>语句块</strong>，相同缩进数的语句在一起，就组成了一个语句块</li><li><code>elif</code>条件，可以写多个，但是<code>if</code>和<code>else</code>只能写一次（若条件只有两个，则<code>elif</code>就不用了，只写<code>if...else...</code>即可）</li><li>条件语句中，经常和<strong>关系运算符</strong>联用</li></ul></li></ol><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><ol><li><p>range()函数</p><ul><li><p>作用：生成数列</p></li><li><p>用法：</p><ol><li><code>range()</code>中，可以有一个、两个、三个参数，默认递增</li><li><code>range(m)</code>当有一个参数时，会执行<code>[0,m)</code>，即 0 ~ m-1范围，默认递增数为1</li><li><code>range(n,m)</code>当有两个参数时，会执行<code>[n,m)</code>,即n ~ m-1范围，默认递增数为1</li><li><code>range(n,m,p)</code>当有三个参数时，会执行<code>[n,m)</code>，即n ~ m-1范围，但是递增数为<code>p</code></li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 递增</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>):  <span class="comment"># 遍历1~10的数字，每隔两个数，取一个数（即递增数为2）</span></span><br><span class="line">    print(i)</span><br><span class="line"><span class="comment"># 递减</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>, <span class="number">-10</span>, <span class="number">-2</span>):  <span class="comment"># 遍历10~-10的数字，每隔两个数，取一个数（即递减数为2）</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>while循环语句：</p><ul><li><p>普通格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 表达式：</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># else语句可省略</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>其它格式（仅限于，循环体中只有一个语句）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (表达式): 结果  <span class="comment"># 无限循环语句</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 九九乘法标</span></span><br><span class="line"><span class="comment"># 层：layer    列：column</span></span><br><span class="line">layer = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> layer &lt;= <span class="number">9</span>:</span><br><span class="line">    column = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> column &lt;= layer:</span><br><span class="line">        print(<span class="string">f'<span class="subst">&#123;column&#125;</span>x<span class="subst">&#123;layer&#125;</span>=<span class="subst">&#123;column * layer&#125;</span>'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">        column += <span class="number">1</span></span><br><span class="line">    layer += <span class="number">1</span></span><br><span class="line">    print()  <span class="comment"># 因为end='\t'，所以要末尾换行</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>for循环语句</p><ul><li><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> iterable:  <span class="comment"># 遍历一个可迭代的序列</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:  <span class="comment"># 循环结束后要执行的语句</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 九九乘法表</span></span><br><span class="line"><span class="keyword">for</span> layer <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> column &lt;= layer:</span><br><span class="line">            print(<span class="string">f'<span class="subst">&#123;column&#125;</span>x<span class="subst">&#123;layer&#125;</span>=<span class="subst">&#123;layer*column&#125;</span>'</span>, end=<span class="string">'\t'</span>)</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure></li></ul></li><li><p>break语句</p><ul><li><p>作用：跳出 <code>for</code> 和 <code>while</code> 的循环体。如果你从 <code>for</code> 或 <code>while</code> 循环中终止，任何对应的循环 <code>else</code> 块将不执行</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>continue语句</p><ul><li><p>作用：跳过当前循环块中的剩余语句，然后继续进行下一轮循环</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3列表与冒泡排序的用法(六)</title>
      <link href="/posts/1ffbcd3f/"/>
      <url>/posts/1ffbcd3f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="列表的创建"><a href="#列表的创建" class="headerlink" title="列表的创建"></a>列表的创建</h1><ol><li>创建：<code>list01 = [1, &#39;abc&#39;, 8]</code></li><li>列表函数<code>list()</code>：<code>list01 = list(&#39;123abc&#39;)</code> （将str型转换为list型）</li></ol><h1 id="列表添加元素"><a href="#列表添加元素" class="headerlink" title="列表添加元素"></a>列表添加元素</h1><ol><li><p>指定位置插入元素</p><ul><li><p>内建函数：<code>insert()</code></p></li><li><p>格式：<code>list.insert(index, value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list09 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">list09.insert(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 在下标为 0 的位置插入int型元素 0</span></span><br><span class="line">list09.insert(<span class="number">2</span>, <span class="string">'a'</span>)  <span class="comment"># 在2的位置插入字符串元素 a</span></span><br><span class="line">print(list09)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加单个元素（<strong>默认添加到末尾</strong>）</p><ul><li><p>内建函数：<code>append()</code></p></li><li><p>格式：<code>list.append(value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list66 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">list66.append(<span class="string">'5'</span>)  <span class="comment"># 在列表末尾添加str型元素 '5'</span></span><br><span class="line">print(list66)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加多个元素</p><ul><li><p>方式一</p><ul><li><p>内建函数：<code>extend()</code></p></li><li><p>格式：<code>list.extend(value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list66 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">list8 = [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">list66.extend(list8)</span><br><span class="line">print(list66)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>方式二</p><ul><li><p>拼接符：<code>+</code></p></li><li><p>格式：<code>[value] + [value]</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list6 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] + [<span class="number">7</span>, <span class="string">'8'</span>, <span class="number">9</span>]  <span class="comment"># 直接用拼接符</span></span><br><span class="line">list7 = list(<span class="string">"abcd"</span>)</span><br><span class="line">print(list6 + list7)  <span class="comment"># 直接输出两个列表中的所有数据</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>列表的重复使用</p><ul><li><p>符号：<code>*</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list55 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] + [<span class="number">7</span>, <span class="string">'8'</span>, <span class="number">9</span>] * <span class="number">3</span> <span class="comment"># 只重复 3 遍[7, '8', 9]，混合运算</span></span><br><span class="line">print(list55)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="列表删除元素"><a href="#列表删除元素" class="headerlink" title="列表删除元素"></a>列表删除元素</h1><ol><li><p>删除指定位置的元素</p><ul><li><p>关键词：<code>del</code></p></li><li><p>关键词格式：<code>del list[index]</code></p></li><li><p>内建函数：<code>pop()</code></p></li><li><p>内建函数格式：<code>list.pop(index)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关键词 del</span></span><br><span class="line">list0 = [<span class="string">'hp'</span>,<span class="string">'dell'</span>,<span class="string">'lenovo'</span>,<span class="string">'thinkpad'</span>,<span class="string">'华为6'</span>,<span class="string">'神州'</span>]</span><br><span class="line">print(<span class="string">'原始数据：'</span>,list0)</span><br><span class="line"><span class="keyword">del</span> list0[<span class="number">1</span>]       <span class="comment"># 删除下标为 1 的元素：第二个元素 'dell'</span></span><br><span class="line">print(<span class="string">'删除后的列表：'</span>,list0)       <span class="comment">#输出列表中剩余的元素</span></span><br><span class="line"><span class="comment"># 内建函数 pop()</span></span><br><span class="line">list02 = [<span class="string">'hp'</span>,<span class="string">'dell'</span>,<span class="string">'lenovo'</span>,<span class="string">'thinkpad'</span>,<span class="string">'华为6'</span>,<span class="string">'神州'</span>]</span><br><span class="line">list02.pop(<span class="number">1</span>)</span><br><span class="line">print(list02)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除指定的元素</p><ul><li><p>内建函数：<code>remove()</code> （删除的元素必须在list中，否则报错）</p></li><li><p>格式：<code>list.remove(value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list0 = [<span class="string">'hp'</span>,<span class="string">'dell'</span>,<span class="string">'lenovo'</span>,<span class="string">'thinkpad'</span>,<span class="string">'华为6'</span>,<span class="string">'神州'</span>]</span><br><span class="line">list0.remove(<span class="string">'华为6'</span>)  <span class="comment"># 必须输入存在的元素，否则报错</span></span><br><span class="line">print(list0)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>弹出末尾的元素</p><ul><li><p>内建函数：<code>pop()</code></p></li><li><p>格式：<code>list.pop()</code> 或 <code>list.pop(index)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">l10 = [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">2</span>]</span><br><span class="line">l10.pop()  <span class="comment"># 不指定位置，默认删除末尾的元素</span></span><br><span class="line">l10.pop(<span class="number">2</span>)  <span class="comment"># 指定删除 2 位置的元素</span></span><br><span class="line">print(l10)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>清空整个列表</p><ul><li><p>内建函数：<code>clear()</code></p></li><li><p>格式：list.clear()</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list88 = [<span class="string">'hp'</span>,<span class="string">'dell'</span>,<span class="string">'lenovo'</span>,<span class="string">'thinkpad'</span>,<span class="string">'华为6'</span>,<span class="string">'神州'</span>]</span><br><span class="line">list88.clear()</span><br><span class="line">print(list88)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="列表修改元素"><a href="#列表修改元素" class="headerlink" title="列表修改元素"></a>列表修改元素</h1><ol><li><p>替换列表中的元素：</p><ul><li><p>格式：<code>list[index] = value</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brands = [<span class="string">'hp'</span>, <span class="string">'dell'</span>, <span class="string">'thinkpad'</span>, <span class="string">'华为'</span>, <span class="string">'lenovo'</span>, <span class="string">'神州'</span>]</span><br><span class="line">print(<span class="string">'原始数据：&#123;&#125;'</span>.format(brands))</span><br><span class="line">brands[<span class="number">3</span>] = <span class="string">'HUAWEI'</span></span><br><span class="line">print(<span class="string">'修改后的列表'</span>, brands)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>列表的排序：</p><ul><li><p>内建函数：<code>sort()</code>和<code>sorted()</code></p></li><li><p>格式：<code>list.sort(reverse=True)</code> 和<code>sorted(list, reverse=False)</code></p></li><li><p>注意事项：</p><ol><li><code>sort()</code>函数：默认<strong>升序</strong>排列<code>reverse=False</code>，可省略不写；但是<strong>降序</strong>排列时，必须加<code>reverse=True</code></li><li><code>sorted()</code>函数：必须有<strong>变量</strong>接收；默认<strong>升序</strong>排列<code>reverse=False</code>，可省略不写；但是<strong>降序</strong>排列时，必须加<code>reverse=True</code></li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sort()函数</span></span><br><span class="line">list5 = [<span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">3</span>]</span><br><span class="line">list5.sort()  <span class="comment"># 升序排列</span></span><br><span class="line">print(list5)</span><br><span class="line">list5.sort(reverse=<span class="literal">True</span>)  <span class="comment"># 降序排列</span></span><br><span class="line">print(list5)</span><br><span class="line"><span class="comment"># sorted()函数</span></span><br><span class="line">list6 = [<span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">3</span>]</span><br><span class="line">list7 = sorted(list6)  <span class="comment"># 升序排列</span></span><br><span class="line">print(list7)</span><br><span class="line">list8 = sorted(list6, reverse=<span class="literal">True</span>)  <span class="comment"># 降序排列</span></span><br><span class="line">print(list8)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>列表的反转：</p><ul><li><p>内建函数：<code>reverse()</code></p></li><li><p>格式：<code>list.reverse()</code></p></li><li><p>注意事项：<code>reverse()</code>函数，只是将列表从右往左依次输出，不进行排序</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list58 = [<span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">3</span>]</span><br><span class="line">list58.reverse()</span><br><span class="line">print(list58)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="列表查询元素"><a href="#列表查询元素" class="headerlink" title="列表查询元素"></a>列表查询元素</h1><ol><li><p>查询指定元素</p><ul><li><p>格式：<code>list[index]</code>（注意：<code>index</code>支持负数，<code>list[-1]</code> 表示列表中的<strong>最后</strong>一个元素）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list0 = list(<span class="string">'eufbvycbwiadf'</span>)</span><br><span class="line">value0 = list0[<span class="number">2</span>]  <span class="comment"># 先指定某个元素的位置，并赋值</span></span><br><span class="line">print(<span class="string">'输出元素：'</span>, value0)  <span class="comment"># 输出变量，即输出某个元素</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>查询指定元素的索引</p><ul><li><p>内建函数：<code>index()</code></p></li><li><p>格式：<code>list.index(value)</code> （注意：输入的<code>value</code>必须是<code>list</code>中的元素，若不存在，则报错）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list3 = [<span class="number">66</span>, <span class="string">'88'</span>, <span class="number">99</span>]</span><br><span class="line">print(<span class="string">'元素的位置为：'</span>, list3.index(<span class="string">'88'</span>))  <span class="comment"># 注意元素的类型，'88'为str型</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>统计列表中的指定元素个数</p><ul><li><p>内建函数：<code>count()</code></p></li><li><p>格式：<code>list.count(value)</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list3 = [<span class="number">66</span>, <span class="string">'88'</span>, <span class="number">99</span>, <span class="number">66</span>]</span><br><span class="line">print(list3.count(<span class="number">66</span>))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>列表元素的截取</p><ul><li><p>符号：<code>[::]</code></p></li><li><p>格式：<code>list[start: end: step]</code> （start：开始的位置；end：结束的位置；step：步长）</p></li><li><p>区间：<code>[ )</code> （包含起始位置，不包含结束位置）</p></li><li><p>注意事项：<code>list[::2]</code> 参数 2 表示，每次取第二个元素（每隔1个元素取值），<code>list[::3]</code>表示，每次取第三个元素（每隔2个元素取值），负数表示反向取值（从右到左），第三个参数也叫步长</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list999 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">print(list999[<span class="number">6</span>])  <span class="comment"># 截取一个值</span></span><br><span class="line">print(list999[<span class="number">2</span>:<span class="number">6</span>])  <span class="comment"># 截取一个区间（范围），step=1（可省略）</span></span><br><span class="line">print(list999[<span class="number">2</span>:<span class="number">8</span>:<span class="number">3</span>])  <span class="comment"># 截取一个区间，step=3（步长为3）</span></span><br><span class="line">print(list999[<span class="number">7</span>:<span class="number">1</span>:<span class="number">-2</span>])  <span class="comment"># 反向截取一个区间，step=2</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><ul><li>原理：将列表中的元素，两个两个进行比较，若，前一个元素比后一个元素大，那么，这两个元素就互相调换位置，进行升序排列，反之亦然</li></ul><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><ul><li><p>原理：一对多两两进行比较（一边倒）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   1   2  # 第一个元素和第二个元素比较</span></span><br><span class="line"><span class="comment">#   1   3  # 第一个元素和第三个元素比较</span></span><br><span class="line"><span class="comment">#   1   4</span></span><br><span class="line"><span class="comment">#   2   3</span></span><br><span class="line"><span class="comment">#   2   4</span></span><br><span class="line"><span class="comment">#   3   4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个乱序列表</span></span><br><span class="line">list01 = [<span class="number">9</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历列表中的所有元素</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list01)):</span><br><span class="line">    <span class="comment"># 从第二个元素开始，遍历列表中剩余的元素</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, len(list01)):</span><br><span class="line">        <span class="comment"># 判断前一个元素和后一个元素的大小</span></span><br><span class="line">        <span class="keyword">if</span> list01[i] &gt; list01[j]:  <span class="comment"># 升序排列</span></span><br><span class="line">            <span class="comment"># 若前一个元素比后一个元素大，那么这两个元素就相互调换位置</span></span><br><span class="line">            list01[i], list01[j] = list01[j], list01[i]</span><br><span class="line">            <span class="comment"># 输出每次调换位置后的列表</span></span><br><span class="line">            print(<span class="string">'---&gt;'</span>, list01)</span><br><span class="line"><span class="comment"># 输出最终的列表</span></span><br><span class="line">print(list01)</span><br></pre></td></tr></table></figure></li></ul><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><ul><li><p>原理：相邻两个依次进行比较（循环）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 12  # 第一个元素和第二个元素比较</span></span><br><span class="line"><span class="comment"># 23  # 第二个元素和第三个元素比较</span></span><br><span class="line"><span class="comment"># 34</span></span><br><span class="line"><span class="comment"># 45</span></span><br><span class="line"></span><br><span class="line">list01 = [<span class="number">9</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># list01 = [4, 1, 6, 2]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list01)):  <span class="comment"># 循环多少次</span></span><br><span class="line">    <span class="comment"># 比较两个相邻的的元素，数值大的放右边</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(list01) - <span class="number">1</span> - i):  <span class="comment"># 比较循环</span></span><br><span class="line">        <span class="keyword">if</span> list01[j] &gt; list01[j + <span class="number">1</span>]:</span><br><span class="line">            list01[j], list01[j + <span class="number">1</span>] = list01[j + <span class="number">1</span>], list01[j]</span><br><span class="line">            print(<span class="string">'---&gt;'</span>, list01)</span><br><span class="line"></span><br><span class="line">print(list01)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3进制转换与运算符的用法(四)</title>
      <link href="/posts/e6e25ec7/"/>
      <url>/posts/e6e25ec7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><ol><li><p>计算机单位：</p><ul><li>1bit = 一个二进制位（1帧）</li><li>1byte = 8bit（1个字节，构成8个比特）</li><li>1kb = 1024byte</li><li>1MB = 1024kb</li><li>1GB = 1024M</li><li>1T = 1024G</li></ul></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   二进制 0 1 ---&gt; 十进制 0-9</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    1.在python中，二进制 开头是 0b </span></span><br><span class="line"><span class="string">    2.正数 10 转二进制：</span></span><br><span class="line"><span class="string">        二进制数：1  0   1   0   ---&gt;   十进制数：10</span></span><br><span class="line"><span class="string">        从右往左依次计算：0*2^0 + 1*2^1 + 0*2^2 + 1*2^3 = 10</span></span><br><span class="line"><span class="string">    3.负数 -8 转二进制：</span></span><br><span class="line"><span class="string">        二进制数：1 0 0 0   ---&gt;   十进制数：10</span></span><br><span class="line"><span class="string">        1）先求 8 的二进制位：1 0 0 0</span></span><br><span class="line"><span class="string">        一个字节占位 8 个二进制数</span></span><br><span class="line"><span class="string">        2）自动补齐：   0000  1 0 0 0</span></span><br><span class="line"><span class="string">        3）取反（反码）：1111  0 1 1 1</span></span><br><span class="line"><span class="string">        4）最后一位数加 1 若最后一位数是 1 ，则进一位，原位置变为 0</span></span><br><span class="line"><span class="string">        0000    1 0 0 0</span></span><br><span class="line"><span class="string">        1111    0 1 1 1</span></span><br><span class="line"><span class="string">        ---------------</span></span><br><span class="line"><span class="string">        1111    1 0 0 0</span></span><br><span class="line"><span class="string">    4.bin() 是二进制转换函数   十进制 ---&gt; 二进制</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">num_0 = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">print(bin(num_0))   <span class="comment">#bin() 是二进制转换函数   十进制 ---&gt; 二进制</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   八进制 ---&gt;十进制</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    1.八进制数标识：开始为：0o （零欧）</span></span><br><span class="line"><span class="string">    2.八进制数值范围：0-7   （不包括8,8以内的数）</span></span><br><span class="line"><span class="string">    3.八进制0o6430 ---&gt; 十进制3352，输出十进制用 int()函数</span></span><br><span class="line"><span class="string">    4.八进制：6 4 3 0</span></span><br><span class="line"><span class="string">      十进制：从右往左依次计算：0*8^0 + 3*8^1 + 4*8^2 + 6*8^3 = 3352                    </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">num_1 = <span class="number">0o6430</span></span><br><span class="line"></span><br><span class="line">print(int(num_1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#   八进制 ---&gt;二进制</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    八进制 ---&gt; 二进制:</span></span><br><span class="line"><span class="string">    1.将八进制数：6430 分开，将单独的每一个数作为一个 十进制数</span></span><br><span class="line"><span class="string">    2.转换过程：         6    4    3    0</span></span><br><span class="line"><span class="string">        二进制：        110  100  011  000</span></span><br><span class="line"><span class="string">    3.八进制：6430 ---&gt; 二进制：110100011000</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#   十六进制</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    1.十六进制开头标识符：0x  （零 埃克斯）</span></span><br><span class="line"><span class="string">    2.十六进制：0x911 ---&gt; 十进制：2321</span></span><br><span class="line"><span class="string">        转换过程：9  1   1---&gt; 1*16^0 + 1*16^1 + 9*16^2=2321</span></span><br><span class="line"><span class="string">    3.十六进制数值范围：0、1、2、3、4、5、6、7、8、9、a、b、c、d、e、f            </span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">num_2 = <span class="number">0x9ab16</span></span><br><span class="line">print(<span class="string">'十六进制--&gt;十进制'</span>,int(num_2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 十六进制 ---&gt; 二进制</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    1.十六进制：   0x   9   a   b   1   6</span></span><br><span class="line"><span class="string">    2.将十六进制数的每一个数单独出来 求 二进制</span></span><br><span class="line"><span class="string">    3.十六进制中：a=10、b=11、c=12、d=13、e=14 、f=15（单个字母的十进制数）</span></span><br><span class="line"><span class="string">    4.一一对应： 9     a     b     1     6</span></span><br><span class="line"><span class="string">    5. 二进制：1001  1010  1011  0001  0110</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">A：1010、B：1011、C：1100、D：1101、E：1110、F：1111（单个字母的二进制数，不区分大小写）</span></span><br><span class="line"><span class="string">进制转换练习结果：</span></span><br><span class="line"><span class="string">                八进制数：0o52510    三个一位数字</span></span><br><span class="line"><span class="string">                            5    2    5    1    0</span></span><br><span class="line"><span class="string">                二进制：    101  010  101  001  000     </span></span><br><span class="line"><span class="string">                </span></span><br><span class="line"><span class="string">                十六进制数：0xF0610C  四个一位数字</span></span><br><span class="line"><span class="string">                             F     0     6    1    0    C</span></span><br><span class="line"><span class="string">                二进制：    1111  0000  0110 0001 0000 1100  </span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line">print(<span class="string">'--&gt;进制转换到此为止！\n'</span>, <span class="string">'都懂了吧！\n'</span>, <span class="string">'不懂得直接乱棍打死！'</span>, sep=<span class="string">'--&gt;'</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><ol><li><p>符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;+&#x3D;-&#x3D;*&#x3D;&#x2F;&#x3D;</span><br><span class="line">a+&#x3D;b a&#x3D;a+b </span><br><span class="line">a-&#x3D;b a&#x3D;a-b </span><br><span class="line">a*&#x3D;b a&#x3D;a*b </span><br><span class="line">a&#x2F;&#x3D;b a&#x3D;a&#x2F;b</span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当变量的值相同时，存储的位置相同(id相同)</span></span><br><span class="line">name = <span class="string">'admin'</span></span><br><span class="line">name1 = name</span><br><span class="line">name2 = <span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># id()函数：调出变量的存储位置</span></span><br><span class="line">print(id(name), name)</span><br><span class="line">print(id(name1), name1)</span><br><span class="line">print(id(name2), name2)</span><br><span class="line"></span><br><span class="line">print(name == name1)  <span class="comment"># == 关系运算符中的‘等于’，返回bool值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多个变量赋值</span></span><br><span class="line"><span class="comment"># 先计算右边的表达式，再一一对应赋值给左边</span></span><br><span class="line">a, b = <span class="number">6</span>, <span class="number">8</span></span><br><span class="line">a, b = b, a + b  <span class="comment"># 等价于 a = b 和 b = a + b</span></span><br><span class="line">print(a, b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展后的赋值运算符   +=  -=  *=  /=  ...</span></span><br><span class="line">num = <span class="number">5</span></span><br><span class="line">num += <span class="number">8</span>  <span class="comment"># num = num + 8 此时的 + 代表operator的+</span></span><br><span class="line">print(num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 特别注意：连接字符串的 +</span></span><br><span class="line">a = <span class="string">'abc'</span></span><br><span class="line">a += <span class="string">'qqq'</span>  <span class="comment"># 等价于：a = a + 'qqq' 此时‘+’号就是“连接符”；包含两个结果：1.连接str 2.连接后的结果</span></span><br><span class="line">print(a)</span><br><span class="line"></span><br><span class="line">num_a = <span class="number">6</span></span><br><span class="line">num_a *= <span class="number">8</span></span><br><span class="line">print(num_a)</span><br><span class="line">num_a /= <span class="number">12</span></span><br><span class="line">print(num_a)</span><br></pre></td></tr></table></figure></li></ol><h1 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h1><ol><li><p>符号：<code>+ - * /</code>加减乘除     <code>//</code>取整（整除）       <code>%</code>取余       <code>**</code>求幂（次方）</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line">b = <span class="number">111</span></span><br><span class="line"><span class="comment">#   加、减、乘、除运算符</span></span><br><span class="line">print(a + b)</span><br><span class="line">print(a - b)</span><br><span class="line">print(a * b)</span><br><span class="line">print(a / b)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------'</span>)</span><br><span class="line"><span class="comment">#   取整运算符   //</span></span><br><span class="line">print(<span class="number">15</span> // <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------'</span>)</span><br><span class="line"><span class="comment">#   取余运算符   %</span></span><br><span class="line">print(<span class="number">5</span> % <span class="number">8</span>)</span><br><span class="line">print(<span class="number">8</span> % <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'------------------------------'</span>)</span><br><span class="line"><span class="comment">#   求幂运算符   **</span></span><br><span class="line">print(<span class="number">2</span> * <span class="number">2</span> * <span class="number">2</span>)</span><br><span class="line"><span class="comment">#   2的3次幂</span></span><br><span class="line">print(<span class="number">2</span> ** <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><ol><li><p>符号：<code>&gt;</code>   <code>&lt;</code>   <code>==</code>等于   <code>&gt;=</code>    <code>&lt;=</code>    <code>!=</code> 不等于   </p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字母和符号也是可以比较大小的（根据ascii码，ascii码数值越大，关系越后；ascii值大的越小）</span></span><br><span class="line"><span class="comment"># 强制转换输入的内容，因为input()默认输入的内容为str型</span></span><br><span class="line">num_0 = int(input(<span class="string">'请输入第一个数：'</span>))</span><br><span class="line">num_1 = int(input(<span class="string">'请输入第二个数：'</span>))</span><br><span class="line">result = num_0 &gt; num_1  <span class="comment"># 结果：False,True</span></span><br><span class="line">print(<span class="string">'两个数相等：'</span>, result)</span><br><span class="line"></span><br><span class="line">username = input(<span class="string">'请输入密码：'</span>) <span class="comment"># 密码：admin888</span></span><br><span class="line">uname = input(<span class="string">'请再次输入密码：'</span>)</span><br><span class="line">result0 = username == uname</span><br><span class="line">print(<span class="string">'两次输入的密码相等：'</span>, result0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># = 和 == 的用法</span></span><br><span class="line">password = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line">u_password = <span class="string">'password'</span></span><br><span class="line">result = password == u_password</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># != 的用法</span></span><br><span class="line">name01 = <span class="string">'jack'</span></span><br><span class="line">name02 = <span class="string">'lucy'</span></span><br><span class="line">name03 = <span class="string">'jack'</span></span><br><span class="line">print(name01 != name02)</span><br><span class="line">print(name01 != name03)</span><br></pre></td></tr></table></figure></li></ol><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><ol><li><p>符号：与<code>and</code>   或<code>or</code>   非<code>not</code>       结果：<code>bool</code>判断</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msg_1 = <span class="literal">True</span></span><br><span class="line">msg_2 = <span class="literal">False</span></span><br><span class="line">msg_3 = <span class="literal">True</span></span><br><span class="line">msg_4 = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">print(msg_1 <span class="keyword">and</span> msg_2) <span class="comment"># and 有一个为假，都为假</span></span><br><span class="line">print(msg_1 <span class="keyword">and</span> msg_3) <span class="comment"># and 同时为真，才为真</span></span><br><span class="line">print(msg_1 <span class="keyword">or</span> msg_2) <span class="comment"># or 有一个为真，都为真</span></span><br><span class="line">print(msg_1 <span class="keyword">and</span> <span class="keyword">not</span> msg_3) <span class="comment"># not 将结果反过来</span></span><br><span class="line">print(<span class="keyword">not</span> msg_2 <span class="keyword">and</span> <span class="keyword">not</span> msg_4)</span><br></pre></td></tr></table></figure></li><li><p>练习：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数字计算游戏判断真假</span></span><br><span class="line">num_1 = <span class="number">8</span></span><br><span class="line">num_2 = <span class="number">5</span></span><br><span class="line">num_3 = <span class="number">3</span></span><br><span class="line">num_4 = <span class="number">2</span></span><br><span class="line">num_5 = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">result_0 = <span class="keyword">not</span> num_2 + num_3 != num_1 <span class="keyword">and</span> num_1 &gt; num_2</span><br><span class="line">print(<span class="string">'数字运算结果判断：'</span>, result_0)</span><br><span class="line"></span><br><span class="line">result_00 = num_1 &gt;= num_4 * num_5</span><br><span class="line">print(<span class="string">'*判断：'</span>, result_00)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'and用法：'</span>, num_1 &lt; num_2)</span><br><span class="line">print(<span class="string">'and用法：'</span>, num_1 &gt;= num_2 + num_3 <span class="keyword">or</span> num_1 &lt; num_2)</span><br><span class="line">print(<span class="string">'and用法：'</span>, num_1 &gt;= num_2 + num_3 <span class="keyword">and</span> num_3 == num_1 - num_2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登陆窗口的 “账户密码验证” 规则设定</span></span><br><span class="line">username_a = <span class="string">'username'</span></span><br><span class="line">password_a = <span class="string">'password'</span></span><br><span class="line"></span><br><span class="line">input_user = input(<span class="string">'请输入用户名：'</span>)</span><br><span class="line">input_pass = input(<span class="string">'请输入密码：'</span>)</span><br><span class="line"></span><br><span class="line">result_1 = <span class="keyword">not</span> username_a == input_user <span class="keyword">and</span> password_a == input_pass</span><br><span class="line">print(<span class="string">'登陆：'</span>, result_1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登陆窗口的 “用户名输入” 规则设定</span></span><br><span class="line">username_b = <span class="string">'admin'</span></span><br><span class="line">email_b = <span class="string">'666888@888.com'</span></span><br><span class="line">input_user_b = input(<span class="string">'请输入用户名：'</span>)</span><br><span class="line"></span><br><span class="line">input_result = username_b == input_user_b <span class="keyword">or</span> email_b == input_user_b</span><br><span class="line"></span><br><span class="line">print(<span class="string">'您输入的用户名：'</span>, input_result)</span><br></pre></td></tr></table></figure></li></ol><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><ol><li><p>符号：<code>&amp;</code>与    <code>|</code>或    <code>^</code>异或    <code>~</code>取反    <code>&lt;&lt;</code>左移    <code>&gt;&gt;</code>右移</p></li><li><p>过程：将十进制数转换为二进制数，再一一对应，进行运算</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 位运算符，只能进行int型运算，将int型，10进制转换为2进制再一一对应进行运算的</span></span><br><span class="line"><span class="comment"># 英文：position</span></span><br><span class="line"><span class="comment"># 二进制函数：bin()</span></span><br><span class="line">print(bin(<span class="number">11</span>))  <span class="comment"># 0b表示二进制</span></span><br><span class="line"><span class="comment"># &amp;与    |或    ^异或    ~取反    &lt;&lt;左移    &gt;&gt;右移</span></span><br><span class="line">a = <span class="number">11</span>  <span class="comment"># 1011</span></span><br><span class="line">b = <span class="number">2</span>  <span class="comment"># 0010</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;与运算符，在二进制数中，有一个为0则都为0</span></span><br><span class="line">print(a &amp; b)  <span class="comment"># 结果为0010，转换输出2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># |或运算符，在二进制数中，有一个为1，则为1，否则为0</span></span><br><span class="line">print(a | b)  <span class="comment"># 结果为1011，转换输出11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ^异或运算符，在二进制数中，相同为0，不同为1</span></span><br><span class="line">print(a ^ b)  <span class="comment"># 结果为1001，转换输出为9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ~取反运算符，例如：x = ~10   返回值为 -11</span></span><br><span class="line"><span class="comment"># 规律：正数取反，先 +1 再变符号；负数取反，先 -1 再变符号</span></span><br><span class="line">num_0 = ~ <span class="number">10</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    例如：x = ~10</span></span><br><span class="line"><span class="string">    电脑运算过程：</span></span><br><span class="line"><span class="string">    1.明确是对int型10进行取反 ~</span></span><br><span class="line"><span class="string">    2.十进制：10 --&gt; 二进制：0000 1010</span></span><br><span class="line"><span class="string">    3.对二进制：1010 取反 --&gt; 1111 0101</span></span><br><span class="line"><span class="string">    4.进行末尾减 1 --&gt; 1111 0100</span></span><br><span class="line"><span class="string">    5.对减 1 后的值进行取反 --&gt; 二进制：0000 1011--&gt;十进制：11</span></span><br><span class="line"><span class="string">    6.因为这是一个负数，所以结果为：-11</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(<span class="string">'~取反结果：'</span>, type(num_0), num_0)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;&lt;左移位运算符，</span></span><br><span class="line">x = <span class="number">11</span> &lt;&lt; <span class="number">2</span>  <span class="comment"># 在11的二进制尾部加上2个0，结果为101100转换十进制为44</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    11&lt;&lt;2 --&gt; 44</span></span><br><span class="line"><span class="string">    过程：11*2^2=44</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(type(x), x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &gt;&gt;右移位运算符，</span></span><br><span class="line"><span class="comment"># 88二进制为1011000</span></span><br><span class="line">y = <span class="number">88</span> &gt;&gt; <span class="number">2</span>  <span class="comment"># 在2的二进制数尾部去掉两个数，结果为10110，转换输出为22</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    88 &lt;&lt; 2 --&gt; 22</span></span><br><span class="line"><span class="string">    过程：88/2^2=22</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(type(y), y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对 &lt;&lt;  &gt;&gt;的变化规律总结</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    左移：m&lt;&lt;n     m*2的n次方</span></span><br><span class="line"><span class="string">    右移：m&gt;&gt;n     m//2的n次方    （//代表整除、取整）</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h1><ol><li><p>符号：<code>is</code>    <code>not is</code></p></li><li><p>作用：比较两个对象的存储单元，即计较id()是否相同</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line">age1 = <span class="number">18</span></span><br><span class="line"><span class="comment"># 输出变量的存储地址和变量，发现地址相同，因为值相同</span></span><br><span class="line">print(id(age), age)</span><br><span class="line">print(id(age1), age1)</span><br><span class="line">print(age <span class="keyword">is</span> age1)</span><br></pre></td></tr></table></figure></li></ol><h1 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h1><ol><li><p>符号：<code>in</code>    <code>not in</code></p></li><li><p>作用：判断内容是否在指定序列中，返回bool值</p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'abcd123456'</span></span><br><span class="line">b = <span class="string">'2'</span></span><br><span class="line">c = <span class="string">'2a'</span></span><br><span class="line">print(b <span class="keyword">in</span> a)</span><br><span class="line">print(c <span class="keyword">not</span> <span class="keyword">in</span> a)</span><br></pre></td></tr></table></figure></li></ol><h1 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h1><ol><li><p>别名：三元运算符（三个元素），通用格式：<code>表达式 ? 真 : 假</code>（python不支持）</p></li><li><p>python格式：<code>真 if 表达式 else 假</code></p></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">num_0 = <span class="number">6</span></span><br><span class="line">num_1 = <span class="number">8</span></span><br><span class="line">result_0 = (num_0 + num_1) <span class="keyword">if</span> num_0 &lt; num_1 <span class="keyword">else</span> (num_0 - num_1)</span><br><span class="line">print(result_0)</span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">num_2 = <span class="number">66</span></span><br><span class="line">num_3 = int(input(<span class="string">'请输入整数：'</span>))</span><br><span class="line">result_1 = <span class="string">'正数'</span> <span class="keyword">if</span> (num_2 - num_3) &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="string">'负数'</span>, num_2 - num_3</span><br><span class="line">print(<span class="string">'输出数字类型：'</span>, result_1, type(result_1))</span><br></pre></td></tr></table></figure></li></ol><h1 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h1><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">**</td><td align="left">指数 (最高优先级)</td></tr><tr><td align="left">~ + -</td><td align="left">按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</td></tr><tr><td align="left">* / % //</td><td align="left">乘，除，取模和取整除</td></tr><tr><td align="left">+ -</td><td align="left">加法减法</td></tr><tr><td align="left">&gt;&gt; &lt;&lt;</td><td align="left">右移，左移运算符</td></tr><tr><td align="left">&amp;</td><td align="left">位 ‘AND’</td></tr><tr><td align="left">^ |</td><td align="left">位运算符</td></tr><tr><td align="left">&lt;= &lt; &gt; &gt;=</td><td align="left">比较运算符</td></tr><tr><td align="left">&lt;&gt; == !=</td><td align="left">等于运算符</td></tr><tr><td align="left">= %= /= //= -= += <em>= *</em>=</td><td align="left">赋值运算符</td></tr><tr><td align="left">is is not</td><td align="left">身份运算符</td></tr><tr><td align="left">in not in</td><td align="left">成员运算符</td></tr><tr><td align="left">not and or</td><td align="left">逻辑运算符</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3字符串内建函数的用法(三)</title>
      <link href="/posts/1ca1b1c8/"/>
      <url>/posts/1ca1b1c8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note danger">            <p>注意：以下操作，仅限于字符串的内建函数</p>          </div><h1 id="字符串增删改查"><a href="#字符串增删改查" class="headerlink" title="字符串增删改查"></a>字符串增删改查</h1><h2 id="字符串的增加"><a href="#字符串的增加" class="headerlink" title="字符串的增加"></a>字符串的增加</h2><ul><li>内建函数：<code>str.join()</code></li><li>作用：<ol><li>在字符串内加入<strong>任意字符</strong>，作为<strong>分隔符</strong></li><li>在<code>list</code>中可输入空值<code>&#39;&#39;</code>合并<code>list</code>为<code>str</code></li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'abcd'</span></span><br><span class="line">result = <span class="string">'--'</span>.join(s)    <span class="comment">#对字符串的元素进行添加，并分隔</span></span><br><span class="line">print(<span class="string">'加入分隔符后的结果：'</span>,result)</span><br><span class="line"><span class="comment"># 对列表中的元素进行合并转换  list--&gt;str</span></span><br><span class="line">list0 = [<span class="string">'a'</span>,<span class="string">'d'</span>,<span class="string">'m'</span>,<span class="string">'in'</span>]</span><br><span class="line">result = <span class="string">''</span>.join(list0)</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">print(<span class="string">'原始数据：'</span>,list0,type(list0))</span><br><span class="line">print(<span class="string">'join([arg])结果：'</span>,result,type(result))</span><br></pre></td></tr></table></figure><h2 id="字符串的删除"><a href="#字符串的删除" class="headerlink" title="字符串的删除"></a>字符串的删除</h2><ol><li><p>内建函数删除：</p><ul><li><p>内建函数：<code>str.strip()</code>、<code>str.lstrip()</code>、<code>str.rstrip()</code></p></li><li><p>作用：</p><ol><li><p><code>strip()</code>：截取、删除<code>str</code><strong>左右两边</strong>的<strong>空格</strong>和<strong>指定字符</strong>，不能删除中间的字符</p></li><li><p><code>lstrip()</code>：只作用于左边</p></li><li><p><code>rstrip()</code>：只作用于右边</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># strip()              中文翻译：除去、脱光、扒光</span></span><br><span class="line">s = <span class="string">'《--&gt;my--name is \'admin\'!--'</span>  <span class="comment"># \转义</span></span><br><span class="line">result = s.strip(<span class="string">'!《&gt;-'</span>)  <span class="comment"># srtip()调用</span></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">print(<span class="string">'原始数据：'</span>, s)</span><br><span class="line">print(<span class="string">'str.strip()后的结果：'</span>, result)</span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p><strong>替换</strong>指定字符为<strong>空值</strong>即可删除指定字符</p></li></ol><h2 id="字符串的修改"><a href="#字符串的修改" class="headerlink" title="字符串的修改"></a>字符串的修改</h2><ol><li><p>替换普通的指定字符：</p><ul><li><p>内建函数：<code>str.replace()</code></p></li><li><p>格式：<code>str.replace(old,new,[max])</code>   [max]：表示最大值，直接输入int型（数字），不需要加[]</p></li><li><p>作用：将字符串中的指定元素，替换为新的元素，并指定最大替换数量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'find rfind lfind index rindex lindex replace'</span></span><br><span class="line">print(<span class="string">'s原始长度：'</span>, len(s), <span class="string">'\ns原始数据：'</span>, s)</span><br><span class="line"><span class="comment"># 全部替换</span></span><br><span class="line">result = s.replace(<span class="string">' '</span>, <span class="string">'-'</span>)  <span class="comment"># 不指定替换个数，默认全部替换</span></span><br><span class="line">print(<span class="string">'全部替换后的结果：'</span>, result)</span><br><span class="line"><span class="comment"># 部分替换</span></span><br><span class="line">result = s.replace(<span class="string">' '</span>, <span class="string">'#'</span>, <span class="number">3</span>)  <span class="comment"># 指定最大替换数量为3，即前三个字符被替换（从左到右）</span></span><br><span class="line">print(<span class="string">'部分替换后的结果：'</span>, result)</span><br><span class="line"><span class="comment"># 截取后再替换</span></span><br><span class="line">print(<span class="string">'截取原始数据后再替换：'</span>, s[<span class="number">10</span>:<span class="number">-10</span>].replace(<span class="string">' '</span>, <span class="string">'@'</span>))  <span class="comment"># 截取后再替换并输出</span></span><br></pre></td></tr></table></figure></li><li><p>练习：删除指定字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">s1 = input(<span class="string">'请输入内容：'</span>)</span><br><span class="line">s2 = input(<span class="string">'请输入要删除的字符（无需分割符，连续写即可）：'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一（推荐）：</span></span><br><span class="line"><span class="comment"># 思路：遍历s2的每个元素，一一对应判断，将s1和s2中共有的元素替换为‘’空值</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s2:</span><br><span class="line">    <span class="comment"># print(i,end='')</span></span><br><span class="line">    s1 = s1.replace(i, <span class="string">''</span>)</span><br><span class="line"><span class="comment"># print('')</span></span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二：</span></span><br><span class="line"><span class="comment"># 思路：新建s3，遍历s1，判断s1中的元素在s2中是否存在，若存在不输出，不存在依次添加到s3，最后将s3赋值给s1(或者直接输出s3，无需赋值)</span></span><br><span class="line">s3 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> s2:</span><br><span class="line">        s3 += i</span><br><span class="line"><span class="comment"># s1 = s3</span></span><br><span class="line"><span class="comment"># print(s1)</span></span><br><span class="line">print(s3)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>替换特殊的指定字符：</p><ul><li><p>系统内置函数：<code>eval()</code>和<code>repr()</code></p></li><li><p>字符串内建函数：<code>str.replace()</code></p></li><li><p>组合格式：<code>eval(repr(str01).replace(&#39;\\&#39;, &#39;&#39;))</code></p><ol><li><code>repr()</code> 函数可以将字符串转换为<code>python</code>的原始字符串（即忽视各种特殊字符的作用）</li><li><code>eval()</code> 函数将原始字符串转换为正常的字符串，不使用<code>eval()</code>输出的字符串会带有 <code>&#39; &#39;</code> 单引号</li><li><code>str()</code> 和 <code>repr()</code> 都是把对象转换为字符串，但 <code>str()</code> 转换的字符串对用户友好， <code>repr()</code> 转换的字符串对<code>python</code>友好</li></ol></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">'0.6-1万\\/月'</span>, <span class="string">'0.7-1.5万\\/月'</span>]  <span class="comment"># 目标中存在反斜杠：\\</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    print(i)  <span class="comment"># 正常输出</span></span><br><span class="line">    <span class="comment"># 0.6-1万\/月</span></span><br><span class="line">    print(eval(repr(i).replace(<span class="string">'\\'</span>, <span class="string">''</span>)))  <span class="comment"># 将 \\ 替换为 空值（类似删除）</span></span><br><span class="line">    <span class="comment"># 0.6-1万/月</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>分隔字符串：</p><ul><li><p>内建函数：<code>str.split()</code></p></li><li><p>格式：<code>str.split(value)</code></p></li><li><p>作用：指定字符分隔str，并将分隔后的字符串放入list中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split()      str--&gt;list</span></span><br><span class="line">s = <span class="string">'my name  is admin '</span>  <span class="comment"># 字符串中间有两个空格、末尾有一个空格</span></span><br><span class="line">result = s.split(<span class="string">' '</span>)</span><br><span class="line">print(<span class="string">'原始数据：'</span>, s)</span><br><span class="line">print(<span class="string">'split()结果：'</span>, result)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="字符串的查询"><a href="#字符串的查询" class="headerlink" title="字符串的查询"></a>字符串的查询</h2><ol><li><p>bool查找</p><ul><li><p>关键字：<code>in</code></p></li><li><p>作用：判断指定内容是否在<code>str</code>中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'she is a very beautiful girl end'</span></span><br><span class="line">print(<span class="string">'字符串总长（起始位置：0）：'</span>, len(s))</span><br><span class="line">print(<span class="string">'in关键字判断结果：'</span>, <span class="string">'girl'</span> <span class="keyword">in</span> s)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>内容查找</p><ul><li><p>内建函数：<code>str.find()</code>、<code>str.lfind()</code>、<code>str.rfind()</code></p></li><li><p>格式：<code>str.find(&#39;str&#39;, start, end)</code></p></li><li><p>作用：查找<strong>指定内容</strong>，并指定<strong>开始</strong>和<strong>结束</strong>的位置，若<strong>存在</strong>，则返回出现指定内容的<strong>下标</strong>；若<strong>不存在</strong>，则返回<code>-1</code>；不指定位置，默认值查找<strong>第一次</strong>出现的位置（默认从左到右）；<code>rfind()</code>表示从右开始查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'she is a very beautiful girl end'</span></span><br><span class="line">result = s.find(<span class="string">'e'</span>)</span><br><span class="line">print(<span class="string">'原始数据：'</span>, s)</span><br><span class="line">print(<span class="string">'find()查找后的结果：'</span>, result)</span><br><span class="line"><span class="comment"># find('str',start,end)指定开始结束位置查找</span></span><br><span class="line">result0 = s.find(<span class="string">'e'</span>, <span class="number">15</span>, <span class="number">29</span>)  <span class="comment"># 起始位--&gt;结束位  [,)，左闭右开</span></span><br><span class="line">print(<span class="string">'find(\'e\',15,29)指定开始结束位置查找结果：'</span>, result0)</span><br><span class="line">print(<span class="string">'find(\'e\',result+1)指定开始位置查找结果：'</span>, s.find(<span class="string">'e'</span>, result + <span class="number">1</span>)) <span class="comment"># 如果不写end位置，默认到字符串结束位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 截取网址末尾的文件名</span></span><br><span class="line">s = <span class="string">'www.dgtmro.com/uploads/source/42/img/test.jpg'</span></span><br><span class="line">print(<span class="string">'字符串总长：'</span>, len(s))</span><br><span class="line">result1 = s.rfind(<span class="string">'/'</span>)</span><br><span class="line">print(<span class="string">'字符串中最后出现"/"的地址：'</span>, result1)</span><br><span class="line">print(s[result1 + <span class="number">1</span>:])  <span class="comment"># 默认截取是[,)区间，所以向前一位截取</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>下标查找</p><ul><li><p>内建函数：<code>str.index()</code>、<code>str.lindex()</code>、<code>str.rindex()</code></p></li><li><p>格式：<code>str.index(&#39;str&#39;, start, end)</code></p></li><li><p>作用：查找<strong>指定内容</strong>，并指定<strong>开始</strong>和<strong>结束</strong>的位置，若<strong>存在</strong>，则返回出现指定内容的<strong>下标</strong>；若<strong>不存在</strong>，则<strong>报错</strong>ValueError；不指定位置，默认值查找<strong>第一次</strong>出现的位置（默认从左到右）；<code>rindex()</code>表示从右开始查找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'www.dgtmro.com/uploads/source/a/42/img/test.jpg'</span></span><br><span class="line">print(<span class="string">'index()查找结果：'</span>, s.index(<span class="string">'a'</span>, <span class="number">20</span>))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>元素次数统计</p><ul><li><p>内建函数：<code>count()</code></p></li><li><p>格式：<code>str.count(&#39;str&#39;, begin, end)</code></p></li><li><p>作用：查找<strong>指定内容</strong>，并指定<strong>开始</strong>和<strong>结束</strong>的位置，最后返回出现指定内容的<strong>次数</strong>；若不指定开始和结束的位置，默认从头到尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'my name is admin'</span></span><br><span class="line">result = s.count(<span class="string">'m'</span>, <span class="number">0</span>, len(s))  <span class="comment"># count('str',begin,end)表示：确认查找的str，开头至结束，可不写，默认</span></span><br><span class="line">print(<span class="string">'原始数据：'</span>, s)</span><br><span class="line">print(<span class="string">'count(\'m\',start,end)输出结果：'</span>, result)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="字符串编码与解码"><a href="#字符串编码与解码" class="headerlink" title="字符串编码与解码"></a>字符串编码与解码</h1><ol><li><p>编码</p><ul><li>内建函数：<code>encode()</code></li><li>格式：<code>str.encode(&#39;utf-8&#39;)</code></li></ul></li><li><p>解码</p><ul><li>内建函数：<code>decode()</code></li><li>格式：<code>str.decode(&#39;utf-8&#39;)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gbk：中文gb2312：简体中文</span></span><br><span class="line">msg = <span class="string">'这是中文！'</span></span><br><span class="line">print(<span class="string">'原始数据：'</span>, msg)</span><br><span class="line"><span class="comment"># 编码encode</span></span><br><span class="line">result = msg.encode(<span class="string">'utf-8'</span>)  <span class="comment"># 将中文格式的内容进行编码问题</span></span><br><span class="line">print(<span class="string">'utf-8编码后：'</span>, result)</span><br><span class="line"><span class="comment"># 解码decode    网络应用（中文一般会涉及编码）</span></span><br><span class="line">result = result.decode(<span class="string">'utf-8'</span>)  <span class="comment"># 对编码后的内容进行解码</span></span><br><span class="line">print(<span class="string">'utf-8解码后：'</span>, result)</span><br><span class="line"><span class="comment"># 输出结果：b'\xe8\xbf\x99\xe6\x98\xaf\xe4\xb8\xad\xe6\x96\x87\xef\xbc\x81'</span></span><br><span class="line"><span class="comment"># b表示binary二进制，系统会自动转换为01</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="字母大小写转换"><a href="#字母大小写转换" class="headerlink" title="字母大小写转换"></a>字母大小写转换</h1><ul><li><p>内建函数：</p><ol><li><code>upper()</code>全部字母大写     <code>lower()</code>全部字母小写     <code>title()</code>每个单词首字母大写    <code>capitalize()</code>首字母大写</li><li><code>isupper()</code>   <code>islower()</code>   <code>istitle()</code> 检查字符串中的内容是否为相应的格式，返回<code>bool</code>值</li></ol></li><li><p>格式：<code>str.upper()</code>、<code>str.islower()</code> （不需要加参数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'my name is Admin'</span></span><br><span class="line">result = s.title()</span><br><span class="line">print(<span class="string">'大小写转换后的结果：'</span>, result)</span><br><span class="line"></span><br><span class="line">message = <span class="string">'she is a very beautiful girl'</span></span><br><span class="line">msg = message.capitalize()      <span class="comment"># 将字符串中的第一个字符转换成大写的标识形式</span></span><br><span class="line">print(msg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># istitle()返回bool值True、False，是判断字符串中每个单词的首字母是否大写的</span></span><br><span class="line">msg = message.istitle()</span><br><span class="line">print(msg)</span><br><span class="line"></span><br><span class="line">msg = message.title()      <span class="comment"># 将字符串中的每个单词的首字母转换成大写的标识形式</span></span><br><span class="line">print(msg)</span><br><span class="line"></span><br><span class="line">result = msg.istitle()</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">result = message.upper()      <span class="comment"># 将字符串中的所有字符转换成大写的标识形式</span></span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">msg = message.lower()      <span class="comment"># 将字符串中的所有字符转换成小写的标识形式</span></span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure></li><li><p>循环转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">'Ak99UtG55GuytG66G'</span></span><br><span class="line"><span class="comment"># 思路：    定义空str（用来依次放入str中的元素）--&gt;for...in...遍历str--&gt;判断元素（三种类型：大写，小写，没有大小写：例如数字）</span></span><br><span class="line"><span class="comment">#           --&gt;判断后转换并赋值--&gt;输出最后的结果</span></span><br><span class="line">ss = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i.isupper():</span><br><span class="line">        ss += i.lower()</span><br><span class="line">    <span class="keyword">elif</span> i.islower():</span><br><span class="line">        ss += i.upper()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ss += i</span><br><span class="line">print(ss)</span><br></pre></td></tr></table></figure></li><li><p>练习：</p><ol><li>单词每个字母都是小写字母</li><li>单词没有连续相等的字母</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">words</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 输入内容</span></span><br><span class="line">    word = input(<span class="string">'请输入一个单词：'</span>)</span><br><span class="line">    <span class="comment"># 将单词每个字母进行循环，判断是不是大写[A-Z]</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(word)):</span><br><span class="line">        <span class="comment"># if word[i] &gt;= 'A' and word[i] &lt;= 'Z':</span></span><br><span class="line">        <span class="keyword">if</span> word[i].isupper():</span><br><span class="line">            print(<span class="string">'字母有大写！不喜欢这个单词！'</span>)</span><br><span class="line">            <span class="comment"># 判断结束直接终止循环，跳出函数</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 对单词的相邻字母是否一样进行判断</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(word)):</span><br><span class="line">        <span class="comment"># 系统是从0开始，len()是从1开始，所有-1</span></span><br><span class="line">        <span class="keyword">if</span> i &lt; len(word) - <span class="number">1</span> <span class="keyword">and</span> word[i] == word[i + <span class="number">1</span>]:</span><br><span class="line">            print(<span class="string">'这个单词是叠词！不喜欢！'</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'我喜欢这个单词！'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">words()</span><br></pre></td></tr></table></figure></li></ul><h1 id="判断开始和结尾"><a href="#判断开始和结尾" class="headerlink" title="判断开始和结尾"></a>判断开始和结尾</h1><ol><li><p>开始：</p><ul><li><p>内建函数：<code>startswith()</code></p></li><li><p>格式：<code>str.startswith(&#39;str&#39;, start, end)</code>，返回<code>bool</code>值（True / False）</p></li><li><p>若不指定开始位置和结束位置，默认<strong>从左到右</strong>开始匹配；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s0 = <span class="string">'hellow！Hi！'</span></span><br><span class="line">result = s0.startswith(<span class="string">'H'</span>, <span class="number">7</span>)</span><br><span class="line">print(<span class="string">'startswith()结果：'</span>, result)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>结尾</p><ul><li><p>内建函数：<code>endswith()</code></p></li><li><p>格式：<code>str.endswith(&#39;str&#39;, start, end)</code></p></li><li><p>若不指定开始位置和结束位置，默认<strong>从右到左</strong>开始匹配；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file_name = <span class="string">'test.jpg'</span></span><br><span class="line">result0 = file_name.endswith(<span class="string">'jpg'</span>)</span><br><span class="line">print(<span class="string">'endswith()结果：'</span>, result0)</span><br></pre></td></tr></table></figure></li><li><p>应用（文件上传）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用：文件上传    只能上传的图片类型（jpg,png,gif,bmp）</span></span><br><span class="line">print(<span class="string">r'C:\\uploads\source\42\img\test.jpg'</span>)</span><br><span class="line">user_input = input(<span class="string">'请复制上面的路径：'</span>)</span><br><span class="line">print(<span class="string">'你输入的路径长度为：'</span>, len(user_input))</span><br><span class="line"></span><br><span class="line">s = user_input.rfind(<span class="string">'\\'</span>)</span><br><span class="line">print(<span class="string">'文件开始的开始位置：'</span>, s + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">result = user_input[s + <span class="number">1</span>:]  <span class="comment"># 获取文件名全称</span></span><br><span class="line">print(<span class="string">'获取到的文件：'</span>, result)</span><br><span class="line"><span class="keyword">if</span> result.endswith(<span class="string">'jpg'</span>) <span class="keyword">or</span> result.endswith(<span class="string">'png'</span>):</span><br><span class="line">    print(<span class="string">'属于图片类型，可以上传！'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'禁止上传！只能上传图片类型！'</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="判断数字和字母"><a href="#判断数字和字母" class="headerlink" title="判断数字和字母"></a>判断数字和字母</h1><ol><li><p>作用：判断str中的所有元素，属于数字还是字母</p></li><li><p>内建函数：<code>isdigit()</code>是否为数字、<code>isalpha()</code> 是否为字母</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># isalpha()</span></span><br><span class="line">s = <span class="string">'abc8'</span></span><br><span class="line">result = s.isalpha()</span><br><span class="line">print(<span class="string">'s.isaplha()是否全是字符类型：'</span>, result)</span><br><span class="line"><span class="comment"># isdigit()</span></span><br><span class="line">s01 = <span class="string">'888'</span>  <span class="comment"># True</span></span><br><span class="line">s02 = <span class="number">888</span>  <span class="comment"># 报错，非字符串类型</span></span><br><span class="line">s03 = <span class="string">'3.14'</span>  <span class="comment"># False</span></span><br><span class="line">result = s01.isdigit()</span><br><span class="line">print(<span class="string">'s.isdigit()是否全是数字类型：'</span>, result)</span><br></pre></td></tr></table></figure></li><li><p>练习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 三次循环累加（数字累加游戏）</span></span><br><span class="line">print(<span class="string">'''</span></span><br><span class="line"><span class="string">********************</span></span><br><span class="line"><span class="string">    数字累加游戏</span></span><br><span class="line"><span class="string">********************</span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line">i = <span class="number">1</span></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">3</span>:</span><br><span class="line">    print(<span class="string">'请输入第&#123;&#125;个'</span>.format(i), end=<span class="string">''</span>)</span><br><span class="line">    user_input = input(<span class="string">'数：'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> user_input.isdigit():  <span class="comment"># 引用isdigit()来进行判断</span></span><br><span class="line">        a = int(user_input) <span class="comment"># 转换为int()类型</span></span><br><span class="line">        sum += a <span class="comment"># sum = sum + a</span></span><br><span class="line">        print(<span class="string">'前&#123;&#125;个数的和为：'</span>.format(i), sum)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'第&#123;&#125;个输入的内容不正确，请重新输入！'</span>.format(i))</span><br><span class="line">print(<span class="string">'总和为：'</span>, sum)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3字符串的用法(二)</title>
      <link href="/posts/625291e3/"/>
      <url>/posts/625291e3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="字符串可用符号"><a href="#字符串可用符号" class="headerlink" title="字符串可用符号"></a>字符串可用符号</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+               合并字符串</span><br><span class="line">*               字符重复使用</span><br><span class="line">[]              字符串的下标，可用来截取字符串中的元素,[::]</span><br><span class="line"><span class="keyword">in</span> 或 <span class="keyword">not</span> <span class="keyword">in</span>    判断字符串中是否存在某元素</span><br><span class="line"><span class="keyword">is</span> 或 <span class="keyword">not</span> <span class="keyword">is</span>    判断字符串id是否相同</span><br></pre></td></tr></table></figure><h1 id="定义字符串"><a href="#定义字符串" class="headerlink" title="定义字符串"></a>定义字符串</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str_0 = <span class="string">'abc'</span></span><br><span class="line">str_1 = <span class="string">"abc"</span></span><br><span class="line">str_2 = <span class="string">'''             </span></span><br><span class="line"><span class="string">--&gt;abc</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h1 id="输出字符串"><a href="#输出字符串" class="headerlink" title="输出字符串"></a>输出字符串</h1><ul><li>单双引号存储位置、占用空间一样</li><li>三引号在换行情况下，需要保留原有的格式，所以占用空间与单双引号不同；三引号在同一行使用无意义</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'str_0：'</span>,str_0,id(str_0))     </span><br><span class="line">print(<span class="string">'str_1：'</span>,str_1,id(str_1))</span><br><span class="line">print(<span class="string">'str_2：'</span>,str_2,id(str_2))</span><br></pre></td></tr></table></figure><h1 id="符号-的用法"><a href="#符号-的用法" class="headerlink" title="符号 + * 的用法"></a>符号 + * 的用法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串的连接、拼接 +</span></span><br><span class="line">say = <span class="string">'my'</span></span><br><span class="line">msg = <span class="string">'friend'</span></span><br><span class="line">print(say + msg)</span><br><span class="line"><span class="comment"># 字符串的重复使用 *</span></span><br><span class="line">print(msg * <span class="number">3</span>) <span class="comment"># 重复三遍</span></span><br></pre></td></tr></table></figure><h1 id="is和not-is的用法"><a href="#is和not-is的用法" class="headerlink" title="is和not is的用法"></a>is和not is的用法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比较三种str类型</span></span><br><span class="line">str_0 = <span class="string">'abc'</span></span><br><span class="line">str_1 = <span class="string">"abc"</span></span><br><span class="line">str_2 = <span class="string">'''             </span></span><br><span class="line"><span class="string">--&gt;abc</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">msg1 = <span class="string">'abc'</span></span><br><span class="line">msg2 = <span class="string">'abc'</span></span><br><span class="line">msg3 = <span class="string">'abc'</span></span><br><span class="line">print(<span class="string">'---&gt;&gt;&gt;&gt;'</span>, msg2 <span class="keyword">is</span> msg3)</span><br><span class="line">print(str_1 <span class="keyword">is</span> msg1) <span class="comment"># True</span></span><br><span class="line">print(str_0 == str_1)       <span class="comment"># ==比较的是变量的内容</span></span><br><span class="line">print(str_0 <span class="keyword">is</span> str_1)       <span class="comment"># is比较的是变量的地址</span></span><br><span class="line">print(str_0 == str_2)</span><br><span class="line">print(str_0 <span class="keyword">is</span> str_2)</span><br></pre></td></tr></table></figure><h1 id="in和not-in的用法"><a href="#in和not-in的用法" class="headerlink" title="in和not in的用法"></a>in和not in的用法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str_3 = <span class="string">'abcd'</span></span><br><span class="line">print(<span class="string">'》》》'</span>, <span class="string">'a'</span> <span class="keyword">in</span> str_3)</span><br><span class="line">print(<span class="string">'》》》'</span>, <span class="string">'ac'</span> <span class="keyword">in</span> str_3)</span><br><span class="line">print(<span class="string">'》》》'</span>, <span class="string">'ac'</span> <span class="keyword">not</span> <span class="keyword">in</span> str_3)</span><br></pre></td></tr></table></figure><h1 id="符号-的用法-1"><a href="#符号-的用法-1" class="headerlink" title="符号[ ]的用法"></a>符号[ ]的用法</h1><ul><li><code>[]</code>是截取第几位；<code>[:]</code>是截取一个区间<code>[ )</code>（包左不包右）；<code>[::]</code>是按照顺序截取的，第三个参数为-1就是倒序，2就是正序隔一个字符取值，-2就是倒序之后再隔一个字符取值</li><li><code>[::-1]</code>可表示字符串倒序输出</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">str_4 = <span class="string">'abc.jpg'</span></span><br><span class="line">print(<span class="string">'++++++++++++++++'</span>, str_4[<span class="number">2</span>])</span><br><span class="line"><span class="comment"># str_4[2:4]--&gt;类似rang(2,4)--&gt;[2,4)</span></span><br><span class="line">print(str_4[<span class="number">2</span>:<span class="number">4</span>]) <span class="comment"># 从index=2位置开始，index=4位置结束</span></span><br><span class="line">print(str_4[<span class="number">2</span>:<span class="number">-3</span>]) <span class="comment"># 从2位置开始，-3位置结束</span></span><br><span class="line">print(<span class="string">'负数截取：'</span>, str_4[<span class="number">-4</span>:<span class="number">-1</span>]) <span class="comment"># 从-4位置开始，-1位置结束</span></span><br><span class="line">print(str_4[::<span class="number">-1</span>])  <span class="comment"># 从-1位置开始倒序排列，前两个参数不写，默认开始到结尾(start:end)</span></span><br><span class="line">print(str_4[:<span class="number">-1</span>]) <span class="comment"># 从index=0位置开始，-1位置结束（不包括-1位置的元素）</span></span><br><span class="line">print(<span class="string">'&gt;&gt;&gt;'</span>, str_4[<span class="number">-1</span>:<span class="number">-4</span>:<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><h1 id="字符串的截取"><a href="#字符串的截取" class="headerlink" title="字符串的截取"></a>字符串的截取</h1><ul><li>可以使用索引，获取字符串中的每一个字符，在字符串中，每一个字符都有一个索引，即下标</li><li>程序中数数，是从<code>0</code>开始数的，即第一位字符是的<code>index</code>为<code>0</code>，即<code>index=0</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单个字符截取</span></span><br><span class="line">msg = <span class="string">'friend'</span></span><br><span class="line">print(msg[<span class="number">2</span>])</span><br><span class="line"><span class="comment"># 多个字符截取</span></span><br><span class="line"><span class="comment"># 计算开始到结束时，遵循左闭右开的原则[ ),即包含左面的，不包含右面的，例如，str[2:4]是截取两位</span></span><br><span class="line">msg11 = <span class="string">"我会变强的！"</span></span><br><span class="line">start = <span class="number">2</span></span><br><span class="line">end = <span class="number">4</span></span><br><span class="line">print(msg11[start: end])</span><br><span class="line"><span class="comment"># 索引支持负数，负索引是从-1开始的</span></span><br><span class="line">msg2 = <span class="string">"再给我一点时间！"</span></span><br><span class="line">print(msg2[:<span class="number">3</span>])  <span class="comment"># 不写开始的位置，默认从0开始</span></span><br><span class="line">print(msg2[<span class="number">-3</span>:])  <span class="comment"># 负数也是同理，默认到最后一个位置结束（包括最后一位元素）</span></span><br><span class="line">print(msg2[:<span class="number">-1</span>])</span><br><span class="line">print(msg2[:])  <span class="comment"># 开始结束都不写，代表输出全部</span></span><br></pre></td></tr></table></figure><h1 id="字符串的格式化输出"><a href="#字符串的格式化输出" class="headerlink" title="字符串的格式化输出"></a>字符串的格式化输出</h1><ol><li><p>格式化字符串（string）</p><ul><li><p>占位符：<code>%s</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sex = <span class="string">"男"</span></span><br><span class="line">age = <span class="string">"18"</span></span><br><span class="line">age_int = <span class="number">18</span></span><br><span class="line">print(<span class="string">"我性别是%s,今年是%s岁！"</span> % (sex, age))</span><br><span class="line">print(<span class="string">"我性别是%s,今年是%s岁！"</span> % (sex, age_int))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>格式化整型（digit）</p><ul><li><p>占位符：<code>%d</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sex = <span class="string">"男"</span></span><br><span class="line">age_int = <span class="number">18</span></span><br><span class="line">print(<span class="string">"我性别是%s,今年是%d岁！"</span> % (sex, age_int))</span><br></pre></td></tr></table></figure></li></ul></li><li><p>格式化浮点数字</p><ul><li><p>占位符：<code>%f</code></p></li><li><p>可指定小数后的精度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="number">1.16</span></span><br><span class="line">print(<span class="string">"今年我的体重减少了%f公斤"</span> % (f))</span><br><span class="line">print(<span class="string">"今年我的体重减少了%f公斤"</span> % f)  <span class="comment"># 当变量只有一个时，可省略()</span></span><br><span class="line">print(<span class="string">"今年我的体重减少了%.1f公斤"</span> % f)  <span class="comment"># 在%后面加.1代表小数点后去一位，遵循5舍6入的原则</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>格式化变量</p><ul><li><p>占位符：<code>{}</code> 或 <code>{变量}</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># f 格式化输出变量</span></span><br><span class="line">name = <span class="string">'wlet'</span></span><br><span class="line">print(<span class="string">f'我的名字是：<span class="subst">&#123;name&#125;</span>！'</span>)  <span class="comment"># &#123;变量&#125; == 占位符，在字符串前必须加字符 f</span></span><br><span class="line"><span class="comment"># format 格式化输出变量</span></span><br><span class="line">age = <span class="number">88</span></span><br><span class="line">print(<span class="string">'我今年&#123;&#125;岁了！'</span>.format(age))  <span class="comment"># &#123;&#125; == 占位符</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>其他：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、字符串前加 u</span><br><span class="line">例：<span class="string">u"我是含有中文字符组成的字符串。"</span></span><br><span class="line">作用：后面字符串以 Unicode 格式 进行编码，一般用在中文字符串前面，防止因为源码储存格式问题，导致再次使用时出现乱码。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、字符串前加 r</span><br><span class="line">例：<span class="string">r"\n\n\n\n"</span>　　表示一个普通生字符串 \n\n\n\n，而不表示换行了。</span><br><span class="line">作用：去掉反斜杠的转移机制。</span><br><span class="line">（特殊字符：即那些，反斜杠加上对应字母，表示对应的特殊含义的，比如最常见的”\n”表示换行，”\t”表示Tab等。 ）</span><br><span class="line">应用：常用于正则表达式，对应着re模块。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、字符串前加 b</span><br><span class="line">例: response = <span class="string">b'Hello World!'</span> <span class="string">b' '</span> 表示这是一个 bytes 对象</span><br><span class="line">作用：<span class="string">b" "</span>前缀表示：后面字符串是bytes 类型。</span><br><span class="line">用处：网络编程中，服务器和浏览器只认bytes 类型数据。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、字符串前加 f</span><br><span class="line">作用：以f开头表示在字符串内支持大括号内的python 表达式</span><br><span class="line">例：print(<span class="string">f'学号：<span class="subst">&#123;row[<span class="number">0</span>]&#125;</span>'</span>, end=<span class="string">'  '</span>)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3变量与输出的用法(一)</title>
      <link href="/posts/cd630a81/"/>
      <url>/posts/cd630a81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ol><li><p>python介绍：</p><ul><li>python是一门弱类型语言</li><li>弱类型：声明的变量赋什么值，就是什么类型</li><li>变量命名规范：只能用<strong>字母</strong>、<strong>数字</strong>、<strong>下划线</strong></li></ul></li><li><p>定义变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">float01 = <span class="number">99.9</span>  <span class="comment"># float类型</span></span><br><span class="line">int01 = <span class="number">6</span>  <span class="comment"># int类型</span></span><br><span class="line">str01 = <span class="string">'乐逍遥'</span>  <span class="comment"># str类型</span></span><br><span class="line">list01 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment"># list类型</span></span><br><span class="line">tuple01 = (<span class="string">'a'</span>, <span class="number">2</span>, <span class="string">'test'</span>)  <span class="comment"># tuple类型</span></span><br><span class="line">dict01 = &#123;<span class="string">'name'</span>: <span class="string">'jack'</span>, <span class="string">'age'</span>: <span class="number">66</span>, <span class="string">'sex'</span>: <span class="string">'男'</span>&#125;  <span class="comment"># dict类型</span></span><br><span class="line">set01 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">2</span>&#125;  <span class="comment"># set类型</span></span><br></pre></td></tr></table></figure></li><li><p>输出变量：</p><ul><li><p>单个输出：<code>print(float01)</code>、<code>print(set01)</code></p></li><li><p>多个输出：</p><ul><li><p>用<code>\n</code>换行符，下一行的行首会有一个空格</p></li><li><pre><code class="python">print(float01, <span class="string">'\n'</span>, int01, <span class="string">'\n'</span>, str01, <span class="string">'\n'</span>, list01, <span class="string">'\n'</span>, tuple01, <span class="string">'\n'</span>, dict01, <span class="string">'\n'</span>, set01)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 解决办法：</span><br><span class="line"></span><br><span class="line">  &#96;&#96;&#96;python</span><br><span class="line">  print(float01, int01, str01, list01, tuple01, dict01, set01, sep&#x3D;&#39;\n&#39;)</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li><li><p>查看变量类型：<code>print(float01, type(float01))</code>，输出变量并查看变量类型</p></li><li><p>查看python中的关键字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword <span class="comment"># 导入keyword包</span></span><br><span class="line">print(keyword.kwlist) <span class="comment"># 以list的形式，输出python中的关键字</span></span><br></pre></td></tr></table></figure></li><li><p>练习一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'  ~~~'</span>)</span><br><span class="line">print(<span class="string">'   *'</span>)</span><br><span class="line">print(<span class="string">'  ***'</span>)</span><br><span class="line">print(<span class="string">' *****'</span>)</span><br><span class="line">print(<span class="string">'*******'</span>)</span><br><span class="line">print(<span class="string">' *****'</span>)</span><br><span class="line">print(<span class="string">'  ***'</span>)</span><br><span class="line">print(<span class="string">'   *'</span>)</span><br><span class="line">print(<span class="string">'  ~~~'</span>)</span><br></pre></td></tr></table></figure></li><li><p>练习二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_name = <span class="string">'乐天'</span></span><br><span class="line">print(<span class="string">'大家好！我是'</span>, my_name, <span class="string">'！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>练习三：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name_aa = <span class="string">'《卧春》'</span></span><br><span class="line">name_a = <span class="string">'暗梅幽闻花，'</span></span><br><span class="line">name_b = <span class="string">'卧枝伤恨底，'</span></span><br><span class="line">name_c = <span class="string">'遥闻卧似水，'</span></span><br><span class="line">name_d = <span class="string">'易透达春绿。'</span></span><br><span class="line"></span><br><span class="line">print(name_aa)</span><br><span class="line">print(name_a)</span><br><span class="line">print(name_b)</span><br><span class="line">print(name_c)</span><br><span class="line">print(name_d)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n"</span>, name_aa, <span class="string">"\n"</span>, name_a, <span class="string">"\n"</span>, name_b, <span class="string">"\n"</span>, name_c, <span class="string">"\n"</span>, name_d)</span><br></pre></td></tr></table></figure></li></ol><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><ol><li><p>输出函数：<code>print()</code></p></li><li><p><code>print()</code>默认语法格式：<code>print(value1,value2,value3,...,sep=&#39; &#39;,end=&#39;\n&#39;)</code></p></li><li><p>直接输出内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">3.14</span>)</span><br><span class="line">print(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">"hellow word！"</span>)</span><br><span class="line">print([<span class="string">'a'</span>, <span class="number">8</span>, <span class="number">3.14</span>, <span class="string">'b'</span>])</span><br><span class="line">print((<span class="string">'a'</span>, <span class="number">8</span>, <span class="number">3.14</span>, <span class="string">'b'</span>))</span><br><span class="line">print(&#123;<span class="string">'name'</span>: <span class="string">'jack'</span>, <span class="string">'age'</span>: <span class="number">66</span>, <span class="string">'sex'</span>: <span class="string">'男'</span>&#125;)</span><br><span class="line">print(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">2</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>单个变量输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name_a = <span class="string">"小乐"</span></span><br><span class="line">print(name_a)</span><br></pre></td></tr></table></figure></li><li><p>多个变量输出：</p><ul><li>当输出多个变量时，默认用空格分割，即：sep=’ ‘</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age_a = <span class="number">19</span></span><br><span class="line">gender_a = <span class="string">'boy'</span></span><br><span class="line">print(age_a, gender_a)  <span class="comment"># sep默认的分割是 空格</span></span><br></pre></td></tr></table></figure></li><li><p><code>sep=&#39; &#39;</code>的用法：</p><ul><li><p>默认<code>sep=&#39; &#39;</code>（值为空格），可自己选择替换<code>空格</code>的字符；若sep的值为空，即<code>sep=&#39;&#39;</code>，则变量之间无分割</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age_a = <span class="number">19</span></span><br><span class="line">gender_a = <span class="string">'boy'</span></span><br><span class="line">print(age_a, gender_a, sep=<span class="string">'--'</span>)  <span class="comment"># sep='*'，可自己选择替换 空格的字符，若sep的值为空，即sep=''，则变量之间无分割</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>end=&#39;\n&#39;</code>的用法：默认值为<code>\n</code>（换行），可选择替换<code>\n</code>的字符，若值为空，即<code>end=&#39;&#39;</code>，则变量输出不换行</p><ul><li><p>转义字符：\n 换行，python默认在每行输出语句结束后，加\n自动换行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'第一行\n第二行'</span>)</span><br></pre></td></tr></table></figure></li><li><p>默认值为\n（换行），可选择替换\n的字符，若值为空，即end=’’，则变量输出不换行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'AAA'</span>, end=<span class="string">''</span>)  <span class="comment"># 'AAA\n' ---&gt; 'AAA'</span></span><br><span class="line">print(<span class="string">'BBB'</span>, end=<span class="string">''</span>)  <span class="comment"># 'BBB\n' ---&gt; 'BBB'</span></span><br><span class="line">print(<span class="string">'CCC'</span>, end=<span class="string">''</span>)  <span class="comment"># 'CCC\n' ---&gt; 'CCC'</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>保留原样格式输出：</p><ul><li><p>将内容按照格式写在三引号中即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">message0 = <span class="string">'''</span></span><br><span class="line"><span class="string">亲爱的：</span></span><br><span class="line"><span class="string">    你好！</span></span><br><span class="line"><span class="string">    回家给我买一个地球玩玩！</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(message0)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>让转义字符不转义：</p><ul><li><p>直接在字符串前加 r 即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">r'我给你们说句古诗文：\n窗子前头有月光，\n好像地上有银两！'</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>制表符的用法：\t</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'亲爱的用户：\n'</span>, <span class="string">'\t亲点击链接激活用户：激活用户！'</span>)</span><br></pre></td></tr></table></figure></li><li><p>将字符串中的关键字标出来，进行转义处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"今年'体重'又减少了2公斤"</span>)      <span class="comment">#使用单双引号转义处理</span></span><br><span class="line">print(<span class="string">'我想说："我真的很厉害"'</span>)       <span class="comment">#单双引号嵌套使用</span></span><br><span class="line">print(<span class="string">"今年\"体重\"又减少了2公斤"</span>)    <span class="comment">#使用\反斜杠进行转义</span></span><br><span class="line">print(<span class="string">'今年\'体重\'又减少了2公斤'</span>)    <span class="comment">#使用\反斜杠进行转义</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python3语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络协议知识</title>
      <link href="/posts/cef22fc4/"/>
      <url>/posts/cef22fc4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h1><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86/20200906173438.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86/20200906173458.jpg" alt=""></p><ol><li><strong>OSI的划分</strong>：<ul><li>某一层的服务就是该层及下一层的功能，通过接口给上一层提供</li><li>各层所提供的服务和这些服务是怎么实现的无关（各层服务独立实现）</li></ul></li><li><strong>应用层</strong>：直接为计算机用户提供接口、各种网络服务；网络协议有：http、ftp、SMTP（电子邮件传输的协议）等</li><li><strong>表示层</strong>：对应用层数据的编码和转换功能，确保数据能被安全接收；数据压缩、加密属于转换功能</li><li><strong>会话层</strong>：建立、管理、维护，表示层实体的通信会话</li><li><strong>传输层</strong>：端到端的数据链接（传输）功能；（“端”指端口）；协议：TCP、UDP、 HTTPS</li><li><strong>网络层</strong>：通过IP寻址来建立两个节点之间的连接：路由器；协议：IP协议（internet的基础）</li><li><strong>数据链路层</strong>：位 / 比特流（bit），字节（byte），帧（0,1）<ul><li>1比特 = 一个二进制位（1帧）</li><li>1字节 = 8比特</li><li>1kb = 1024byte</li><li>1MB = 1024kb</li><li>1GB = 1024MB</li><li>1T = 1024GB</li></ul></li><li><strong>物理层</strong>：集线器、网线、电缆、中继器（看得见摸得着）</li></ol><h1 id="IP地址的分类及划分范围"><a href="#IP地址的分类及划分范围" class="headerlink" title="IP地址的分类及划分范围"></a>IP地址的分类及划分范围</h1><ul><li>互联网使用的是32位地址（Ipv4）</li></ul><ol><li><strong>IP地址格式</strong>：<ul><li>IP地址 = 网络地址 + 主机地址</li><li>IP地址 = 主机地址 + 子网地址 + 主机地址</li></ul></li><li><strong>A类</strong>（为大型网络设计）：<ul><li>格式：1个字节的网络地址 + 3个字节的主机地址</li><li>在A类中，网络地址的最高位必须是“0”；（1.0.0.0 ~ 127.0.0.0）；127个，每个可容纳1亿多主机</li><li>127.0.0.1为“本机地址localhost”，用于本地机器的测试</li><li>0 ~ 127（0：代表任何地址；127：代表回溯测试地址）；实际范围是：1 ~ 126；默认子网掩码为：255.0.0.0</li></ul></li><li><strong>B类</strong>：<ul><li>格式：2个字节的网络地址 + 2个字节的主机地址</li><li>在B类中，网络地址最高位必须是“10”；（128.0.0.0 ~ 191.255.255.255）；16382个，每个可容纳6万多主机</li><li>128 ~ 191（128.0.0.0和191.255.0.0为保留IP）；实际范围：128.1.0.0 ~ 191.254.0.0</li></ul></li><li><strong>C类</strong>：<ul><li>格式：3个字节的网络地址 + 1个字节的主机地址</li><li>在C类中，网络地址的最高位是“110”；（192.0.0.0 ~ 223.255.255.255）；209万多个，每个可容纳254台主机</li><li>192 ~ 223（192.0.0.0和223.255.255.0位保留IP）；实际范围：192.0.1.0 ~ 233.255.254.0</li><li>C类地址中的私有地址：192.168.0.0 ~ 192.168.255.255是私有地址</li></ul></li><li><strong>D类</strong>：<ul><li>多用于“多点广播（multicast）”</li><li>IP地址第一个字节以“1110”开始（专门保留的地址,并不指向特定的网络）</li><li>224.0.0.0 ~ 239.255.255.255</li></ul></li><li><strong>E类</strong>：<ul><li>以“11110”开始。为将来使用保留</li><li>240.0.0.0 ~ 255.255.255.254（255.255.255.255用于广播地址）</li></ul></li></ol><h1 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h1><ul><li>流程：<ol><li>第一步（客户端）：<code>SYN=1,ACK=0,seq=x</code></li><li>第二步（服务端）：<code>SYN=1,ACK=1,seq=y,ack=x+1</code></li><li>第三步（客户端）：<code>ACK=1,seq=x+1,ack=y+1</code></li></ol></li><li>功能介绍：<ol><li><strong>SYN</strong>：代表请求创建连接</li><li><strong>ACK</strong>：代表确认接受</li><li><strong>seq</strong>：代表序列号</li><li><strong>ack</strong>：代表下一个“数据包”的编号；<code>ack=seq+1</code></li></ol></li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86/20200906173523.jpg" alt=""></p><h1 id="四次分手"><a href="#四次分手" class="headerlink" title="四次分手"></a>四次分手</h1><ul><li>流程：<ol><li>第一步（客户端）：<code>FIN=1,seq=x</code></li><li>第二步（服务端）：<code>ACK=1,seq=y,ack=x+1</code> 和 <code>FIN=1,seq=z,ack=x+1</code>（2个包同时发出）</li><li>第三步（客户端）：<code>ACK=1,seq=x+1,ack=z+1</code></li></ol></li><li>功能介绍：<ul><li><strong>FIN</strong>：代表请求关闭连接（“四次分手时”，TCP的连接是双向的，所以，一个FIN只能关闭一个方向）</li></ul></li></ul><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86/20200906173545.png" alt=""></p><h1 id="TCP协议与UDP协议传输的区别"><a href="#TCP协议与UDP协议传输的区别" class="headerlink" title="TCP协议与UDP协议传输的区别"></a>TCP协议与UDP协议传输的区别</h1><ol><li>基于连接与无连接</li><li>对系统资源的要求（TCP较多，UDP较少）</li><li>UDP程序结构较简单</li><li>流模式与数据报模式</li><li>TCP保证数据的正确性，UDP可能丢包；TCP保证数据顺序，UDP不保证 </li></ol><h1 id="http请求方式（8种）"><a href="#http请求方式（8种）" class="headerlink" title="http请求方式（8种）"></a>http请求方式（8种）</h1><ol><li><strong>get</strong>：向特定资源发送请求（请求指定的页面信息，并返回实体的主体）；（通过“url”传递信息）</li><li><strong>post</strong>：向指定的资源提交数据并进行请求处理（提交表单，上传文件），可导致新的资源的建立和原有资源的修改；（放在request body中，可“抓包”获取）；</li><li><strong>head</strong>：和“get”请求相似，但是不能返回实体，用于获取“小消息”中的“头部信息”</li><li><strong>put</strong>：向指定资源位置上上传最新数据；（会把之前的覆盖；“post”不会覆盖，只会增加数据）</li><li><strong>delete</strong>：请求服务器删除页面</li><li><strong>options</strong>：允许客户端查看服务器性能</li><li><strong>trace</strong>：回显服务器收到的请求，主要用于测试和诊断</li><li><strong>connect</strong>：http/1.1协议中能够将连接改为管道方式的代理服务器</li></ol><h1 id="HTTP协议与HTTPS协议的区别"><a href="#HTTP协议与HTTPS协议的区别" class="headerlink" title="HTTP协议与HTTPS协议的区别"></a>HTTP协议与HTTPS协议的区别</h1><ol><li>HTTPS协议 = HTTP协议 + SSL协议</li><li><strong>HTTP</strong>：超文本传输协议；<strong>HTTPS</strong>：超文本安全传输协议</li><li><strong>工作层</strong>：在OSI网络模型中，HTTP工作于<strong>应用层</strong>，而HTTPS工作在<strong>传输层</strong>（SSL在传输层进行加密的）。</li><li><strong>连接端口</strong>：HTTP标准端口是80（浏览网页的默认端口），而HTTPS的标准端口是443（网页浏览端口）。</li><li><strong>传输方式</strong>：HTTP是超文本传输协议，信息是明文传输，而HTTPS是SSL加密传输协议。</li><li><strong>工作耗时</strong>：HTTP耗时=TCP握手，而HTTPS耗时=TCP握手+SSL握手。</li><li><strong>显示形式</strong>：HTTP的URL以<code>http://</code>开头，而HTTPS的URL以<code>https://</code>开头。</li><li><strong>费用</strong>：HTTP无需费用，而HTTPS需要到CA申请证书，一般免费证书较少，需要一定费用。</li><li><strong>安全性</strong>：HTTP的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。</li></ol><h1 id="arp协议"><a href="#arp协议" class="headerlink" title="arp协议"></a>arp协议</h1><ol><li><strong>arp协议</strong>：地址解析协议</li><li><strong>作用：</strong>通过解析IP得到Mac地址</li><li><strong>工作层：</strong>网络层</li><li><strong>常用命令：</strong>arp -a（查看本机存活的所有IP）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> internet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim编辑器使用手册</title>
      <link href="/posts/22e0b6f/"/>
      <url>/posts/22e0b6f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="vim编辑器"><a href="#vim编辑器" class="headerlink" title="vim编辑器"></a>vim编辑器</h1><ul><li>打开vim编辑器 / 用vim编辑器打开文件：<code>vim</code> / <code>vim 文件1 文件2 。。。</code>  </li><li>打开多个文件进行比较：<code>vim -d 文件1 文件2 。。。</code>（适用于版本比较）</li></ul><h1 id="vim的三种模式"><a href="#vim的三种模式" class="headerlink" title="vim的三种模式"></a>vim的三种模式</h1><ul><li>命令模式、编辑模式、末行模式</li></ul><h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><ol><li><code>ZZ</code>(大写) – 保存并退出</li><li>按键代表命令：<ul><li><code>i</code> 或a – 进入编辑模式</li><li><code>:</code> – 进入末行模式</li></ul></li><li><code>G</code> (大写) – 光标移动到末尾；<code>88G</code> – 光标移动到88行</li><li><code>gg</code> – 光标移动到首行</li><li><code>h、j、k、l</code> – 光标移动<code>左下上右</code>；<code>66h</code> – 光标向左移动66个字符</li><li>快捷组合键：<ul><li><code>Ctrl + Y</code> / <code>Ctrl + E</code> – 移动一行（上 / 下）</li><li><code>Ctrl + B</code> / <code>Ctrl + F</code> – 翻一页（下 / 上）</li></ul></li><li>数字<code>0</code> / <code>$</code> – 光标到行首 / 行末；<code>w</code>(小写) – 光标移动到下一个单词</li><li><code>dd</code> – 删除光标所在行；<code>88dd</code> – 从光标所在行向下删除88行</li><li><code>yy</code> – 复制光标所在行；<code>66yy</code> – 从光标所在行复制66行</li><li><code>p</code> – 粘贴；<code>8p</code> – 粘贴8遍</li><li><code>u</code> – 撤销；<code>Ctrl + R</code> – 恢复</li></ol><h1 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h1><ul><li><code>i</code> / a – 进入编辑模式</li><li><code>esc :wq!</code> – 退出编辑模式，进入<strong>末行模式</strong>（:），<strong>保存</strong>（w），<strong>退出</strong>（q），<strong>强制执行</strong>（!）</li></ul><h1 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h1><ol><li><code>:</code> – 在命令模式下输入，进入末行模式</li><li>:336 — 定位到指定行（336行）</li><li><code>set nu</code> – 显示行号；set nonu – 不显示行号</li><li><code>syntax on</code> – 显示高亮语法；syntax off – 不显示高亮语法</li><li><code>set ts=4</code> – 修改制表键的空格数</li><li><code>set ruler</code> – 显示光标所在的位置；set noruler – 不显示光标所在的位置</li><li>映射快捷键：<ul><li><code>map &lt;f2&gt; gg99999dd</code> – 在命令模式下，自定义快捷键：从第一行开始删除99999行</li><li><code>ionremap __main if __name__ == &#39;__main__&#39;</code> – 在编辑模式下，输入 <code>__main</code> 自动补替换后面内容</li></ul></li><li>多文件操作：<ul><li><code>ls</code> – 查看所有打开的文件(注意：ln创建的文件，不支持查看)</li><li><code>b 数字</code> – 指定显示那个文件</li><li><code>vs</code> – 垂直拆分窗口</li><li><code>sp</code> – 水平拆分窗口</li><li><code>Ctrl + W</code>(双击) – 切换窗口</li><li><code>qa</code> – 退出所有窗口</li></ul></li></ol><h1 id="更改vim的配置"><a href="#更改vim的配置" class="headerlink" title="更改vim的配置"></a>更改vim的配置</h1><ul><li><p>切换至用户主目录 – <code>cd ~</code> –新建隐藏文件<code>.vimrc</code> – 编辑如下配置（<strong>.vimrc</strong>文件中必须删除中文注释，否则会有异常）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set nu # 显示行号</span><br><span class="line">syntax on  # 语法高亮开启</span><br><span class="line">set ts&#x3D;4  # 设置制表键为4个空格</span><br><span class="line">set expandtab # 将制表键自动转换为空格</span><br><span class="line">set autoindent  # 自动缩进</span><br><span class="line">set ruler  # 显示标尺（光标所在的位置）</span><br><span class="line">set nohls  # 设置搜索的结果不要用高亮</span><br></pre></td></tr></table></figure></li></ul><h1 id="宏操作"><a href="#宏操作" class="headerlink" title="宏操作"></a>宏操作</h1><ol><li>进入命令模式 – 录制宏 – <code>qa</code>(也可以输入qb, qc，这里的a, b, c是指寄存器名称) – 进入<strong>recoding</strong>模式</li><li>进入编辑模式 – 录制宏的内容</li><li>退出进入命令模式 – 结束宏 – <code>q</code></li><li>命令模式下播放宏 – <code>4@a</code>(a：寄存器的名字) – 播放四遍</li></ol><h1 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h1><ul><li><p>查找 – <code>/</code> 或 <code>?</code> – 支持正则（从上到下、从下到上）</p><ul><li><code>n</code> / <code>N</code> – 正向搜索 / 反向搜索（命令模式）</li></ul></li><li><p>替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:s&#x2F;old&#x2F;new           &#x2F;&#x2F;用new替换行中首次出现的old</span><br><span class="line">:s&#x2F;old&#x2F;new&#x2F;g         &#x2F;&#x2F;用new替换行中所有的old</span><br><span class="line">:n,m s&#x2F;old&#x2F;new&#x2F;g     &#x2F;&#x2F;用new替换从n到m行里所有的old</span><br><span class="line">:%s&#x2F;old&#x2F;new&#x2F;g        &#x2F;&#x2F;用new替换当前文件里所有的old</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编辑器 </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统使用手册</title>
      <link href="/posts/b37d76b1/"/>
      <url>/posts/b37d76b1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><ol><li>查看登陆用户情况：<code>w</code> / <code>who</code> / <code>whoami</code>  /  <code>last</code> </li><li>创建用户 / 修改用户密码 / 删除指定用户：<code>adduser 用户名</code>  / <code>passwd 用户名</code> / <code>userdel -r 用户名</code></li><li>查看系统所有用户：<ul><li><code>cat -n /etc/passwd | cut -d : -f 1</code></li></ul></li><li>切换用户：<code>su 用户名</code>（switch user） <code>sudo</code>（以root权限执行命令）</li><li>查看日期 / 日历：<code>data / cal</code></li><li>清除屏幕：<code>clear</code></li><li>退出当前登陆：<code>logout</code>  /  <code>exit</code></li><li>查看帮助：<code>man</code>  /  <code>info</code> / <code>--help</code></li><li>打开历史记录 / 清除历史记录：<code>history</code> / <code>history -c</code></li><li>启动桌面（图形化界面）：<code>init 5</code></li><li>启动当前用户的桌面（图形化界面）：<code>startx</code> </li><li>重启系统：<code>reboot</code> / <code>init 6</code></li><li>立刻关机（现在） / 安全关机：<code>shutdown -h now</code> / <code>init 0</code></li><li>发送消息：<code>write</code> / <code>wall</code> / <code>mesg</code></li><li>自定义命令：<code>alias ll=&#39;ls -al&#39;</code>（给<code>ls -al</code> 命令添加另外的启动方式<code>ll</code>，原命令不变）</li></ol><h1 id="Linux网络及服务程序管理命令"><a href="#Linux网络及服务程序管理命令" class="headerlink" title="Linux网络及服务程序管理命令"></a>Linux网络及服务程序管理命令</h1><ol><li><code>ping</code> 检查网络可达性 – ICMP – Internet Control Management Protocol – 网络层<ul><li><code>ttl</code>time to live – 数据存活时间（若数据有错误，经过指定数量的路由器就会停止检查，默认ttl=64）</li><li><code>PING TO DEATH</code>ping到死（需超大量服务器同时执行）；DDoS：分布式拒绝服务攻击（TCP Flood）</li></ul></li><li><code>ifconfig</code> / <code>ip</code> 查看网络信息<ul><li><code>127.0.0.1</code> 回环地址<code>localhost</code>（别名）</li><li><code>ifconfig eth0</code> 查看以太网信息</li><li><code>ifconfig lo</code> 查看本机信息</li><li><code>ip addr</code>作用和<code>ifconfig</code>相同：查看以太网和本机信息</li></ul></li><li><code>systemctl</code> Linux系统管理守护进程、工具和库的集合<ul><li><code>systemctl start nginx</code> — 启动服务（<strong>以<code>nginx</code>服务为例</strong>）</li><li><code>systemctl restart nginx</code> — 重启服务</li><li><code>systemctl stop nginx</code> — 停止服务</li><li><code>systemctl status nginx</code> — 查看服务程序的状态</li><li><code>systemctl enable nginx</code> — 服务开机自启</li><li><code>systemctl disable nginx</code> — 服务开机不自启</li></ul></li><li><code>firewalld</code> — 防火墙服务<ul><li><code>systemctl start firewalld</code> — 启动防火墙</li><li><code>systemctl stop firewalld</code> — 关闭防火墙</li><li><code>systemctl status firewalld</code> — 查看防火墙状态</li><li><code>systemctl enable firewalld</code> — 防火墙开机自启</li><li><code>systemctl disable firewalld</code> — 防火墙开机不自启</li><li><code>firewall-cmd --reload</code> — 重启防火墙</li><li><code>firewall-cmd --state</code> — 查看防火墙状态</li><li><code>firewall-cmd --version</code> — 查看防火墙版本</li><li><code>firewall-cmd --get-active-zones</code> — 查看防火墙区域信息</li><li><code>firewall-cmd --zone=public --add-port=6379/tcp</code> — <strong>暂时</strong>在公共区开启一个端口：6379，传输协议为：tcp<ul><li><code>--permanent</code> — <strong>永久</strong>的开启 / 生效（<strong>参数</strong>）</li></ul></li><li><code>firewall-cmd --zone=public --list-ports</code> — 查看公共区开放的端口</li><li><code>firewall-cmd --zone=public --query-port=6379/tcp</code> — 查看指定端口是否开启（yes / no）</li><li><code>firewall-cmd --zone=public --remove-port=6379/tcp --permanent</code> — 移除 / 关闭指定端口（可永久移除）</li></ul></li><li><code>service</code> – 服务管理</li><li><code>top</code> – 动态监视进程活动与系统负载等信息（任务管理器）</li><li><code>jobs</code> — 查看后台进程任务</li><li>切换程序前后台运行的方法：<ul><li><code>启动命令 &amp;</code> — <code>redis-server &amp;</code> — 后台运行（<strong>符号&amp;</strong>）</li><li>先查看后台进程，若存在后台进程，再 <code>fg %1</code>（这里的<code>1</code>代表进程序号） — 前台运行</li><li>先启动服务<code>redis-server</code> 再 <code>Ctrl + Z</code> — 把前台的命令停下来放到后台（此时的程序处于后台停止状态，需启动）</li><li><code>Ctrl + Z</code>后查看后台进程，再 <code>bg %1</code>启动程序（这里的<code>1</code>代表进程序号） — 后台运行</li></ul></li><li><code>netstat</code> 查看服务程序的信息和状态<ul><li><code>-anp</code> – 查看网络状态，显示所有，显示ip，显示端口号</li></ul></li><li><code>ps</code> 查看进程和网络<ul><li><code>ps -ef</code> — 查看所有进程，标准格式显示数据</li><li><code>ps -aux</code> — 查看所有进程，BSD格式显示数据（可以查看CPU，内存）</li><li><code>ps -aux --sort -rss</code> — 内存降序</li><li><code>ps -aux --sort rss</code> — 内存升序</li><li><code>ps -aux --sort %cpu</code> — CPU升序</li><li><code>ps -aux --sort -%cpu</code> — CPU降序</li><li><code>ps -aux --sort -%cpu | head -10</code> — 取前十占用CPU的进程</li></ul></li><li><code>kill</code> – 终止指定的PID进程<ul><li><code>kill PID</code> — 用PID号杀死进程</li><li><code>-9</code> — 强制执行</li></ul></li><li><code>killall</code> — 终止指定服务的所有进程<ul><li><code>killall nginx</code> — 终止Nginx服务的所有进程</li></ul></li></ol><h1 id="Linux文件操作相关命令"><a href="#Linux文件操作相关命令" class="headerlink" title="Linux文件操作相关命令"></a>Linux文件操作相关命令</h1><ol><li><code>pwd</code> - 打印工作路径</li><li><code>cd</code> - 切换目录</li><li><code>ls</code> - 列出目录下的内容</li><li><code>cat</code> -concatenate - 连接多个文件（查看文件的内容）</li><li><code>touch</code> - 创建空文件或修改已有文件的最后访问时间<ul><li><code>-a</code>：仅修改“读取时间”（atime）</li><li><code>-m</code>：仅修改“修改时间”（mtime）</li><li><code>-d</code>：同时修改“atime”和“mtime”</li></ul></li><li><code>mkdir</code> - make directory - 创建文件夹</li><li><code>rm</code> - remove - 删除<ul><li><code>-f</code>：强制删除文本</li><li><code>-r</code>：删除目录 – 递归删除（包括目录下的所有文件）</li><li><code>-v</code>：显示执行过程</li><li><code>-i</code>：在执行指令时，选择Y/N（默认不显示，不区分大小写）</li></ul></li><li><code>rmdir</code> - 删除空文件夹</li><li><code>wget</code> - 通过网络下载文件</li><li><code>gzip</code> / <code>gunzip</code> - 文件压缩 / 解压（gz / tgz）</li><li><code>xz</code> - 文件压缩 / 解压（xz）<ul><li><code>-z</code> – 压缩</li><li><code>-d</code> – 解压缩  </li></ul></li><li><code>tar</code> - 文件归档 / 解归档<ul><li><code>-xvf</code> – 解归档</li><li><code>-cvf</code> – 创建归档文件</li></ul></li><li><code>wc</code> - 查看文件行数、单词数、字符数</li><li><code>sort</code> – 文件排序</li><li><code>uniq</code> – 文件去重（相邻相同的内容会被过滤掉）</li><li><code>more</code> / <code>less</code> - 分页查看文件</li><li><code>diff</code> - 比较文件的差别</li><li><code>cp</code> – copy 拷贝文件</li><li><code>mv</code> – move 移动文件或文件重命名（同一路径下移动，相当于文件重命名）</li><li><code>grep</code> – 匹配内容 / 搜索内容（string）<ul><li><code>grep mysql</code> — 搜索mysql</li><li><code>ps -ef | grep mysql | grep -v grep</code> — 不要显示grep关键词 — <code>grep -v grep</code> </li><li><code>gerp -E &quot;\&lt;\/?script.*?&gt;&quot; index.html</code> – 添加正则 -E 进行匹配</li></ul></li><li><code>find</code> – 文件搜索<ul><li>-name – find / -name “*.html” – 搜索出根目录下的所有匹配文件 – 参数-delete，可将查找结果一并删除</li><li>-size – find ./ -size 10M – 在当前目录下搜索出大于10M的文件</li><li>-type – 根据类型搜索 – d / f / l / s – 文件夹 / 普通文件 / 链接文件</li><li>-atime – 最后访问时间</li><li>-mtime – 最后修改时间</li><li>-ctime – 创建时间</li></ul></li></ol><h1 id="Linux常用特殊符号"><a href="#Linux常用特殊符号" class="headerlink" title="Linux常用特殊符号"></a>Linux常用特殊符号</h1><ol><li>管道符：<code>|</code>（拼接多个命令 - 前一个命令的输出是后一个命令的输入）</li><li>输出重定向：<code>&gt;</code></li><li>追加输出重定向：<code>&gt;&gt;</code></li><li>错误输出重定向：<code>2&gt;</code></li><li>错误追加输出重定向：<code>2&gt;&gt;</code></li></ol><h1 id="Linux常用快捷组合键"><a href="#Linux常用快捷组合键" class="headerlink" title="Linux常用快捷组合键"></a>Linux常用快捷组合键</h1><ol><li><code>Ctrl + Alt + T</code>： 打开Linux图形化终端</li><li><code>Ctrl + D</code>：  结束输入</li><li><code>Ctrl + W</code>： 删除命令中的一块（从后至前删除）</li><li><code>Ctrl + A</code>： 光标到行首</li><li><code>Ctrl + E</code>： 光标到行尾</li><li><code>Ctrl + L</code>：清除屏幕（clear）</li></ol><h1 id="Linux系统下的软件安装"><a href="#Linux系统下的软件安装" class="headerlink" title="Linux系统下的软件安装"></a>Linux系统下的软件安装</h1><h2 id="CentOs系统"><a href="#CentOs系统" class="headerlink" title="CentOs系统"></a>CentOs系统</h2><ul><li>包管理工具 - yum / rpm / apt<ol><li><code>rpm</code> 全称：redhat package manager</li><li><code>yum</code>全称：yellowdog updater modified</li><li><code>yum search nginx</code> – 从默认的仓库搜索有没有指定的软件</li><li><code>yum install -y nginx</code> – 安装软件</li><li><code>yum remove -y nginx</code> – 卸载软件</li><li><code>yum info nginx</code> – 查看软件的相关信息</li><li><code>yum list installed</code> – 查看已安装的软件</li><li><code>yum update nginx</code> – 更新软件</li><li><code>yum update</code> – 更新所有软件</li></ol></li></ul><h1 id="Linux创建链接"><a href="#Linux创建链接" class="headerlink" title="Linux创建链接"></a>Linux创建链接</h1><ol><li>硬链接：<code>ln test.py /root/code/test.py</code><ul><li>创建后，只要改变其中一个文件的内容，其余文件也会随之更改</li><li>(给磁盘文件添加了新的引用，不占用内存空间，只要文件引用次数不为0，文件就不会消失)</li></ul></li><li>软连接：<code>ln -s /usr/local/python37/bin/python3 /usr/bin/python3</code> （相当于windows系统下的创建快捷方式）</li></ol><h1 id="Linux远程连接"><a href="#Linux远程连接" class="headerlink" title="Linux远程连接"></a>Linux远程连接</h1><h2 id="ssh远程连接"><a href="#ssh远程连接" class="headerlink" title="ssh远程连接"></a>ssh远程连接</h2><ol><li>被连主机需开启ssh服务 – sudo <code>/etc/init.d/ssh start</code> – sudo <code>/etc/init.d/ssh stop</code>(sudo 权限足够可省略)</li><li>被连接主机需开启远程登陆权限：<ul><li>打开ssh的配置文件 – <code>vim /etc/ssh/sshd_config</code></li><li>开启远程登陆权限 – <code>PermitRootLogin</code>的值更改为 – <code>yes</code></li><li>先关闭ssh服务，再开启ssh服务</li></ul></li><li>开始连接 – <code>ssh let@192.168.245.128</code> – 再输入密码即可连接</li></ol><h2 id="scp远程连接"><a href="#scp远程连接" class="headerlink" title="scp远程连接"></a>scp远程连接</h2><ul><li>上传文件 – <code>scp code/example01.py let@192.168.245.128:/home/let</code> – 从本地路径至服务器路径</li><li>上传文件夹 – <code>scp -r code/ root@192.168.245.128:/root</code>（添加参数 -r）</li></ul><h2 id="sftp远程连接"><a href="#sftp远程连接" class="headerlink" title="sftp远程连接"></a>sftp远程连接</h2><ol><li>进入sftp – <code>sftp root@192.168.245.128</code> – 输入正确密码即可进入</li><li>打开使用手册，查看所有命令 <code>-- help</code></li><li>上传文件、文件夹 – 将本地文件上传到服务器路径下<ul><li><code>put example.py</code> </li><li><code>put -r code</code> – 参数不区分大小写</li><li>先lcd切换本地路径，再cd切换到服务器路径</li></ul></li><li>下载文件、文件夹 – 将服务器的文件下载到本地路径下<ul><li><code>get test.txt</code></li><li><code>get -R code</code> – 参数不区分大小写</li><li>先lcd切换本地路径，再cd切换到服务器路径</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html基础语言</title>
      <link href="/posts/adfa9574/"/>
      <url>/posts/adfa9574/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="web前端开发工具"><a href="#web前端开发工具" class="headerlink" title="web前端开发工具"></a>web前端开发工具</h1><ul><li>下载地址：dcloud.io</li><li>工具名称：HBuilder X（国产免费）</li></ul><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><ul><li>作用：承载内容</li></ul><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><ul><li><p>块级标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 标题标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  <span class="tag">&lt;<span class="name">h6</span>&gt;</span><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 段落标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 水平分隔标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 块级元素标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 无序列表标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 有序列表标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定义列表标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表格标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表单标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>行级标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 超链接标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 图像标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 按钮标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 组合文档中的行内元素标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 输入标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h2><p>常用文本标签</p><ul><li>h1~h6 - 标题 - heading</li><li>hr - 水平分隔线 - 水平标尺） - horizontal ruler</li><li>br - 换行 - break ruler</li><li>p - 段落</li><li>sup / sub - 上标 、下标</li><li>em / strong - 斜体、加粗（强调）</li><li>del / ins  - 删除线、下划线</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题一<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span>水平分割线</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span>末尾换行</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落（自动换行）<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sup</span>&gt;</span>上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>  <span class="tag">&lt;<span class="name">sub</span>&gt;</span>下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span>  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span>  <span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>字符实体/字体替换符</p><ol><li>空格：&nbsp; 请点击“空格”</li><li>尖括号：&lt;请点击符号&gt;</li><li>其他</li></ol><h2 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h2><ul><li>列表标签可以自由嵌套</li></ul><ol><li><p>有序列表：</p><ul><li>ol - ordered list<ul><li>li - list item</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>无序列表：</p><ul><li>ul - unordered list <ul><li>li - list item</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>定义列表：</p><ul><li>dl - definition list<ol><li>dt - definition title</li><li>dd - definition description</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>定义标题<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>定义的描述1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>定义的描述2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>列表嵌套：</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        蔬菜：</span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>葱、蒜苗<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>茄子、杏鲍菇<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        水果：</span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;dt&gt;定义标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/python-logo.png"</span> &gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>python<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>面向对象编程<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>基本概念：类、对象<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>三大支柱：封装、继承、多态<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;dd&gt;定义的描述 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>语法结构简单易懂<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>动态弱类型语言，需要python解释器才能执行<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h2><ol><li><p>页面链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- a标签 - name属性和id属性用法相同 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"top"</span> <span class="attr">id</span>=<span class="string">"bottom"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"_self"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>锚链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#bottom"</span>&gt;</span>去底部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"#top"</span>&gt;</span>回顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>功能链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"mailto:123@qq.com"</span>&gt;</span>联系站长<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- img标签可单独使用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- title标签：鼠标悬浮在图像上出现的提示信息 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- alt标签：图片加载失败后的提示信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/日本国模人体艺术图片.jpg"</span> <span class="attr">title</span>=<span class="string">"日本国模人体艺术图片"</span> <span class="attr">alt</span>=<span class="string">"图片加载失败..."</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- figcaption标签：在图片下方添加信息（图片名称） --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><ul><li><p>表格快捷创建：<code>table&gt;tr*5&gt;td*4</code>（5行4列）</p></li><li><p>多行光标：按住ctrl + 单机选择位置 &gt; 退出：esc</p></li><li><p>自动在标签外嵌套一层标签：选中标签范围 + ctrl + ]</p></li><li><p>HTML 表格有两种单元格类型：</p><ol><li>表头单元格 - 包含头部信息（由<th>元素创建）</li><li>标准单元格 - 包含数据（由<td>元素创建）</li></ol><p><strong><em>th 元素中的文本呈现为粗体并且居中。</em></strong></p><p><strong><em>td 元素中的文本是普通的左对齐文本。</em></strong></p></li></ul><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- border="1"边框为1，不推荐使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- caption添加表格标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>学生考试成绩表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- thead添加表格头部（默认不显示） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- width='120' 设置表格宽度为120，字体加粗 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'120'</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'120'</span>&gt;</span>语文<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'120'</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'120'</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">'120'</span>&gt;</span>体育<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tbody添加表格内部数据（默认不显示） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>91<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>81<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>71<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>61<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- rowspan="1" 行为一个单元格 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- clospan="1" 列为一个单元格 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- align="center"、"left"、"right" 数据排列：居中对齐、左对齐、右对齐 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"1"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span> <span class="attr">rowspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>59<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>59<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>赵六<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>99<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>88<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>77<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>66<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tfoot添加表格尾部（默认不显示） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><ul><li>表单控件：<code>&lt;form action=&quot;&quot; method=&quot;&quot;&gt;&lt;/form&gt;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- action=""提交表单时，提交到哪个文件中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- fieldset标签：给表单中的指定表单加线框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- legend标签：在线框上添加文本信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>用户基本信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            用户名：</span><br><span class="line">            <span class="comment">&lt;!-- size="30" 设置输入框的长度 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- maxlength="10" 设置输入框中数据的最大长度 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- placeholder="" 设置输入框底层的提示内容 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- required 必填项 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- readonly 只读项 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span> <span class="attr">placeholder</span>=<span class="string">"填写3-10个字符"</span> <span class="attr">required</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            密码：</span><br><span class="line">            <span class="comment">&lt;!-- type="password" 隐藏数据 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">required</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            确认密码：</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"repassword"</span> <span class="attr">required</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            性别：</span><br><span class="line">            <span class="comment">&lt;!-- type="radio"单选框 checked默认选择项，这里只能选择一个 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span> &gt;</span>男</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女"</span>&gt;</span>女</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>用户附加信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            爱好：</span><br><span class="line">            <span class="comment">&lt;!-- type="checkbox"复选框 checked可加多个默认选择项 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fav"</span> <span class="attr">value</span>=<span class="string">"美食"</span> <span class="attr">checked</span> &gt;</span>美食</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fav"</span> <span class="attr">value</span>=<span class="string">"旅游"</span>&gt;</span>旅游</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fav"</span> <span class="attr">value</span>=<span class="string">"运动"</span> <span class="attr">checked</span> &gt;</span>运动</span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fav"</span> <span class="attr">value</span>=<span class="string">"视频"</span>&gt;</span>视频</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- select&gt;option*5 添加5个下拉列表 --&gt;</span></span><br><span class="line">            省份：</span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"province"</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"01"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"02"</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"03"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"04"</span>&gt;</span>重庆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"05"</span> <span class="attr">selected</span> &gt;</span>四川省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            生日：</span><br><span class="line">            <span class="comment">&lt;!-- type="date" 设置日期框 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            邮箱：</span><br><span class="line">            <span class="comment">&lt;!-- 邮箱框 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">required</span> <span class="attr">readonly</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            头像：</span><br><span class="line">            <span class="comment">&lt;!-- 文件框 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"photo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            个人简介：</span><br><span class="line">            <span class="comment">&lt;!-- textarea 自定义文本框，可设置行数和列数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">name</span>=<span class="string">"个人简介"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- type="submit" 添加提交按钮 value属性不写有默认值：提交、重置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"确认注册"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- type="reset" 添加重置按钮 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重新填写"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>表单控件中的重要属性</p><ol><li><p><code>name</code>属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置文本输入框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置日期选择框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置邮件输入框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置自定义文本输入框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">name</span>=<span class="string">"个人简介"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>value</code>属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设置单选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">checked</span> &gt;</span>男</span><br><span class="line"><span class="comment">&lt;!-- 设置复选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"fav"</span> <span class="attr">value</span>=<span class="string">"美食"</span> <span class="attr">checked</span> &gt;</span>美食</span><br><span class="line"><span class="comment">&lt;!-- 设置自定义下拉列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"province"</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"01"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"02"</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"03"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"04"</span>&gt;</span>重庆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"05"</span> <span class="attr">selected</span> &gt;</span>四川省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="音频标签"><a href="#音频标签" class="headerlink" title="音频标签"></a>音频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- controls设置控制台按钮 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- loop设置循环播放 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- autoplay默认自动播放 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"./audios/我们不一样铃声.mp3"</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">autoplay</span> &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="视频标签"><a href="#视频标签" class="headerlink" title="视频标签"></a>视频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">autoplay</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"./videos/流浪的子弹.mp4"</span>&gt;</span><span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="层叠样式表"><a href="#层叠样式表" class="headerlink" title="层叠样式表"></a>层叠样式表</h1><ul><li>分类：内部样式表（style标签中）、外部样式表（css文件中）、内嵌样式表/行内样式表（body标签中）</li><li>作用：渲染页面</li><li>一般情况下网站的首页会使用内部样式表 - 首页正常渲染</li><li>其他页面可以共享一个或多个外部样式表 - 代码复用/减少对带宽和流量的使用</li></ul><h2 id="选择器使用原则"><a href="#选择器使用原则" class="headerlink" title="选择器使用原则"></a>选择器使用原则</h2><ul><li>不冲突的样式会叠加</li><li>有冲突的样式遵循三条原则：<ol><li>就近原则</li><li>具体性原则</li><li>重要原则</li></ol></li></ul><h2 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*标签选择器*/</span></span></span><br><span class="line">    h1&#123;</span><br><span class="line">    width: 1450px;</span><br><span class="line">    height: 50px;</span><br><span class="line"><span class="css">    <span class="comment">/*上下边缘为0,自动化*/</span></span></span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/*类选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.a</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*背景色*/</span></span></span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.b</span> &#123;</span></span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.c</span> &#123;</span></span><br><span class="line">        background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.d</span> &#123;</span></span><br><span class="line">        background-color: green;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.e</span> &#123;</span></span><br><span class="line">        background-color: cyan;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.f</span> &#123;</span></span><br><span class="line">        background-color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.g</span> &#123;</span></span><br><span class="line">        background-color: purple;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.h</span> &#123;</span></span><br><span class="line">        color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.big</span> &#123;</span></span><br><span class="line">        font-size: 45px;</span><br><span class="line">        width: 1450px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        border: 0px;</span><br><span class="line">        margin: 10px auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.normal</span> &#123;</span></span><br><span class="line">        font-size: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.small</span> &#123;</span></span><br><span class="line">        font-size: 15px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/*ID选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#header</span>,<span class="selector-id">#footer</span> &#123;</span></span><br><span class="line">        width: 1450px;</span><br><span class="line">        height: 120px;</span><br><span class="line"><span class="css">        <span class="comment">/*边界：1px 实线 red*/</span></span></span><br><span class="line">        border: 1px solid red;</span><br><span class="line"><span class="css">        <span class="comment">/*上下边缘为10px,自动化*/</span></span></span><br><span class="line">        margin: 10px auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/*属性选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*form input后代选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*form&gt;input儿子选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span>,<span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=password]</span>&#123;</span></span><br><span class="line">        border: none;</span><br><span class="line">        border-bottom: 1px dotted darkgray;</span><br><span class="line">        outline: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/*form~input兄弟选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*form+input相邻兄弟选择器*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">form</span>~<span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/*outline轮廓线*/</span></span></span><br><span class="line">        outline: none;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">lightgray</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/*focus鼠标点击*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">form</span>~<span class="selector-tag">input</span><span class="selector-attr">[type=text]</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line">        outline: none;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#55ffff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本与字体设置"><a href="#文本与字体设置" class="headerlink" title="文本与字体设置"></a>文本与字体设置</h2><ul><li><p>属性定义及使用说明</p><ol><li>font 简写属性 - 在一个声明中设置所有字体属性。</li><li>可设置的属性是（按顺序）： “font-style font-variant font-weight font-size/line-height font-family”</li><li>font-size和font-family的值是必需的。如果缺少了其他值，默认值将被插入，如果有默认值的话。</li></ol><p><strong>注意：</strong> line - height属性设置行与行之间的空间。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.ms1</span> &#123;</span></span><br><span class="line">        font-family: 楷体;</span><br><span class="line">        font-size: 260%;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(145, 218, 0, 0<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="comment">/*字母间距*/</span></span></span><br><span class="line">        letter-spacing: 10px;</span><br><span class="line">        width: 450px;</span><br><span class="line">        height: 60px;</span><br><span class="line"><span class="css">        <span class="comment">/*边框3px dotted虚线/星罗棋布的*/</span></span></span><br><span class="line">        border: 3px dotted gray;</span><br><span class="line"><span class="css">        <span class="comment">/* solid实线/实心的 */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* border:3px solid black; */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* 线条高度，行高*/</span></span></span><br><span class="line">        line-height: 60px;</span><br><span class="line"><span class="css">        <span class="comment">/* 文本排列 */</span></span></span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="comment">/* 外边距：10px 自动变 */</span></span></span><br><span class="line">        margin: 10px auto;</span><br><span class="line"><span class="css">        <span class="comment">/*文本装饰 下划线 红色*/</span></span></span><br><span class="line">        text-decoration: underline;</span><br><span class="line"><span class="css">        <span class="comment">/*overline上划线；wavy - 波浪线；*/</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* text-decoration: wavy overline red; */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/*line-through删除线*/</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* text-decoration: line-through; */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* 文本阴影：水平4px；垂直：2px；颜色：灰色 */</span></span></span><br><span class="line">        text-shadow: 4px 2px gray;</span><br><span class="line"><span class="css">        <span class="comment">/*文本转换：大写*/</span></span></span><br><span class="line">        text-transform: uppercase;</span><br><span class="line"><span class="css">        <span class="comment">/*文本缩进：60px*/</span></span></span><br><span class="line">        text-indent: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="引入新字体"><a href="#引入新字体" class="headerlink" title="引入新字体"></a>引入新字体</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 定义字体的名称 - 字体类型 */</span></span></span><br><span class="line">        font-family: "默陌流星公举体";</span><br><span class="line"><span class="css">        <span class="comment">/* 设置字体存放路径 */</span></span></span><br><span class="line">        src: url('fonts/默陌流星公举体.ttf');</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="边框和轮廓的设置"><a href="#边框和轮廓的设置" class="headerlink" title="边框和轮廓的设置"></a>边框和轮廓的设置</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#box</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 边框 */</span></span></span><br><span class="line">        border: 1px dotted gray;</span><br><span class="line"><span class="css">        <span class="comment">/* 轮廓线 */</span></span></span><br><span class="line">        outline: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/25/tMdUcXelsmxfZJv.gif" alt="box-model.gif"></p><p><em>不同部分的说明：</em></p><ul><li><p><strong>Margin(外边距)</strong> - 清除边框外的区域，外边距是透明的。</p></li><li><p><strong>Border(边框)</strong> - 围绕在内边距和内容外的边框。</p></li><li><p><strong>Padding(内边距)</strong> - 清除内容周围的区域，内边距是透明的。</p></li><li><p><strong>Content(内容)</strong> - 盒子的内容，显示文本和图像。</p></li><li><p>border边框属性值:</p><ol><li>none - 取消边框</li><li>solid - 实线</li><li>dotted - 虚线</li><li>double - 双重线</li></ol></li><li><p>border-radius: 10px;  边框（半径）圆角属性值；</p></li><li><p>border-top-left-radius: 10px;  边框左上角属性值；</p></li><li><p>border-bottom-right-radius: 30px;  边框右下角属性值；</p></li><li><p>border-collapse: collapse;  边界塌陷：塌陷；（取消重复边框）</p></li></ul><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 17%;</span><br><span class="line">        height: 100%;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(137, 203, 101, 0<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:10px</span> <span class="selector-tag">double</span> <span class="selector-id">#55ff00</span>;</span></span><br><span class="line">        margin: 1% auto;</span><br><span class="line">        padding: 1%;</span><br><span class="line">        text-align: center;</span><br><span class="line">        background: url(images/蓝色星空近月雪山雪景.jpg) -100px -100px no-repeat no-repeat;</span><br><span class="line"><span class="css">        <span class="comment">/* background-image: url(images/蓝色星空近月雪山雪景.jpg); */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* 背景重复:水平不重复 垂直不重复 */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* background-repeat: no-repeat no-repeat; */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* background-position: -100px -10px; */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h2><p>示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    table &#123;</span><br><span class="line"><span class="css">        <span class="comment">/*边框塌陷（去除边框的重复阴影）*/</span></span></span><br><span class="line">        border-collapse: collapse;</span><br><span class="line">    &#125;</span><br><span class="line">    th,rd &#123;</span><br><span class="line">        border: 1px solid black;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表属性"><a href="#列表属性" class="headerlink" title="列表属性"></a>列表属性</h2><ul><li>list-style-type: none;  属性值（设置列表项标记的类型）</li></ul><h2 id="元素位置属性"><a href="#元素位置属性" class="headerlink" title="元素位置属性"></a>元素位置属性</h2><ul><li>position位置属性值: <ol><li>static - 静态定位 - 浏览器的默认定位，不可改变</li><li>relative - 相对定位 - 相对于原来正常的位置，可用（top、bottom、left、right）移动位置</li><li>absolute - 绝对定位 - 相对于父元素来设置定位</li><li>fixed - 固定位置 - 相对于浏览器位置来设置位置</li></ol></li><li>float位置属性值：<ol><li>left - 元素浮动到左边</li><li>right - 元素浮动到右边</li></ol></li><li>display位置属性值：<ol><li>inline-block - 元素在一条线上</li><li>block - 元素在默认位置</li><li>none - 元素不显示（页面其他元素会自动占位）</li></ol></li></ul><h2 id="元素显隐性属性"><a href="#元素显隐性属性" class="headerlink" title="元素显隐性属性"></a>元素显隐性属性</h2><ul><li>display显示属性值: <ol><li>block - 元素在默认位置</li><li>inline-block - 元素在一条线上</li><li>none - 元素不显示（页面其他元素会自动占位）</li></ol></li><li>visibility可见性属性值: <ol><li>visible - 默认可见</li><li>hidden - 不可见（隐藏后，页面保留原位置，不自动占位）</li></ol></li></ul><h1 id="第三方js库"><a href="#第三方js库" class="headerlink" title="第三方js库"></a>第三方js库</h1><ul><li>url - <a href="http://www.bootcdn.cn" target="_blank" rel="noopener">www.bootcdn.cn</a></li></ul><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><ul><li>作用：交互式行为。</li><li>JavaScript 对大小写是敏感的。</li><li>JavaScript 使用 Unicode 字符集。</li></ul><p>代码示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设定按钮键，并指定按钮的触发事件,onclick：单机鼠标（点击） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"showContent()"</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//JavaScript的函数命名必须为‘驼峰式命名法’</span></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showContent</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.alert(<span class="string">'窗口警报'</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="js规范写法"><a href="#js规范写法" class="headerlink" title="js规范写法"></a>js规范写法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加事件监听器 - load</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, () =&gt; &#123; content &#125;)</span><br><span class="line"><span class="comment">// 及时调用函数</span></span><br><span class="line">+<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; content &#125;()</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; content &#125;)()</span><br><span class="line">(<span class="function"><span class="params">()</span> =&gt;</span> &#123;content &#125;)()</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>JavaScript 有多种数据类型：数字，字符串，数组，对象等等：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">16</span>;                                  <span class="comment">// Number 通过数字字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> points = x * <span class="number">10</span>;                              <span class="comment">// Number 通过表达式字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> lastName = <span class="string">"Johnson"</span>;                         <span class="comment">// String 通过字符串字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> cars = [<span class="string">"Saab"</span>, <span class="string">"Volvo"</span>, <span class="string">"BMW"</span>];              <span class="comment">// Array  通过数组字面量赋值</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;<span class="attr">firstName</span>:<span class="string">"John"</span>, <span class="attr">lastName</span>:<span class="string">"Doe"</span>&#125;;  <span class="comment">// Object 通过对象字面量赋值</span></span><br></pre></td></tr></table></figure><h2 id="变量、常量"><a href="#变量、常量" class="headerlink" title="变量、常量"></a>变量、常量</h2><ul><li>在编程语言中，变量、常量用于存储数据值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义全局变量：var</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">5</span>;  <span class="comment">//a可以重新赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义块级变量：let</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">8</span>;   <span class="comment">//a可以重新赋值</span></span><br><span class="line"><span class="comment">//一对花括号可以构成一个块级作用域，let定义的变量就是块级作用域变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义常量：const</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">6</span>;  <span class="comment">//a不可以二次赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断变量类型：typeof()；js中只有number类型，没有float类型</span></span><br><span class="line"><span class="keyword">typeof</span>(a)</span><br><span class="line"><span class="comment">//js中的空值：null</span></span><br><span class="line">a = <span class="literal">null</span></span><br><span class="line"><span class="comment">//js中的[]为数组类型；</span></span><br><span class="line"><span class="comment">//js中的符号类型：symbol</span></span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><ul><li>JavaScript 可以通过不同的方式来输出数据：<ol><li>使用 <strong>window.alert()</strong> 弹出警告框。</li><li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li><li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li><li>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</li></ol></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a><em>算数运算符</em></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加、减、乘、除、取余、次方、递增、递减</span></span><br><span class="line"><span class="number">1</span>+<span class="number">2</span>;  <span class="number">5</span><span class="number">-3</span>;  <span class="number">3</span>*<span class="number">8</span>;  <span class="number">9</span>/<span class="number">3</span>;  <span class="number">5</span>%<span class="number">3</span>;  <span class="number">2</span>**<span class="number">3</span>;  i++;i+=<span class="number">1</span>;  i--;i-=<span class="number">1</span>;</span><br><span class="line"><span class="comment">// 整除 - parseInt();  // - 代表注释</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">9</span>/<span class="number">6</span>)</span><br><span class="line"><span class="comment">// 两个数字相加，返回数字相加的和，如果数字与字符串相加，返回字符串，如下实例：</span></span><br><span class="line">x=<span class="number">5</span>+<span class="number">5</span>;  <span class="comment">// 10</span></span><br><span class="line">y=<span class="string">"5"</span>+<span class="number">5</span>;  <span class="comment">// 55</span></span><br><span class="line">z=<span class="string">"Hello"</span>+<span class="number">5</span>;  <span class="comment">// Hellow5</span></span><br><span class="line"><span class="keyword">var</span> result1=<span class="number">5</span>+<span class="number">5</span>+<span class="string">"abc"</span>; <span class="comment">//结果将是"10abc"</span></span><br><span class="line"><span class="keyword">var</span> result2= <span class="string">""</span>+<span class="number">5</span>+<span class="number">5</span>+<span class="string">"abc"</span>; <span class="comment">//结果将是"55abc"</span></span><br><span class="line"><span class="comment">// 规则:如果把数字与字符串相加，结果将成为字符串！</span></span><br><span class="line"><span class="comment">// 判断变量类型 - typeof()</span></span><br><span class="line"><span class="keyword">typeof</span>(y)</span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a><em>赋值运算符</em></h3><table><thead><tr><th align="left">运算符</th><th align="left">例子</th><th align="left">等同于</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">x=y</td><td align="left"></td></tr><tr><td align="left">+=</td><td align="left">x+=y</td><td align="left">x=x+y</td></tr><tr><td align="left">-=</td><td align="left">x-=y</td><td align="left">x=x-y</td></tr><tr><td align="left">*=</td><td align="left">x*=y</td><td align="left">x=x*y</td></tr><tr><td align="left">/=</td><td align="left">x/=y</td><td align="left">x=x/y</td></tr><tr><td align="left">%=</td><td align="left">x%=y</td><td align="left">x=x%y</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a><em>逻辑运算符</em></h3><ul><li>逻辑与 - &amp;&amp;</li><li>逻辑或 - ||</li><li>逻辑非 - !<ol><li>如果一个操作数是一个对象，返回false;</li><li>如果一个操作数是一个空字符串，返回false;</li><li>如果一个操作数是一个非空字符串，返回false</li><li>如果一个操作数是一个数值0，返回true;</li><li>如果一个操作数是任意的非零字符，返回false;</li><li>如果一个操作数是null，返回true;</li><li>如果一个操作数是NaN，返回true;</li><li>如果一个操作数是undefined，返回true;</li></ol></li></ul><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a><em>位运算符</em></h3><table><thead><tr><th align="left">位运算符</th><th align="left">用法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">按位与（ AND）</td><td align="left"><code>a &amp; b</code></td><td align="left">对于每一个比特位，只有两个操作数相应的比特位都是1时，结果才为1，否则为0。</td></tr><tr><td align="left">按位或（OR）</td><td align="left">`a</td><td align="left">b`</td></tr><tr><td align="left">按位异或（XOR）</td><td align="left"><code>a ^ b</code></td><td align="left">对于每一个比特位，当两个操作数相应的比特位有且只有一个1时，结果为1，否则为0。</td></tr><tr><td align="left">按位非（NOT）</td><td align="left"><code>~ a</code></td><td align="left">反转操作数的比特位，即0变成1，1变成0。</td></tr><tr><td align="left">左移（Left shift）</td><td align="left"><code>a &lt;&lt; b</code></td><td align="left">将 <code>a</code> 的二进制形式向左移 <code>b</code> (&lt; 32) 比特位，右边用0填充。</td></tr><tr><td align="left">有符号右移</td><td align="left"><code>a &gt;&gt; b</code></td><td align="left">将 a 的二进制表示向右移<code>b</code>(&lt; 32) 位，丢弃被移出的位。</td></tr><tr><td align="left">无符号右移</td><td align="left"><code>a &gt;&gt;&gt; b</code></td><td align="left">将 a 的二进制表示向右移<code>b</code>(&lt; 32) 位，丢弃被移出的位，并使用 0 在左侧填充。</td></tr></tbody></table><h3 id="逗号操作符"><a href="#逗号操作符" class="headerlink" title="逗号操作符"></a><em>逗号操作符</em></h3><ul><li>对它的每个操作数求值（从左到右），并返回最后一个操作数的值。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">x = (x++, x);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line"><span class="comment">// expected output: 2</span></span><br><span class="line"></span><br><span class="line">x = (<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x);</span><br><span class="line"><span class="comment">// expected output: 3</span></span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a><em>比较运算符</em></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 大于、小于、等于、一致/严格/绝对等于、不相等、不一致/严格/绝对等于、大于等于、小于等于</span></span><br><span class="line">x &gt; y;  x &lt; y;  x == y;  x === y;  x != y;  x !== y;  x &gt;= y;  x &lt;= y;  <span class="comment">//返回值 - true/false</span></span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a><em>三元运算符</em></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件 ？ 满足条件执行的代码 ： 不满足条件执行的代码</span></span><br><span class="line">condition ? trueContent : falseContent</span><br></pre></td></tr></table></figure><h2 id="if-条件语句"><a href="#if-条件语句" class="headerlink" title="if  条件语句"></a>if  条件语句</h2><ul><li><strong>if 语句</strong> - 只有当指定条件为 true 时，使用该语句来执行代码</li><li><strong>if…else 语句</strong> - 当条件为 true 时执行代码，当条件为 false 时执行其他代码</li><li><strong>if…else if….else 语句</strong>- 使用该语句来选择多个代码块之一来执行</li><li><strong>switch 语句</strong> - 使用该语句来选择多个代码块之一来执行</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition)&#123;content&#125;</span><br><span class="line"><span class="keyword">if</span> (condition)&#123;content1&#125; <span class="keyword">else</span>&#123;content2&#125;</span><br><span class="line"><span class="keyword">if</span> (condition1)&#123;content1&#125; <span class="keyword">else</span> <span class="keyword">if</span>(condition2)&#123;conten2t&#125; <span class="keyword">else</span>&#123;content3&#125;</span><br></pre></td></tr></table></figure><h2 id="switch-条件语句"><a href="#switch-条件语句" class="headerlink" title="switch 条件语句"></a>switch 条件语句</h2><ul><li>注意：case后面必须写固定值，不能写范围；若要写范围，就用if语句</li></ul><p><em>判断今天是星期几</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断今天是星期几</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x;</span><br><span class="line">    <span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>().getDay();</span><br><span class="line">    <span class="keyword">switch</span> (d)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:x=<span class="string">"今天是星期日"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:x=<span class="string">"今天是星期一"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:x=<span class="string">"今天是星期二"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:x=<span class="string">"今天是星期三"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:x=<span class="string">"今天是星期四"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:x=<span class="string">"今天是星期五"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:x=<span class="string">"今天是星期六"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=x;</span><br><span class="line">&#125;</span><br><span class="line">myFunction()</span><br></pre></td></tr></table></figure><p>for循环</p><ul><li>循环可以将代码块执行指定的次数。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 常用for循环格式 - for(;;)&#123;&#125;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i &lt; arr.length; i++)&#123; content &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for/in 语句循环遍历对象的属性：</span></span><br><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">fname</span>:<span class="string">"John"</span>,<span class="attr">lname</span>:<span class="string">"Doe"</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> person)  <span class="comment">// x 为属性名</span></span><br><span class="line">&#123;</span><br><span class="line">    txt=txt + person[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for/of循环 - ES6新语法 - 功能非常强大</span></span><br><span class="line">stringA = <span class="string">'aucnwcniocio'</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> value <span class="keyword">of</span> stringA)&#123;</span><br><span class="line">    alert(value)</span><br><span class="line">    <span class="comment">// document.write(value + '&lt;br&gt;')</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// while循环 - condition只能写添加</span></span><br><span class="line"><span class="keyword">while</span>(condition)&#123; content &#125;  <span class="comment">// 不加条件，程序会死循环</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// do/while - 至少执行一次 - false也要执行一次</span></span><br><span class="line"><span class="keyword">do</span>&#123; content &#125;<span class="keyword">while</span>(condition);</span><br></pre></td></tr></table></figure><h2 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h2><ul><li>break - 终止、跳出循环</li><li>continue - 跳过本次循环，继续执行下一次循环</li></ul><h2 id="typeof语句"><a href="#typeof语句" class="headerlink" title="typeof语句"></a>typeof语句</h2><ul><li>作用 - 查看数据类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="string">"John"</span>                 <span class="comment">// 返回 string</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">3.14</span>                   <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span>                    <span class="comment">// 返回 number</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">false</span>                  <span class="comment">// 返回 boolean</span></span><br><span class="line"><span class="keyword">typeof</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]              <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> &#123;<span class="attr">name</span>:<span class="string">'John'</span>, <span class="attr">age</span>:<span class="number">34</span>&#125;  <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="keyword">new</span> <span class="built_in">Date</span>()             <span class="comment">// 返回 object</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;         <span class="comment">// 返回 function</span></span><br><span class="line"><span class="keyword">typeof</span> myCar                  <span class="comment">// 返回 undefined (如果 myCar 没有声明)</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span>                   <span class="comment">// 返回 object</span></span><br></pre></td></tr></table></figure><h2 id="常用数据类型转换"><a href="#常用数据类型转换" class="headerlink" title="常用数据类型转换"></a>常用数据类型转换</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>(x)         <span class="comment">// 将变量 x 转换为字符串并返回</span></span><br><span class="line"><span class="built_in">String</span>(<span class="number">123</span>)       <span class="comment">// 将数字 123 转换为字符串并返回</span></span><br><span class="line"><span class="built_in">String</span>(<span class="number">100</span> + <span class="number">23</span>)  <span class="comment">// 将数字表达式转换为字符串并返回</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(x)  <span class="comment">// 将返回结果转换为一个整数</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"10"</span>);<span class="comment">//返回 10</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"19"</span>,<span class="number">10</span>);<span class="comment">//返回 19 (10+9)</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"11"</span>,<span class="number">2</span>);<span class="comment">//返回 3 (2+1)</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"17"</span>,<span class="number">8</span>);<span class="comment">//返回 15 (8+7)</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"1f"</span>,<span class="number">16</span>);<span class="comment">//返回 31 (16+15)</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">"010"</span>);<span class="comment">//未定：返回 10 或 8</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义普通函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params">param</span>)</span>&#123; content &#125;</span><br><span class="line"><span class="comment">// 定义箭头函数</span></span><br><span class="line"><span class="keyword">let</span> myFcunction = <span class="function">(<span class="params">param</span>) =&gt;</span> &#123; content &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义匿名/无名函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">param</span>)</span>&#123; content &#125;</span><br><span class="line">(param) =&gt; &#123; content &#125;</span><br></pre></td></tr></table></figure><h2 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h2><h3 id="最新类定义"><a href="#最新类定义" class="headerlink" title="最新类定义"></a>最新类定义</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Person类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//在类中，必须加constructor关键词，定义变量</span></span><br><span class="line">    <span class="keyword">constructor</span>(name, age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name</span><br><span class="line">        <span class="keyword">this</span>.age = age</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//在类中定义方法</span></span><br><span class="line">    eat(food)&#123;</span><br><span class="line">        <span class="comment">//document.write()在网页上写入数据，注意设置“样式表”</span></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在吃<span class="subst">$&#123;food&#125;</span>&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    watchAv()&#123;</span><br><span class="line">        <span class="comment">//在方法中添加条件判断</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.age &lt; <span class="number">18</span>)&#123;</span><br><span class="line">            <span class="comment">// alert(this.name + '只能看《熊出没》')</span></span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>只能看《熊出没》&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// alert(this.name + '正在看片...')</span></span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在看片...&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象 - 必须new</span></span><br><span class="line"><span class="comment">// new作用 - 给对象分配空间</span></span><br><span class="line"><span class="keyword">let</span> person1 = <span class="keyword">new</span> Person(<span class="string">'张三'</span>, <span class="number">20</span>)</span><br><span class="line"><span class="keyword">let</span> person2 = <span class="keyword">new</span> Person(<span class="string">'李四'</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment">//调用类属性</span></span><br><span class="line">person1.eat(<span class="string">'蛋炒饭'</span>)</span><br><span class="line">person2.watchAv()</span><br></pre></td></tr></table></figure><h3 id="构造器函数"><a href="#构造器函数" class="headerlink" title="构造器函数"></a>构造器函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造器函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">    <span class="keyword">this</span>.age = age</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意使用关键词：prototype原形</span></span><br><span class="line">Person.prototype.eat = <span class="function"><span class="keyword">function</span>(<span class="params">food</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在吃<span class="subst">$&#123;food&#125;</span>&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.watchAv = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.age &lt; <span class="number">18</span>)&#123;</span><br><span class="line">        <span class="comment">// alert(this.name + '只能看《熊出没》')</span></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>只能看《熊出没》&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// alert(this.name + '正在看片...')</span></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在看片...&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="keyword">let</span> person1 = <span class="keyword">new</span> Person(<span class="string">'张三'</span>, <span class="number">20</span>)</span><br><span class="line"><span class="keyword">let</span> person2 = <span class="keyword">new</span> Person(<span class="string">'李四'</span>, <span class="number">18</span>)</span><br><span class="line"><span class="comment">//调用类属性</span></span><br><span class="line">person1.eat(<span class="string">'蛋炒饭'</span>)</span><br><span class="line">person2.watchAv()</span><br></pre></td></tr></table></figure><h3 id="对象表达式（原始类创建法）"><a href="#对象表达式（原始类创建法）" class="headerlink" title="对象表达式（原始类创建法）"></a>对象表达式（原始类创建法）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义常量</span></span><br><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">    <span class="comment">//定义属性 - 注意各个属性之间的分隔符 - 逗号</span></span><br><span class="line">    name: <span class="string">'张三'</span>,</span><br><span class="line">    age: <span class="number">18</span>,</span><br><span class="line">    eat: <span class="function"><span class="keyword">function</span>(<span class="params">food</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// alert(this.name + '正在吃' + food)</span></span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在吃<span class="subst">$&#123;food&#125;</span>&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    watchAv: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.age &gt;= <span class="number">18</span>)&#123;</span><br><span class="line">            <span class="comment">// alert(this.name + '正在看片。。。')</span></span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>正在看片。。。&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// alert(this.name + '只能看《熊出没》')</span></span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">`&lt;div class="divClass"&gt;<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>只能看《熊出没》&lt;/div&gt;&lt;br&gt;`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//直接调用属性</span></span><br><span class="line">person.eat(<span class="string">'红烧肉'</span>)</span><br><span class="line"><span class="comment">//修改属性</span></span><br><span class="line">person.age = <span class="number">17</span></span><br><span class="line">person.watchAv()</span><br></pre></td></tr></table></figure><h2 id="原生js实现关闭按钮效果"><a href="#原生js实现关闭按钮效果" class="headerlink" title="原生js实现关闭按钮效果"></a>原生js实现关闭按钮效果</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义变量closebtn 通过id获取元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> closebtn = <span class="built_in">document</span>.getElementById(<span class="string">'closeBtn'</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 关闭按钮 - 添加事件监听器 - 点击触发</span></span></span><br><span class="line"><span class="actionscript">    closebtn.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取相对应的元素 - 通过id</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> advDiv = <span class="built_in">document</span>.getElementById(<span class="string">'adv'</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 指定元素 - 样式：显示元素属性 - 不显示（达到关闭效果）</span></span></span><br><span class="line"><span class="actionscript">        advDiv.style.display=<span class="string">'none'</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面写入数据"><a href="#页面写入数据" class="headerlink" title="页面写入数据"></a>页面写入数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串``撇：里面可以折行，也可以加入占位符：$&#123;&#125;、&amp;times;代表乘号、&amp;nbsp;代表空格</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">`<span class="subst">$&#123;j&#125;</span>&amp;times;<span class="subst">$&#123;i&#125;</span>=<span class="subst">$&#123;j*i&#125;</span>&amp;nbsp;`</span>)</span><br></pre></td></tr></table></figure><h2 id="页面弹窗显示数据"><a href="#页面弹窗显示数据" class="headerlink" title="页面弹窗显示数据"></a>页面弹窗显示数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="string">`<span class="subst">$&#123;j&#125;</span>&amp;times;<span class="subst">$&#123;i&#125;</span>=<span class="subst">$&#123;j*i&#125;</span>&amp;nbsp;`</span>)</span><br></pre></td></tr></table></figure><h2 id="原生js实现静态九九乘法表"><a href="#原生js实现静态九九乘法表" class="headerlink" title="原生js实现静态九九乘法表"></a>原生js实现静态九九乘法表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="comment">/*定义样式表*/</span></span></span><br><span class="line">            table &#123;</span><br><span class="line">                border-collapse: collapse;</span><br><span class="line">                margin: auto;</span><br><span class="line">            &#125;</span><br><span class="line">            td &#123;</span><br><span class="line">                border: 2px solid black;</span><br><span class="line">                width: 70px;</span><br><span class="line">                height: auto;</span><br><span class="line">                text-align: center;</span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(255, 0, 0, 0<span class="selector-class">.5</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 添加表格标签，创建表格</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">`&lt;table&gt;`</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义行的循环次数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i+=<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.write(<span class="string">`&lt;tr&gt;`</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 定义列的循环次数</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">1</span>;j&lt;=i;j+=<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.document.write(<span class="string">`&lt;td&gt;`</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(<span class="string">`<span class="subst">$&#123;j&#125;</span>&amp;times;<span class="subst">$&#123;i&#125;</span>=<span class="subst">$&#123;j*i&#125;</span>`</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.write(<span class="string">`&lt;/td&gt;`</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.write(<span class="string">`&lt;/tr&gt;`</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">`&lt;/table&gt;`</span>)</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="原生js实现电子时钟功能"><a href="#原生js实现电子时钟功能" class="headerlink" title="原生js实现电子时钟功能"></a>原生js实现电子时钟功能</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="comment">/*设置时钟的显示框*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-id">#clock</span> &#123;</span></span><br><span class="line">                width: 280px;</span><br><span class="line">                height: 30px;</span><br><span class="line"><span class="css">                <span class="comment">/*水平居中*/</span></span></span><br><span class="line">                line-height: 30px;</span><br><span class="line"><span class="css">                <span class="selector-tag">background-color</span>: <span class="selector-id">#7ad11c</span>;</span></span><br><span class="line">                text-align: center;</span><br><span class="line">                right: 10px;</span><br><span class="line">                top: 10px;</span><br><span class="line">                position: absolute;</span><br><span class="line">                color: white;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义一个块级元素标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"clock"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//定义常量 - 通过id获取页面元素</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> clockDiv = <span class="built_in">document</span>.getElementById(<span class="string">'clock'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//定义常量 - 设置一周的星期数</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> weekday = [<span class="string">'日'</span>,<span class="string">'一'</span>,<span class="string">'二'</span>,<span class="string">'三'</span>,<span class="string">'四'</span>,<span class="string">'五'</span>,<span class="string">'六'</span>]</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">showClock</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//获取当前时间</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> year = now.getFullYear()</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// js中的getMonth()默认是由0~11的，所有直接调用这个方法的话数据会少1.因此需要额外加上1。</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> month = now.getMonth() + <span class="number">1</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> date = now.getDate()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> hour = now.getHours()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> minutes = now.getMinutes()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> seconds = now.getSeconds()</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//当秒数小于10时，默认只显示一位，可进行string的拼接，完成两位数</span></span></span><br><span class="line">                if(seconds &lt; 10)&#123;</span><br><span class="line"><span class="actionscript">seconds = <span class="string">'0'</span> + seconds </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">//获取星期数，默认[0,1,2,3,4,5,6]</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> day = now.getDay()</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//定义页面的输出格式</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> fullStr = <span class="string">`<span class="subst">$&#123;year&#125;</span>年<span class="subst">$&#123;month&#125;</span>月<span class="subst">$&#123;date&#125;</span>日 <span class="subst">$&#123;hour&#125;</span>:<span class="subst">$&#123;minutes&#125;</span>:<span class="subst">$&#123;seconds&#125;</span> 星期<span class="subst">$&#123;weekday[day]&#125;</span>`</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">//将数据写入提前定义好的元素框中</span></span></span><br><span class="line">                clockDiv.textContent = fullStr</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//调用函数 - 只显示一次时间</span></span></span><br><span class="line">            showClock()</span><br><span class="line"><span class="actionscript">            <span class="comment">//定义计时器：1000毫秒=1秒钟（依次调用执行代码）</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.setInterval(showClock,<span class="number">1000</span>)</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="阻止事件的默认行为"><a href="#阻止事件的默认行为" class="headerlink" title="阻止事件的默认行为"></a>阻止事件的默认行为</h2><p><strong><em>方法一（推荐）</em></strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在回调函数体中，添加一个preventDefault()方法</span></span><br><span class="line">anchor[i].addEventListener(<span class="string">'click'</span>, (evt) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 添加事件对象的preventDefault方法 - 阻止事件的默认行为</span></span><br><span class="line">    evt.preventDefault()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><em>方法二</em></strong></p><ul><li>a标签为超链接标签，当执行a标签中的内容时，会默认刷新页面。</li><li>href=”javascript:void(0);”这个的含义是，让超链接去执行一个js函数，而不是去跳转到一个地址，而void(0)表示一个空的方法，也就是不执行js函数。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加 href="javascript:void(0)" 表示：伪协议，不做任何操作，阻止a标签的默认行为 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 每个a标签的href属性都要添加 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="阻止事件的传播"><a href="#阻止事件的传播" class="headerlink" title="阻止事件的传播"></a>阻止事件的传播</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evt.stopPropagation()  <span class="comment">// 阻止事件的传播</span></span><br></pre></td></tr></table></figure><h2 id="原生js获取页面元素的方法"><a href="#原生js获取页面元素的方法" class="headerlink" title="原生js获取页面元素的方法"></a>原生js获取页面元素的方法</h2><h3 id="图片循环切换效果"><a href="#图片循环切换效果" class="headerlink" title="图片循环切换效果"></a>图片循环切换效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#adv</span> &#123;</span></span><br><span class="line">                width: 960px;</span><br><span class="line">                margin: auto;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.aimgs</span> &#123;</span></span><br><span class="line">                width: 960px;</span><br><span class="line">                margin: auto;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"adv"</span> <span class="attr">class</span>=<span class="string">"aimgs"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;img src="" alt=""&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/日本国模人体艺术图片.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"960"</span> <span class="attr">name</span>=<span class="string">"photo01"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;img src="images/蓝色星空近月雪山雪景.jpg" alt="" width="960" name="photo02"&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//document.getElementById('标识') --&gt; HTMLElement</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//document.getElementsByTagName('标签名') --&gt; NodeList</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//document.getElementsByClassName('类名') --&gt; NodeList</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//document.querySelector('样式表选择器') --&gt; HTMLElement</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//document.querySelectorAll('样式表选择器') --&gt; NodeList</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//firstChild / lastChild / children --&gt; 获取子节点</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//parentNode --&gt; 获取父节点</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//previousSibiling / nextSibiling --&gt; 获取兄弟节点</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.getElementById('adv').children[0]</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.getElementsByTagName('img')[1]</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.getElementsByClassName('aimgs')</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.querySelector('#adv&gt;img')</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.querySelectorAll('#adv&gt;img')[0]</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// const img = document.getElementById('adv').children[0]</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> img = <span class="built_in">document</span>.querySelector(<span class="string">'#adv&gt;img'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> imageNames = [<span class="string">'日本美女背影人体艺术图片.jpg'</span>,<span class="string">'日本大胆美女人体写真图片.jpg'</span>,<span class="string">'日本国模人体艺术图片.jpg'</span>, <span class="string">'蓝色星空近月雪山雪景.jpg'</span>]</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> imageIndex = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">switchImage</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 先输出第一张图片，再 +1</span></span></span><br><span class="line"><span class="actionscript">                img.src = <span class="string">'images/'</span> + imageNames[imageIndex]</span></span><br><span class="line">                imageIndex += 1</span><br><span class="line"><span class="actionscript">                <span class="comment">// 图片数组中的 “下标” 与 “总长度” 取余 - 可以达到依次循环 “下标” 的效果</span></span></span><br><span class="line">                imageIndex %= imageNames.length</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义计时器setInterval(执行的函数, 毫秒) - 循环切换图片</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> timeId = setInterval(switchImage, <span class="number">2000</span>)</span></span><br><span class="line"><span class="actionscript">   <span class="comment">// 添加时间监听器 - 鼠标放置触发</span></span></span><br><span class="line"><span class="actionscript">            img.addEventListener(<span class="string">'mouseover'</span>,() =&gt; clearInterval(timeId))</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 添加时间监听器 - 鼠标移除触发</span></span></span><br><span class="line"><span class="actionscript">            img.addEventListener(<span class="string">'mouseout'</span>,() =&gt; &#123;timeId = setInterval(switchImage, <span class="number">2000</span>)&#125;)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 添加时间监听器 - 鼠标移动触发（加速图片切换速度，秒换）</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// img.addEventListener('mousemove',() =&gt; &#123;timeId = setInterval(switchImage, 2000)&#125;)</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="原生js修改页面元素的标签属性"><a href="#原生js修改页面元素的标签属性" class="headerlink" title="原生js修改页面元素的标签属性"></a>原生js修改页面元素的标签属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#buttons</span> &#123;</span></span><br><span class="line">                text-align: center;</span><br><span class="line">            &#125;</span><br><span class="line">            button &#123;</span><br><span class="line">                width: 120px;</span><br><span class="line">                height: 50px;</span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">                padding-top: 10px;</span><br><span class="line">                font: 30px/10px "黑体";</span><br><span class="line">                border: none;</span><br><span class="line">                background-color: red;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>草莓<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>蓝莓<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>榴莲<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>芒果<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">disabled</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//通过选择器获取页面多个元素 - document.querySelectorAll() - NodeList</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> allButtons = <span class="built_in">document</span>.querySelectorAll(<span class="string">'#buttons&gt;button'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// forEach()的简洁写法</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// forEach() - 遍历获取到的元素数组 - button</span></span></span><br><span class="line"><span class="javascript">            allButtons.forEach(<span class="function"><span class="params">button</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 无名函数体 - 给button元素添加事件监听器 - click触发</span></span></span><br><span class="line"><span class="actionscript">                button.addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 无名函数体 - 定义复选框 = button元素数组中的第一个元素</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> checkbox = button.firstChild</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 复选框 - 选中 = 取反值</span></span></span><br><span class="line">                    checkbox.checked = !checkbox.checked</span><br><span class="line"><span class="actionscript">                    <span class="comment">// button元素 - 样式表 - 背景颜色 </span></span></span><br><span class="line"><span class="actionscript">                    button.style.backgroundColor = checkbox.checked ? <span class="string">'green'</span> : <span class="string">'red'</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//依次循环，获取相应的页面元素 - 注意变量的设置 - var/let</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ES6的做法 - 设置块级变量，正常运行</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// for (let i = 0; i &lt; allButtons.length; i += 1) &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// // 闭包（closure） - 将一个块级作用域的变量的生命周期延长至了全局</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// allButtons[i].addEventListener('click', () =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// let checkbox = allButtons[i].firstChild</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// checkbox.checked = !checkbox.checked</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// allButtons[i].style.backgroundColor = checkbox.checked ? 'green' : 'red'</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// ES5的做法 - 回调式编程 - 在函数中添加一个事件对象作为参数（event不是关键词）</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 我们知道事件发生时要做什么，但是我们不知道事件什么时候发生</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 在这种情况下，我们就要放入一个回调函数（callback function）</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 绑定事件时传入的函数，通常我们称之为回调函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当浏览器执行该回调函数时，会传入一个代表事件的对象</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 通过事件对象的target属性，就可以获取到事件源（谁引发了事件）</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 注意 - 全局变量</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// for (var i = 0; i &lt; allButtons.length; i += 1) &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// allButtons[i].addEventListener('click', (event) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// let checkbox = event.target.firstChild</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// checkbox.checked = !checkbox.checked</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// event.target.style.backgroundColor = checkbox.checked? 'green' : 'red'</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="原生js修改标签的属性和内容"><a href="#原生js修改标签的属性和内容" class="headerlink" title="原生js修改标签的属性和内容"></a>原生js修改标签的属性和内容</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改标签的文本内容 - textContent</span></span><br><span class="line"><span class="comment">// 修改标签的内容 - innerHTML</span></span><br><span class="line"><span class="comment">// 修改标签属性 - img.src - img.title - img.style - Checkbox.checked</span></span><br></pre></td></tr></table></figure><h3 id="原生js添加和删除页面元素"><a href="#原生js添加和删除页面元素" class="headerlink" title="原生js添加和删除页面元素"></a>原生js添加和删除页面元素</h3><h4 id="动态列表效果"><a href="#动态列表效果" class="headerlink" title="动态列表效果"></a>动态列表效果</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#container</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">width</span><span class="selector-pseudo">:960px</span>;</span></span><br><span class="line">                height: auto;</span><br><span class="line">                margin: auto;</span><br><span class="line"><span class="css">                <span class="comment">/* text-align: center; */</span></span></span><br><span class="line"><span class="css">                <span class="comment">/* background-color: #55FF00; */</span></span></span><br><span class="line">                align-content: center;</span><br><span class="line"><span class="css">                <span class="comment">/* position: relative ; */</span></span></span><br><span class="line"><span class="css">                <span class="comment">/* left: 600px; */</span></span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#fruits</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">                width: 150px;</span><br><span class="line">                height: auto;</span><br><span class="line">                font: 20px/15px '黑体';</span><br><span class="line">                color: white;</span><br><span class="line">                text-align: center;</span><br><span class="line">                padding: 10px;</span><br><span class="line">                margin: 2px;</span><br><span class="line">                background-color: rgba(85, 170, 255,1);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#fruits</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">                float: right;</span><br><span class="line">                color: white;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-tag">div</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span></span><br><span class="line">                width: 170px;</span><br><span class="line">                height: 30px;</span><br><span class="line">                border: none;</span><br><span class="line">                border-bottom: 1px solid darkgray;</span><br><span class="line">                outline: none;</span><br><span class="line">                position: relative;</span><br><span class="line">                left: 40px;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#ok</span> &#123;</span></span><br><span class="line">                width: 80px;</span><br><span class="line">                height: auto;</span><br><span class="line">                font: 20px/15px '黑体';</span><br><span class="line">                text-align: center;</span><br><span class="line">                color: white;</span><br><span class="line">                padding: 10px;</span><br><span class="line">                border: none;</span><br><span class="line">                background-color: red;</span><br><span class="line">                outline: none;</span><br><span class="line">                position: relative;</span><br><span class="line">                left: 40px;</span><br><span class="line"><span class="css">                <span class="comment">/* 光标 - 指针 */</span></span></span><br><span class="line">                cursor: pointer; </span><br><span class="line">            &#125;</span><br><span class="line">            input &#123;</span><br><span class="line">                text-align: center;</span><br><span class="line">                font: 20px/10px "黑体";</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"fruits"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 添加 href="javascript:void(0)" 表示：伪协议，不做任何操作，阻止a标签的默认行为 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>火龙果<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>西瓜<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"ok"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"确定"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义清除元素的函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">removeListItem</span><span class="params">(evt)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 阻止事件的默认行为</span></span></span><br><span class="line">                evt.preventDefault()</span><br><span class="line"><span class="actionscript">                <span class="comment">// 通过事件中的target属性 - 获取到标签的父节点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> li = evt.target.parentNode</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 通过父标签 - 清除字标签</span></span></span><br><span class="line">                ul.removeChild(li)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义添加元素的函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">addListItem</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> name = input.value.trim()</span></span><br><span class="line">                if (name)&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 通过document对象的createElement()方法，可以创建新的标签</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 在li标签中添加文本内容 - name值</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// li.textContent = name</span></span></span><br><span class="line">                    li.innerHTML = name</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 创建a标签</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> a = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 在a标签中添加内容 - 实体字符 - ×（cha）</span></span></span><br><span class="line"><span class="actionscript">                    a.innerHTML = <span class="string">'&amp;times;'</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 在a标签中添加属性 - href</span></span></span><br><span class="line"><span class="actionscript">                    a.href = <span class="string">''</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// a标签 - 添加事件监听器 - 鼠标点击</span></span></span><br><span class="line"><span class="actionscript">                    a.addEventListener(<span class="string">'click'</span>,removeListItem)</span></span><br><span class="line">                    li.appendChild(a)</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 通过父标签的appendChild()方法，可将字标签追加到父标签的末尾</span></span></span><br><span class="line">                    ul.appendChild(li)</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 通过父标签的insertBefore(arg1,arg2)方法，可将字标签添加到父标签的指定位置</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// ul.insertBefore(li, ul.firstChild)</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 清除输入框中的值 - 默认值</span></span></span><br><span class="line"><span class="actionscript">                    input.value = <span class="string">''</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 标签的focus()方法，可以让标签获得焦点</span></span></span><br><span class="line">                    input.focus()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 标签的blur()方法，可以让标签失去焦点</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// input.blur()</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取相对应的整个无序列表 - 通过id=“fruits”</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">'#fruits'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取相对应的输入框 - 通过id="fruits"的相邻兄弟选择器</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const input = document.querySelector('#fruits+input')</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// const input = document.querySelector('#fruits+input')</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取相对应的输入框 - 通过ul的下一个兄弟元素</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> input = ul.nextElementSibling</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 输入框 - 添加事件监听器 - 键盘Enter(回车)</span></span></span><br><span class="line"><span class="actionscript">            input.addEventListener(<span class="string">'keypress'</span>, (evt) =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// evt.keyCode - 事件触发代码 - 13(ascii码值)代表Enter</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 页面弹窗，查看触发代码</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// alert(evt.keyCode)</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// evt.which - 解决浏览器兼容问题</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> code = evt.keyCode || evt.which</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 事件触发条件 - Enter(回车)</span></span></span><br><span class="line">                if (code == 13)&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 调用添加元素函数</span></span></span><br><span class="line">                    addListItem()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取相对应的按钮 - 通过id="ok"</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> okButton = <span class="built_in">document</span>.querySelector(<span class="string">'#ok'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 按钮 - 添加事件监听器 - 鼠标点击</span></span></span><br><span class="line"><span class="actionscript">            okButton.addEventListener(<span class="string">'click'</span>, () =&gt; &#123; addListItem() &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取无序列表中的全部超链接 - 生成一个数组</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> anchor = <span class="built_in">document</span>.querySelectorAll(<span class="string">'#fruits&gt;li&gt;a'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// forEach()遍历所有的超链接 - 定义删除函数 - 删除元素</span></span></span><br><span class="line"><span class="javascript">            anchor.forEach(<span class="function"><span class="params">delAnchor</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 给删除函数添加事件监听器 - 点击触发 - 定义触发事件（用无名函数定义）</span></span></span><br><span class="line"><span class="actionscript">                delAnchor.addEventListener(<span class="string">'click'</span>, (event) =&gt; &#123;</span></span><br><span class="line">                    event.preventDefault()</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 触发事件（removeChild关键词） - 通过父类ul，清除li单个列表 - click触发</span></span></span><br><span class="line">                    ul.removeChild(delAnchor.parentNode)</span><br><span class="line"><span class="actionscript">                    <span class="comment">// removeListItem()</span></span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// // 普通for()循环遍历超链接 - 删除元素</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// for(let i = 0; i &lt; anchor.length; i += 1)&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// // 获取到单个元素 - 添加事件监听器 - 设置回调函数 </span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// anchor[i].addEventListener('click', (event) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// // 添加事件对象的preventDefault方法 - 阻止事件的默认行为</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// event.preventDefault()</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// // 设定回调函数中的触发事件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// ul.removeChild(anchor[i].parentNode)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><h2 id="导入jQuery"><a href="#导入jQuery" class="headerlink" title="导入jQuery"></a>导入jQuery</h2><ul><li>url - <a href="http://www.bootcdn.cn/jquery/" target="_blank" rel="noopener">www.bootcdn.cn/jquery/</a></li></ul><h2 id="jQuery规范写法"><a href="#jQuery规范写法" class="headerlink" title="jQuery规范写法"></a>jQuery规范写法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; content &#125;)  <span class="comment">// 第一种写法</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; content &#125;)  <span class="comment">// 第二种写法</span></span><br><span class="line">$(() =&gt; &#123; content &#125;)  <span class="comment">// 第三种写法</span></span><br></pre></td></tr></table></figure><h2 id="jQuery操作表格"><a href="#jQuery操作表格" class="headerlink" title="jQuery操作表格"></a>jQuery操作表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#divTable</span> &#123;</span></span><br><span class="line">                border-collapse: collapse;</span><br><span class="line"><span class="css">                <span class="comment">/* margin: auto; */</span></span></span><br><span class="line">                margin-bottom: 10px;</span><br><span class="line">            &#125;</span><br><span class="line">            th, td &#123;</span><br><span class="line">                border: 1px solid black;</span><br><span class="line">                width: 100px;</span><br><span class="line">                height: 30px;</span><br><span class="line">                text-align: center;</span><br><span class="line">                color: rgba(0, 0, 0, 1);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"divA"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"divTable"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">caption</span>&gt;</span>数据统计表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>身高<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>体重<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5a<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5b<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5c<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5d<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item1e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item2e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item3e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item4e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>item5e<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"buttons"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"pretty"</span>&gt;</span>隔行换色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"cancel"</span>&gt;</span>清除背景色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"clear"</span>&gt;</span>清除所有<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"remove"</span>&gt;</span>删除一行<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"hide"</span>&gt;</span>表格淡出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;script src="js/jquery.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// on/off/one - 绑定事件/取消事件/绑定一次事件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 隔行换色 - css()</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#pretty'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// tr:odd/event - 行：奇数/偶数 - 系统默认第一行为0行</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#divTable&gt;tbody&gt;tr:odd'</span>).css(<span class="string">'background-color'</span>,<span class="string">'lightgray'</span>)</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#divTable&gt;tbody&gt;tr:even'</span>).css(<span class="string">'background-color'</span>,<span class="string">'lightgreen'</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            <span class="comment">// $('选择器') --&gt; jQuery对象 --&gt; 封装了很多方法</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#cancel'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// tr:odd/event - 行：奇数/偶数</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#divTable&gt;tbody&gt;tr'</span>).css(<span class="string">'background-color'</span>,<span class="string">''</span>)</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 清除数据 - empty()</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#clear'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#divTable&gt;tbody&gt;tr'</span>).empty()</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 删除一行(last-child/first-child) - remove()</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#remove'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#divTable&gt;tbody&gt;tr:last-child'</span>).remove()</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 表格淡出/淡入 - fadeOut()/fadeIn()</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#hide'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> content = $(<span class="string">'#hide'</span>).text()</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(content == <span class="string">'表格淡出'</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#divTable'</span>).fadeOut(<span class="number">1000</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">'#hide'</span>).text(<span class="string">'表格淡入'</span>)</span></span><br><span class="line">                    &#125;)</span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#divTable'</span>).fadeIn(<span class="number">2000</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">'#hide'</span>).text(<span class="string">'表格淡出'</span>)</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jQuery实现动态列表"><a href="#jQuery实现动态列表" class="headerlink" title="jQuery实现动态列表"></a>jQuery实现动态列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>动态列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#container</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">width</span><span class="selector-pseudo">:960px</span>;</span></span><br><span class="line">                height: auto;</span><br><span class="line">                margin: auto;</span><br><span class="line"><span class="css">                <span class="comment">/* text-align: center; */</span></span></span><br><span class="line"><span class="css">                <span class="comment">/* background-color: #55FF00; */</span></span></span><br><span class="line">                align-content: center;</span><br><span class="line"><span class="css">                <span class="comment">/* position: relative ; */</span></span></span><br><span class="line"><span class="css">                <span class="comment">/* left: 600px; */</span></span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#fruits</span> &gt; <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">                width: 150px;</span><br><span class="line">                height: auto;</span><br><span class="line">                font: 20px/15px '黑体';</span><br><span class="line">                color: white;</span><br><span class="line">                text-align: center;</span><br><span class="line">                padding: 10px;</span><br><span class="line">                margin: 2px;</span><br><span class="line">                background-color: rgba(85, 170, 255,1);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#fruits</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">                float: right;</span><br><span class="line">                color: white;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-tag">div</span> <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span></span><br><span class="line">                width: 170px;</span><br><span class="line">                height: 30px;</span><br><span class="line">                border: none;</span><br><span class="line">                border-bottom: 1px solid darkgray;</span><br><span class="line">                outline: none;</span><br><span class="line">                position: relative;</span><br><span class="line">                left: 40px;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#ok</span> &#123;</span></span><br><span class="line">                width: 80px;</span><br><span class="line">                height: auto;</span><br><span class="line">                font: 20px/15px '黑体';</span><br><span class="line">                text-align: center;</span><br><span class="line">                color: white;</span><br><span class="line">                padding: 10px;</span><br><span class="line">                border: none;</span><br><span class="line">                background-color: red;</span><br><span class="line">                outline: none;</span><br><span class="line">                position: relative;</span><br><span class="line">                left: 40px;</span><br><span class="line">                cursor: pointer;</span><br><span class="line">            &#125;</span><br><span class="line">            input &#123;</span><br><span class="line">                text-align: center;</span><br><span class="line">                font: 20px/10px "黑体";</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"fruits"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 添加 href="javascript:void(0)" 表示：伪协议，不做任何操作，阻止a标签的默认行为 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>火龙果<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>西瓜<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>×<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"ok"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"确定"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 定义删除元素函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">removeListItem</span><span class="params">(evt)</span> </span>&#123;</span></span><br><span class="line">                evt.preventDefault()</span><br><span class="line"><span class="javascript">                $(evt.target).parent().remove()</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(() =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 删除指定元素</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#fruits&gt;li&gt;a'</span>).on(<span class="string">'click'</span>, removeListItem)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 添加指定元素与删除</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#ok'</span>).on(<span class="string">'click'</span>, (evt) =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 返回被选元素的前一个同级元素</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> input = $(<span class="string">'#ok'</span>).prev()</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> name = input.val().trim()</span></span><br><span class="line">                    if (name) &#123;</span><br><span class="line"><span class="javascript">                        $(<span class="string">'#fruits'</span>).append(</span></span><br><span class="line"><span class="javascript">                            $(<span class="string">'&lt;li&gt;'</span>).text(name).append(</span></span><br><span class="line"><span class="javascript">                                $(<span class="string">'&lt;a href=""&gt;'</span>).html(<span class="string">'&amp;times;'</span>).on(<span class="string">'click'</span>, removeListItem)</span></span><br><span class="line">                            )</span><br><span class="line">                        )</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    input.val(<span class="string">''</span>).get(<span class="number">0</span>).focus()</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jQuery实现周公解梦"><a href="#jQuery实现周公解梦" class="headerlink" title="jQuery实现周公解梦"></a>jQuery实现周公解梦</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>周公解梦<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">            * &#123;</span><br><span class="line"><span class="css">                <span class="comment">/* border: 1px solid red; */</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#sou</span> &#123;</span></span><br><span class="line">                width: 1280px;</span><br><span class="line">                height: 200px;</span><br><span class="line">                text-align: center;</span><br><span class="line">                margin: auto;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#ok</span> &#123;</span></span><br><span class="line">                border: none;</span><br><span class="line">                padding: 15px;</span><br><span class="line"><span class="css">                <span class="selector-tag">background-color</span>: <span class="selector-id">#00a200</span>;</span></span><br><span class="line">                color: white;</span><br><span class="line">                outline: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#ok</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">                background-color: red;</span><br><span class="line">            &#125;</span><br><span class="line">            input &#123;</span><br><span class="line">                margin-top: 150px;</span><br><span class="line">                font: 30px/10px "黑体";</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-tag">input</span><span class="selector-attr">[type=text]</span> &#123;</span></span><br><span class="line">                border: none;</span><br><span class="line"><span class="css">                <span class="selector-tag">border-bottom</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000000</span>;</span></span><br><span class="line">                outline: none;</span><br><span class="line">                text-align: center;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#results</span> &#123;</span></span><br><span class="line">                width: 1280px;</span><br><span class="line">                height: auto;</span><br><span class="line">                text-align: center;</span><br><span class="line">                margin: auto;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-id">#results</span> &gt; <span class="selector-tag">p</span> &#123;</span></span><br><span class="line">                text-align: left;</span><br><span class="line"><span class="css">                <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(140, 208, 103, 0<span class="selector-class">.5</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"sou"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">'input'</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入查询的关键字"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"ok"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"搜索"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"results"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            $(() =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#ok'</span>).on(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> input = $(<span class="string">'#input'</span>).val().trim()</span></span><br><span class="line">                    if (input.length &gt; 0) &#123;</span><br><span class="line"><span class="actionscript">                        <span class="keyword">var</span> url = <span class="string">'http://api.tianapi.com/txapi/dream/index'</span></span></span><br><span class="line"><span class="javascript">                        $.ajax(&#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                            <span class="string">"url"</span>: url,</span></span><br><span class="line"><span class="actionscript">                            <span class="string">"type"</span>: <span class="string">"get"</span>, <span class="comment">//"post" - "delete" - "put" - "patch"</span></span></span><br><span class="line"><span class="actionscript">                            <span class="string">"data"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">                                <span class="string">"key"</span>: <span class="string">"ce844c3dc80a5b21da6c36e82b52dca7"</span>,</span></span><br><span class="line"><span class="actionscript">                                <span class="string">"word"</span>: input,</span></span><br><span class="line"><span class="actionscript">                                <span class="string">"num"</span>: <span class="number">10</span></span></span><br><span class="line">                            &#125;,</span><br><span class="line"><span class="actionscript">                            <span class="string">"dataType"</span>: <span class="string">"json"</span>, <span class="comment">// "xml" - "text"</span></span></span><br><span class="line"><span class="javascript">                            <span class="string">"success"</span>: <span class="function">(<span class="params">jsond</span>) =&gt;</span> &#123;</span></span><br><span class="line">                                if (jsond.code == 250) &#123;</span><br><span class="line"><span class="javascript">                                    $(<span class="string">'#results'</span>).append($(<span class="string">'&lt;p&gt;'</span>).html(jsond.msg))</span></span><br><span class="line"><span class="actionscript">                                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; jsond.newslist.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                                        $(<span class="string">'#results'</span>).append($(<span class="string">'&lt;p&gt;&lt;br&gt;'</span>).html(jsond.newslist[i].result))</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="函数的四种用法"><a href="#函数的四种用法" class="headerlink" title="$函数的四种用法"></a>$函数的四种用法</h2><p>第一种 - 函数的<strong>参数</strong>为<strong>匿名函数</strong>或<strong>箭头函数</strong>，传入的函数是<strong>页面加载完成</strong>后要执行的<strong>回调函数</strong>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; &#125;)</span><br></pre></td></tr></table></figure><p>第二种 - 函数的<strong>参数</strong>为<strong>样式表选择器</strong>，获取<strong>页面元素</strong>得到一个<strong>jQuery对象</strong>（伪数组=原生javascript对象）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#fruits&gt;li&gt;a'</span>).on(<span class="string">'click'</span>, (evt) =&gt; &#123; evt.preventDefault() &#125;)</span><br></pre></td></tr></table></figure><p>第三种 - 函数的<strong>参数</strong>为<strong>标签字符串</strong>，<strong>创建</strong>一个<strong>新的元素</strong>并获得对应的<strong>jQuery对象</strong>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'&lt;li&gt;'</span>).text(name).append($(<span class="string">'&lt;a herf=""&gt;'</span>))</span><br></pre></td></tr></table></figure><p>第四种 - 函数的<strong>参数</strong>为一个<strong>原生的javascript对象</strong>，返回与原生javascript对象<strong>对应</strong>的<strong>jQuery对象</strong>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(evt.target).parent().remove()</span><br></pre></td></tr></table></figure><h2 id="jQuery中常用函数"><a href="#jQuery中常用函数" class="headerlink" title="jQuery中常用函数"></a>jQuery中常用函数</h2><ul><li>prev() - 返回被选元素的前一个同级元素。</li><li>val() - 返回或设置被选元素的 value 属性。</li><li>trim() - 用于删除字符串的头尾空格。</li><li>prepend() - 追加到前面</li></ul><h1 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h1><h2 id="测试地址"><a href="#测试地址" class="headerlink" title="测试地址"></a>测试地址</h2><ul><li>url - <a href="http://www.tianapi.com" target="_blank" rel="noopener">www.tianapi.com</a></li></ul><h2 id="原生Ajax请求-加载图片"><a href="#原生Ajax请求-加载图片" class="headerlink" title="原生Ajax请求 - 加载图片"></a>原生Ajax请求 - 加载图片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Ajax请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"photos"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"load"</span>&gt;</span>加载更多<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            (<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> photos = <span class="built_in">document</span>.querySelector(<span class="string">'#photos'</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> loadBtn = <span class="built_in">document</span>.querySelector(<span class="string">'#load'</span>)</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 符号&amp; - 添加参数</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// num - 显示最大数量</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// page - 显示页码</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">const</span> url = <span class="string">'http://api.tianapi.com/meinv/index?key=ce844c3dc80a5b21da6c36e82b52dca7&amp;num=10&amp;page='</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> page = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">                loadBtn.addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line">                    page += 1</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 创建异步请求对象</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// open()方法的参数 - 第一个：请求类型 - 第二个：url - 第三个：必须设置为true（异步请求）/false（同步请求）</span></span></span><br><span class="line"><span class="actionscript">                    xhr.open(<span class="string">'get'</span>, url + page, <span class="literal">true</span>)</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 绑定事件回调函数 - 在收到服务器返回的数据后，要对页面进行局部刷新</span></span></span><br><span class="line"><span class="actionscript">                    xhr.addEventListener(<span class="string">'readystatechange'</span>, () =&gt; &#123;</span></span><br><span class="line">                        if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) &#123;</span><br><span class="line"><span class="actionscript">                            <span class="comment">// alert(typeof xhr.responseText)</span></span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// 将返回的json字符串解析为javascript对象</span></span></span><br><span class="line"><span class="javascript">                            <span class="keyword">let</span> json = <span class="built_in">JSON</span>.parse(xhr.responseText)</span></span><br><span class="line"><span class="actionscript">                            <span class="comment">// newslist - josn文件中的属性</span></span></span><br><span class="line"><span class="javascript">                            json.newslist.forEach(<span class="function">(<span class="params">meinv</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                                <span class="comment">// console.log(mm.picUrl)</span></span></span><br><span class="line"><span class="actionscript">                                <span class="comment">// 创建img标签</span></span></span><br><span class="line"><span class="javascript">                                <span class="keyword">let</span> img = <span class="built_in">document</span>.createElement(<span class="string">'img'</span>)</span></span><br><span class="line"><span class="actionscript">                                <span class="comment">// meinv.picUrl - json文件中的属性</span></span></span><br><span class="line">                                img.src = meinv.picUrl</span><br><span class="line">                                img.width = 300</span><br><span class="line"><span class="actionscript">                                <span class="comment">// insertBefore() - 在现有的子节点前插入一个新的子节点</span></span></span><br><span class="line"><span class="actionscript">                                <span class="comment">// appendChild() - 将元素添加到指定的节点中</span></span></span><br><span class="line">                                photos.appendChild(img, photos.lastElementChild)</span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 发送异步请求 - null可省略</span></span></span><br><span class="line"><span class="actionscript">                    xhr.send(<span class="literal">null</span>)</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)()</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jQuery实现Ajax请求-加载图片"><a href="#jQuery实现Ajax请求-加载图片" class="headerlink" title="jQuery实现Ajax请求 - 加载图片"></a>jQuery实现Ajax请求 - 加载图片</h2><h3 id="方法一（推荐）"><a href="#方法一（推荐）" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h3><ul><li>$.ajax({ })方法 - 万能方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>jQuery实现Ajax请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"photos"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"load"</span>&gt;</span>加载更多<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            $(() =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">const</span> url = <span class="string">'http://api.tianapi.com/meinv/index'</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> page = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#load'</span>).on(<span class="string">'click'</span>, (evt) =&gt; &#123;</span></span><br><span class="line">                    page += 1</span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> data = &#123;<span class="string">"key"</span>:<span class="string">"ce844c3dc80a5b21da6c36e82b52dca7"</span>,<span class="string">"page"</span>:page,<span class="string">"num"</span>:<span class="number">10</span>&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                    $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"url"</span>: url,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"type"</span>: <span class="string">"get"</span>, <span class="comment">//"post" - "delete" - "put" - "patch"</span></span></span><br><span class="line"><span class="actionscript">                        <span class="string">"data"</span>: data,</span></span><br><span class="line"><span class="actionscript">                        <span class="string">"dataType"</span>: <span class="string">"json"</span>,  <span class="comment">// "xml" - "text"</span></span></span><br><span class="line"><span class="actionscript">                        <span class="string">"headers"</span>: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">                        <span class="string">"success"</span>: <span class="function">(<span class="params">json</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            json.newslist.forEach(<span class="function">(<span class="params">mm</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                                $(<span class="string">'#photos'</span>).append($(<span class="string">'&lt;img&gt;'</span>).attr(<span class="string">'src'</span>, mm.picUrl).attr(<span class="string">'width'</span>, <span class="string">'300'</span>))</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;,</span><br><span class="line"><span class="javascript">                        <span class="string">"error"</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;&#125;</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><ul><li>$.getJSON(url,data,()=&gt;{ })方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>jQuery实现Ajax请求<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"photos"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"load"</span>&gt;</span>加载更多<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            $(() =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">const</span> url = <span class="string">'http://api.tianapi.com/meinv/index'</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> page = <span class="number">0</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">'#load'</span>).on(<span class="string">'click'</span>, (evt) =&gt; &#123;</span></span><br><span class="line">                    page += 1</span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> data = &#123;<span class="string">"key"</span>:<span class="string">"ce844c3dc80a5b21da6c36e82b52dca7"</span>,<span class="string">"page"</span>:page&#125;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// $对象的getJSON()方法可以执行异步请求（get请求）获得服务器返回的JSON格式的数据</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 第一个参数是请求的url（统一资源定位符）</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 第二个参数是要发送给服务器的数据（JSON格式），如果没有数据发送给服务器可以省略不写</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 第三个参数是请求成功服务器返回数据之后要执行的回调函数，其参数为服务器返回的内容处</span></span></span><br><span class="line"><span class="javascript">                    $.getJSON(url, data, (json) =&gt; &#123;  <span class="comment">// 只能发送get请求，只能接受json数据</span></span></span><br><span class="line"><span class="javascript">                        json.newslist.forEach(<span class="function">(<span class="params">mm</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                            $(<span class="string">'#photos'</span>).append($(<span class="string">'&lt;img&gt;'</span>).attr(<span class="string">'src'</span>, mm.picUrl).attr(<span class="string">'width'</span>, <span class="string">'300'</span>))</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Echarts创建图表"><a href="#Echarts创建图表" class="headerlink" title="Echarts创建图表"></a>Echarts创建图表</h1><ul><li>url - <a href="http://www.echartsjs.com" target="_blank" rel="noopener">www.echartsjs.com</a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">                width: 600px;</span><br><span class="line">                height: 400px;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Echarts --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;script src="https://cdn.bootcdn.net/ajax/libs/echarts/4.8.0/echarts.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设定图表元素的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 基于准备好的DOM页面，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> myEcharts = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'box'</span>))</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 指定图表的配置和数据</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> option = &#123;</span></span><br><span class="line">                title: &#123;</span><br><span class="line"><span class="actionscript">                    text: <span class="string">'Echarts 入门示例'</span></span></span><br><span class="line">                &#125;,</span><br><span class="line">                tooltop: &#123;&#125;,</span><br><span class="line">                legend: &#123;</span><br><span class="line"><span class="actionscript">                    data: [<span class="string">'销量'</span>]</span></span><br><span class="line">                &#125;,</span><br><span class="line">                xAxis: &#123;</span><br><span class="line"><span class="actionscript">                    data: [<span class="string">"衬衫"</span>,<span class="string">"羊毛衫"</span>,<span class="string">"雪纺衫"</span>,<span class="string">"裤子"</span>,<span class="string">"高跟鞋"</span>,<span class="string">"袜子"</span>]</span></span><br><span class="line">                &#125;,</span><br><span class="line">                yAxis: &#123;&#125;,</span><br><span class="line">                series: [&#123;</span><br><span class="line"><span class="actionscript">                    name: <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// bar - 柱状图；pie - 饼图；。。。</span></span></span><br><span class="line"><span class="actionscript">                    type: <span class="string">'bar'</span>,</span></span><br><span class="line">                    data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 使用刚指定的配置项和数据，显示图表</span></span></span><br><span class="line">            myEcharts.setOption(option)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="bootstrap可视化定制页面"><a href="#bootstrap可视化定制页面" class="headerlink" title="bootstrap可视化定制页面"></a>bootstrap可视化定制页面</h1><ul><li>url - <a href="http://www.ibootstrap.cn" target="_blank" rel="noopener">www.ibootstrap.cn</a></li></ul><h1 id="字体的三种分类"><a href="#字体的三种分类" class="headerlink" title="字体的三种分类"></a>字体的三种分类</h1><ul><li><strong><em>衬线字体、非衬线字体、等宽字体</em></strong></li></ul><h1 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP / IP"></a>TCP / IP</h1><ul><li>Internet - TCP / IP - 协议族</li><li>结构层<ol><li>应用层 - HTTP / SMTP / POP3 / FTP / SSH / QQ</li><li>传输层 - TCP/UDP - 端到端传输</li><li>IP层（网络层） - 寻址和路由</li><li>网络接口层 - 接入网络（分帧、校验）</li></ol></li></ul><h1 id="同步与异步的本质"><a href="#同步与异步的本质" class="headerlink" title="同步与异步的本质"></a>同步与异步的本质</h1><ul><li>同步 - 阻塞式访问 - 需等待 - 第一个请求没有收到响应，就不会请求第二个；等第一个请求接收到响应后，才会请求第二个。</li><li>异步 - 非阻塞式访问 - 无需等待 - 第一个请求没有接收到响应，还会请求第二个，第三个…或者做其他事情；什么时候接收到响应，什么时候处理结果。</li></ul>]]></content>
      
      
      <categories>
          
          <category> html语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html语言 </tag>
            
            <tag> web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN服务器的搭建</title>
      <link href="/posts/f73aba26/"/>
      <url>/posts/f73aba26/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SSR是什么"><a href="#SSR是什么" class="headerlink" title="SSR是什么"></a>SSR是什么</h1><ol><li>SSR就是一台服务器，可以利用SSR 在远程的服务器上配置 SSR，使其能够成为 SSR 节点，这样本地电脑或者其它设备利用 SSR 节点实现 VPN 或者远程上网及游戏加速等方面。</li><li>ShadowsocksR（简称 SSR）是 Shadowsocks 分支，在 Shadowsocks 的基础上增加了一些数据混淆方式，称修复了部分安全问题并可以提高 QoS 优先级。甚至增加了类似 Tor 的可插拔传输层功能。</li></ol><h1 id="选择此网站的优点"><a href="#选择此网站的优点" class="headerlink" title="选择此网站的优点"></a>选择此网站的优点</h1><ul><li>此网站中购买的服务器，按<strong>每小时</strong>收费，不使用时，可删除服务器停止计费，并且稳定性很好</li></ul><h1 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h1><ol><li><p>目的：购买国外服务器，通过国外服务器，突破国内防火墙，访问世界互联网</p></li><li><p>推荐网址：<a href="https://my.vultr.com/" target="_blank" rel="noopener">点击进入</a> （省略注册步骤）</p></li><li><p>充值：每次充值，最低于10美元，可用国内支付方式，如支付宝、微信等；网站为英文格式，可用翻译软件翻译为中文</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908134804.png" alt=""></p></li></ol><h1 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h1><ol><li><p>进入产品界面，如图所示：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908134953.png" alt=""></p></li><li><p>选择服务器属性（个人推荐）：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908140125.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908140142.png" alt=""></p></li><li><p>等待服务器启动，点击进入，可查看服务器详细配置信息：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908140740.png" alt=""></p></li></ol><h1 id="远程连接服务器"><a href="#远程连接服务器" class="headerlink" title="远程连接服务器"></a>远程连接服务器</h1><ol><li><p>FinalShell官方下载地址：<a href="http://www.hostbuf.com/" target="_blank" rel="noopener">点击进入</a></p></li><li><p>查看服务器详细配置信息：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908141118.png" alt=""></p></li><li><p>检测IP是否可用：本地命令窗口<code>cmd</code>执行<code>ping 144.202.15.236 -t</code>查看返回信息</p></li><li><p>打开远程连接工具FinalShell新建连接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908141723.png" alt=""></p></li><li><p>配置服务器信息</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908142017.png" alt=""></p></li><li><p>成功进入服务器</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908142343.png" alt=""></p></li></ol><h1 id="加速器的安装"><a href="#加速器的安装" class="headerlink" title="加速器的安装"></a>加速器的安装</h1><ul><li>推荐先安装加速器，再安装SSR</li></ul><h2 id="方法一（推荐）"><a href="#方法一（推荐）" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;chiakge&#x2F;Linux-NetSpeed&#x2F;master&#x2F;tcp.sh&quot;</span><br><span class="line">chmod +x tcp.sh</span><br><span class="line">.&#x2F;tcp.sh</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O appex.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;0oVicero0&#x2F;serverSpeeder_Install&#x2F;master&#x2F;appex.sh &amp;&amp; bash appex.sh install &#39;2.6.32-642.el6.x86_64&#39;</span><br></pre></td></tr></table></figure><h2 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h2><ol><li><p>注意事项：本人测试后，发现安装其他加速器，都会出现封IP的情况，所以建议使用<code>BBR加速器</code>（可自己尝试）</p></li><li><p>运行其中一种方法，选择加速器：</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908142850.png" alt=""></p></li><li><p>输入数字<code>1</code>开始安装，耐心等待一会</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908143347.png" alt=""></p></li><li><p>若命令启动失败，需要手动启动，若多次尝试无效，并且本机ping不通服务器，那么此IP应该被封了，再重新购买一个即可（先购买服务器，再删除不能用的服务器，否则下次还会选择同一个IP）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908143841.png" alt=""></p></li><li><p>继续配置</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908144151.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908144352.png" alt=""></p></li><li><p>成功安装加速器，运行<code>./tcp.sh</code>可查看加速器的状态，按<code>11</code>或这<code>ctrl + C</code>退出（退出后加速器依然正常运行）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908144510.png" alt=""></p></li></ol><h1 id="SSR的安装"><a href="#SSR的安装" class="headerlink" title="SSR的安装"></a>SSR的安装</h1><h2 id="方法一（推荐）-1"><a href="#方法一（推荐）-1" class="headerlink" title="方法一（推荐）"></a>方法一（推荐）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubi&#x2F;doubi&#x2F;master&#x2F;ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><h2 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubi&#x2F;doubi&#x2F;master&#x2F;ssr.sh</span><br><span class="line">chmod +x ssr.sh </span><br><span class="line">.&#x2F;ssr.sh</span><br></pre></td></tr></table></figure><h2 id="配置SSR"><a href="#配置SSR" class="headerlink" title="配置SSR"></a>配置SSR</h2><ol><li><p>复制方法一中的所有命令，选择数字<code>1</code>开始安装</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908145436.png" alt=""></p></li><li><p>其他配置，我自己一路回车，直到出现详细配置信息，如图所示：（若要长期使用，需自定义配置）</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908145633.png" alt=""></p></li><li><p>自定义配置：端口号、用户名、密码、加密方式等详细信息，可自己去尝试配置（选择默认也可以）</p></li></ol><h1 id="使用SSR"><a href="#使用SSR" class="headerlink" title="使用SSR"></a>使用SSR</h1><ol><li><p>ShadowsocksR百度云盘链接：<a href="https://pan.baidu.com/s/1uy5jE2nuE3wwb9Bobn9q2A" target="_blank" rel="noopener">点击进入</a> 提取码：ygpu</p></li><li><p>ShadowsocksR公网下载链接：<a href="https://tlanyan.me/shadowsockr-shadowsocksr-shadowsocksrr-clients/" target="_blank" rel="noopener">点击进入</a></p></li><li><p>复制服务器中的<code>SSR链接</code>，启动小飞机ShadowsocksR-dotnet4.0.</p></li><li><p>windows系统右下角，选择小飞机图标，然后鼠标右键，选择<code>剪切板批量导入...</code>删除无用的链接</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908150722.png" alt=""></p></li><li><p>启动Google浏览器或者在其他浏览器上设置代理，然后就阔以访问<a href="https://www.youtube.com/" target="_blank" rel="noopener">YouTube</a>等国外网站</p><p><img src= "/img/loading.gif" data-src="https://gitee.com/wlet/blog_images/raw/master/VPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/20200908152350.png" alt=""></p></li><li><p>使用完VPN后，需关闭代理，否则无法正常访问网站</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用手册</title>
      <link href="/posts/f0886eb5/"/>
      <url>/posts/f0886eb5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h1><ul><li>快捷键：<code>ctrl + 1~6</code> （不要使用单独的数字按键，最多只能写到六级标题）</li><li>输入法：<ol><li><code># 一级标题</code> (注意#号后面有一个空格，以下同理)</li><li><code>## 二级标题</code></li><li><code>### 三级标题</code></li><li><code>#### 四级标题</code></li><li><code>##### 五级标题</code></li><li><code>###### 六级标题</code></li></ol></li></ul><h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><ul><li>演示：<u>下划线</u></li><li>快捷键：<code>ctrl + U</code></li><li>输入法：<code>&lt;u&gt;下划线&lt;/u&gt;</code></li></ul><h1 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h1><ul><li>演示：<strong>字体加粗</strong></li><li>快捷键：<code>ctrl + B</code></li><li>输入法：<code>**字体加粗**</code></li></ul><h1 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h1><ul><li>演示：<em>字体倾斜</em></li><li>快捷键：<code>ctrl + i</code> </li><li>输入法：<code>*字体倾斜*</code></li></ul><h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><ul><li>演示：<del>删除线</del></li><li>快捷键：<code>shift + alt + 5</code> （使用%5这个按键）</li><li>输入法：<code>~~删除线~~</code></li></ul><h1 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h1><ul><li><p>开启上下标功能：文件 – 偏好设置 – Markdown – Markdown扩展语法（勾选上下标等信息，注意重启）</p></li><li><p>上标：</p><ol><li>演示：a^2^ + b^2^ = c^2^</li><li>输入法：<code>a^2^ + b^2^ = c^2^</code></li></ol></li><li><p>下标：</p><ol><li>演示：H<del>2</del>O</li><li>输入法：<code>H~2~O</code></li></ol></li></ul><h1 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h1><ul><li>演示（每行前面都有序号）：<ol><li>有序列表，第一行</li><li>有序列表，第二行</li><li>有序列表，第三行</li><li>有序列表，。。。</li></ol></li><li>快捷键：<code>ctrl + shift + [</code> </li><li>输入法：<code>1.空格</code> <code>100.空格</code>（编号后一定要加空格，行末enter键，序号会在当前序号添加并+1；行末上下键翻动，序号不会添加）</li><li>降级快捷键：<code>tab</code></li><li>升级快捷键：<code>shift + tab</code></li></ul><h1 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h1><ul><li>演示：<ul><li>无序列表，第一行</li><li>无序列表，第二行</li><li>无序列表，第三行</li><li>无序列表，。。。</li></ul></li><li>快捷键：<code>ctrl + shift + ]</code> </li><li>输入法：<code>*空格</code>或<code>-空格</code>（符号后一定要加空格，行末enter键，列表会自动添加一行；行末上下键翻动，列表不会添加）</li><li>降级快捷键：<code>tab</code></li><li>升级快捷键：<code>shift + tab</code></li></ul><p><strong>注意：有序列表和无序列表可交错使用</strong>（有序中有无序，无序中有有序）</p><ol><li>有序列表<ul><li>无序列表<ol><li>有序列表<ol><li>有序列表</li><li>有序列表</li></ol></li><li>有序列表</li></ol></li><li>无序列表</li></ul></li><li>有序列表<ul><li>无序列表<ul><li><input disabled="" type="checkbox"> 任务列表<ol><li>有序列表</li><li>有序列表</li></ol></li><li><input checked="" disabled="" type="checkbox"> 任务列表</li></ul></li><li>无序列表</li></ul></li><li>有序列表<ul><li>无序列表<ul><li>无序列表<ol><li>有序列表</li><li>有序列表</li></ol></li><li>无序列表</li></ul></li><li>无序列表</li><li>无序列表</li></ul></li></ol><h1 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h1><ul><li>演示（可以选择任务）：<ul><li><input disabled="" type="checkbox"> 任务列表，第一行</li><li><input checked="" disabled="" type="checkbox"> 任务列表，第二行</li><li><input checked="" disabled="" type="checkbox"> 任务列表，第三行</li><li><input disabled="" type="checkbox"> 任务列表，。。。</li></ul></li><li>快捷键：无</li><li>输入法：<code>- [ ]</code>（<strong>每一个符号</strong>后都要加一个<strong>空格隔开</strong>，行末enter键，列表会自动添加一行；行末上下键翻动，列表不会添加）</li><li>降级快捷键：<code>tab</code></li><li>升级快捷键：<code>shift + tab</code></li></ul><p><strong>注意</strong>：<strong>任务列表</strong>也可以和<strong>有序列表</strong>和<strong>无序列表</strong>一起<strong>交错使用</strong> （如上面演示）</p><h1 id="表格插入"><a href="#表格插入" class="headerlink" title="表格插入"></a>表格插入</h1><ul><li><p>演示：</p><table><thead><tr><th>学号</th><th>姓名</th><th>年龄</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>66</td></tr><tr><td>1002</td><td>李四</td><td>88</td></tr><tr><td>1003</td><td>王五</td><td>99</td></tr></tbody></table></li></ul><ul><li><p>快捷键：<code>ctrl + T</code> </p></li><li><p>输入法：<code>|学号|姓名|年龄|</code>（回车即可创建表格）</p></li><li><p>添加下一行：<code>ctrl+ 回车键</code> </p></li><li><p>调整表格：点击创建的表格，会有很多按钮，自己去尝试即可</p></li></ul><h1 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h1><ul><li><p>演示：<code>python</code>语言是非常简单的；<code>java</code>语言是很难学的！</p></li><li><p>快捷键：<strong>ctrl + shift + `</strong> （<strong>`号</strong>在键盘左上角，和<strong>~号</strong>同键）</p></li><li><p>输入法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;行内代码&#96;</span><br></pre></td></tr></table></figure></li></ul><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><ul><li><p>开启代码块功能：文件 – 偏好设置 – Markdown – 勾选显示行号等信息（注意重启）</p></li><li><p>演示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'hellow python!'</span>)</span><br><span class="line">func()</span><br></pre></td></tr></table></figure></li><li><p>快捷键：<code>ctrl + shift + K</code>  </p></li><li><p>输入法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;python 或者 ~~~Java（注意：创建代码块后，末端有个语言类型，可填写，三个连续的符号后面可以加任意内容，但是写入正确的语言，会有语法高亮显示）</span><br></pre></td></tr></table></figure></li></ul><h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><ul><li>演示：<ul><li><img src= "/img/loading.gif" data-src="https://i.loli.net/2020/07/25/PUyVSu7W5iJeqoL.jpg" alt="IuWi8QbHvzjlOPw.jpg"></li></ul></li><li>路径选择：文件 – 偏好设置 – 图像（修改对应的设置“百度”）</li><li>快捷键：<code>ctrl + shift + i</code>  </li><li>输入法：<code>![]()</code></li></ul><div class="note danger">            <p><strong>注意：若要添加网络图片，输入<code>![]()</code> ，[]方括号中填写图片名称，()圆括号中填写图片的URL</strong></p>          </div><h1 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h1><ol><li>演示：<a href="https://www.extfans.com/productivity/bgnkhhnnamicmpeenaelnjfhikgbkllg/" target="_blank" rel="noopener">点击下载</a></li><li>输入法：<code>[点击下载](https://www.extfans.com/productivity/bgnkhhnnamicmpeenaelnjfhikgbkllg/)</code></li><li>说明：<ul><li><code>[]</code>中填写链接名称；<code>()</code>中填写链接地址</li><li>可直接<strong>复制链接</strong> &gt;&gt; 在编辑器中<strong>右键</strong> &gt;&gt; 选择<strong>链接图标</strong>点击即可</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 标记语言 </tag>
            
            <tag> Markdown语言 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的安装与使用</title>
      <link href="/posts/6536dfdf/"/>
      <url>/posts/6536dfdf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="安装Git（Linux系统）"><a href="#安装Git（Linux系统）" class="headerlink" title="安装Git（Linux系统）"></a>安装Git（Linux系统）</h1><ol><li>安装编译环境： yum install gcc patch libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel xz-devel -y</li><li>补充编译环境： yum -y install libcurl-devel</li><li>下载Git，URL： <a href="https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.27.0.tar.xz" target="_blank" rel="noopener">https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.27.0.tar.xz</a></li><li>开始编译： ./configure –prefix=/usr/local/</li><li>构建和安装： make -y &amp;&amp; make install</li></ol><h1 id="Git的用法"><a href="#Git的用法" class="headerlink" title="Git的用法"></a>Git的用法</h1><h2 id="本地操作（Linux系统）"><a href="#本地操作（Linux系统）" class="headerlink" title="本地操作（Linux系统）"></a>本地操作（Linux系统）</h2><ol><li>初始化： git init： 创建一个空的仓库文件： .git隐藏文件（先cd到指定目录）</li><li>添加单个文件到暂存区： git add example01.py（没有任何提示即为成功添加）</li><li>添加目录下所有文件到暂存区： git add .（.代表所有的文件）</li><li>查看暂存区的状态： git status</li><li>提交代码 – git commit -m ‘完成了用户添加功能’ （第一次提交或报错，须填写邮箱和昵称）</li><li>添加提交时的邮箱： git config –global user.email “<a href="mailto:test@test.com">test@test.com</a>“</li><li>添加提交时的昵称： git config –global user.name “test”</li><li>查看提交的历史日志： git log（历史提交记录）<ul><li>commit的值： 全局唯一标识符</li></ul></li><li>查看提交的未来版本日志： git reflog</li><li>暂存区文件恢复到工作区（未提交）： git checkout 空格.（.代表所有，可替换为单个文件名）</li><li>回到历史版本（已提交）： git reset –hard 72b937（72b937代表log中 - commit的值 - 至少前6位字符）</li><li>回到最新版本（已提交）： git reset –hard HEAD^</li></ol><h2 id="服务器地址"><a href="#服务器地址" class="headerlink" title="服务器地址"></a>服务器地址</h2><ul><li>国内代码托管平台： 码云gitee / coding</li><li>URL： <a href="https://gitee.com：">https://gitee.com：</a> <a href="https://coding.net" target="_blank" rel="noopener">https://coding.net</a></li></ul><h2 id="服务器到本地（Linux系统）"><a href="#服务器到本地（Linux系统）" class="headerlink" title="服务器到本地（Linux系统）"></a><strong>服务器到本地</strong>（Linux系统）</h2><ol><li>克隆服务器文件到本地： git clone <URL>（下载文件）</li><li>开始拷贝文件： cp /root/code/* ./</li><li>添加暂存区文件： git add .</li><li>检查是否成功添加： git log 或 git reflog</li></ol><h2 id="本地到服务器（Linux系统）"><a href="#本地到服务器（Linux系统）" class="headerlink" title="本地到服务器（Linux系统）"></a>本地到服务器（Linux系统）</h2><ol><li>先从服务器到本地：</li><li>进入服务器文件目录 – cd test20200706</li><li>本地文件同步服到务器： git push（上传文件）</li><li>服务器文件同步到本地： git pull（更新本地文件）</li></ol><h2 id="本地到服务器（windows系统）"><a href="#本地到服务器（windows系统）" class="headerlink" title="本地到服务器（windows系统）"></a><strong>本地到服务器</strong>（windows系统）</h2><ol><li>通过命令git init将目录变为可以管理的git仓库： <code>git init</code> </li><li>服务器文件同步到本地： <code>git pull</code>（更新本地文件，若仓库是新建的，<strong>第一次</strong>上传，可忽略此步）</li><li>把文件提交到暂存区： <code>git add .</code></li><li>将文件提交到仓库，引号内的为描述： <code>git commit -m &#39;说明&#39;</code></li><li>关联到远程库： <code>git remote add &#39;用户名&#39; 远程库地址</code> </li><li>本地文件上传到远程仓库： <code>git push -u 用户名 master</code> （注意：每次push都要先pull，除非不删除历史记录）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置butterfly主题(二)</title>
      <link href="/posts/1a663c96/"/>
      <url>/posts/1a663c96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="配置butterfly主题"><a href="#配置butterfly主题" class="headerlink" title="配置butterfly主题"></a>配置butterfly主题</h1><div class="note danger">            <ul><li><strong>注意事项：</strong><ol><li>注意原文件的备份，以防手贱，损坏原文件</li><li>所有安装的插件都在博客根目录下的cmd窗口执行</li><li>在配置文件中，每个属性后面都要有一个<code>空格</code>间隔（即冒号后面必须有一个空格）</li><li>安装插件时，电脑尽量不要做其他操作（一直盯着窗口就行，等待时间太长就取消，重新下载）</li></ol></li></ul>          </div><div class="note danger">            <ul><li><strong>自定义主题配置文件：</strong><ul><li>将 <code>E:\Blogs\Blog\themes\butterfly\</code> 目录中的 <code>_config.yml</code> 复制到 <code>E:\Blogs\Blog\source\_data\</code> 目录中，并重命名为 <code>butterfly.yml</code> （注意：_data目录不存在，就新建，原文件方便更新主题版本）</li></ul></li></ul>          </div><h1 id="butterfly主题配置官方教程"><a href="#butterfly主题配置官方教程" class="headerlink" title="butterfly主题配置官方教程"></a>butterfly主题配置官方教程</h1><ul><li>说明：更加全面、详细的教程（<strong>若我的看不懂，则可以去此网站学习</strong>）</li><li>URL： <a href="https://demo.jerryc.me" target="_blank" rel="noopener">butterfly主题</a></li></ul><h1 id="主页大图片"><a href="#主页大图片" class="headerlink" title="主页大图片"></a>主页大图片</h1><ul><li>打开<code>博客根目录/source/_data/butterfly.yml</code>（主题配置文件），搜索<code>default_top_img:</code>，修改URL即可</li></ul><h1 id="文章链接修改"><a href="#文章链接修改" class="headerlink" title="文章链接修改"></a>文章链接修改</h1><ul><li><p>打开博客配置文件<code>_config.yml</code>，搜索<code>url:</code>，修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://wounded-hearts.github.io/</span>  <span class="comment"># 博客地址首页</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="头像的修改"><a href="#头像的修改" class="headerlink" title="头像的修改"></a>头像的修改</h1><ul><li>头像目录：<code>博客根目录/themes/butterfly/source/img/</code>（将头像存放在此目录下，自定义头像大小应与原始文件相等）</li><li>打开主题配置文件，搜索<code>avatar:</code>修改<code>img:</code>的URL（使用本地相对路径或网络地址）</li></ul><h1 id="主页的导航栏"><a href="#主页的导航栏" class="headerlink" title="主页的导航栏"></a>主页的导航栏</h1><ul><li><p>配置文件原始状态（主题配置文件顶部）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="attr">Link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">  <span class="string">List||fa</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Music</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Movie</span> <span class="string">||</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-film</span></span><br></pre></td></tr></table></figure></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">档案:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">清单||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Music</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Movie</span> <span class="string">||</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">友情链接:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="美化页面展示"><a href="#美化页面展示" class="headerlink" title="美化页面展示"></a>美化页面展示</h1><ol><li><p>修改主题配置文件：搜索 <code>beautify:</code> 定位代码块</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启美化</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post</span></span><br><span class="line"><span class="comment">#  title-prefix-icon: '\f0c1'</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">'\f0e7'</span> <span class="comment"># 修改标题前图标为闪电</span></span><br><span class="line"><span class="comment">#  title-prefix-icon-color: '#F47466'</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">'#ffb821'</span> <span class="comment"># 图标颜色为黄色</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="侧边栏排版"><a href="#侧边栏排版" class="headerlink" title="侧边栏排版"></a>侧边栏排版</h1><ol><li><p>修改主题配置文件：搜索 <code>aside:</code> 定位到侧边栏代码块，修改 <code>position:</code> 属性（我选择left）</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span> <span class="comment"># left or right</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="标签颜色"><a href="#标签颜色" class="headerlink" title="标签颜色"></a>标签颜色</h1><ol><li><p>修改主题配置文件：搜索 <code>card_tags:</code> 定位到标签代码块，修改 <code>color</code> 属性（开启true）</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_tags:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">  <span class="attr">color:</span> <span class="literal">true</span> <span class="comment"># 标签颜色</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="访客数和总访问量"><a href="#访客数和总访问量" class="headerlink" title="访客数和总访问量"></a>访客数和总访问量</h1><ol><li><p>修改主题配置文件：搜索    定位到指定代码块，修改    属性（开启true）</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><div class="note danger">            <p><strong>注意：本地测试时，访客数和总访问量是不会重置的，远程部署到站点才会生效</strong></p>          </div></li></ol><h1 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h1><ol><li><p>修改主题配置文件：搜索 <code>runtimeshow:</code> 定位到运行时间代码块，修改 <code>enable</code> 属性（开启true）</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">publish_date:</span> <span class="number">2020</span><span class="string">/7/23</span> <span class="number">00</span><span class="string">:00:00</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="简体与繁体"><a href="#简体与繁体" class="headerlink" title="简体与繁体"></a>简体与繁体</h1><ol><li><p>修改主题配置文件：搜索 <code>translate:</code> 定位到代码块，修改默认 <code>default:</code> 属性</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The text of a button</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">简</span></span><br><span class="line">  <span class="comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Time delay</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Simplified Chinese</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">'繁'</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Traditional Chinese</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">'简'</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="页脚自定义文本"><a href="#页脚自定义文本" class="headerlink" title="页脚自定义文本"></a>页脚自定义文本</h1><ol><li><p>修改主题配置文件：搜索 <code>footer_custom_text:</code> 定位到代码块</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer_custom_text:</span> <span class="string">Hellow!</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">my</span> <span class="string">&lt;a</span> <span class="string">href="https://wounded-hearts.github.io"</span> <span class="string">target="_blank"&gt;Blog&lt;/a&gt;!</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a>博客年份</h1><ol><li><p>修改主题配置文件：搜索 <code>since:</code> 定位到代码块</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">since:</span> <span class="number">2020</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h1><ol><li><p>修改主题配置文件：搜索 <code>related_post:</code> 定位到代码块</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">related_post:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span> <span class="comment"># Number of posts displayed</span></span><br><span class="line">  <span class="attr">date_type:</span> <span class="string">created</span> <span class="comment"># or created or updated 文章日期顯示創建日或者更新日since: 2020</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="页面文章数"><a href="#页面文章数" class="headerlink" title="页面文章数"></a>页面文章数</h1><ol><li><p>修改<strong>博客配置文件</strong>：搜索 <code>index_generator:</code> 定位到代码块</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">8</span> <span class="comment"># 每页的文章数量</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="数字统计"><a href="#数字统计" class="headerlink" title="数字统计"></a>数字统计</h1><ol><li><p>安装数字统计插件： <code>npm install hexo-wordcount --save</code></p></li><li><p>修改主题配置文件：搜索 <code>wordcount:</code> 定位到指定代码块，修改 <code>enable</code> 属性（开启true）</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="主页座右铭"><a href="#主页座右铭" class="headerlink" title="主页座右铭"></a>主页座右铭</h1><ol><li><p>打开主题配置文件，搜索<code>subtitle:</code>（共有两处，仔细查看内容），修改<code>sub:</code>下的内容</p></li><li><p>我们还可以自动获取网络上的好句子，我们只需要将<code>source: false</code>换成下面你想选择的样式</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">source:</span> <span class="number">1</span> <span class="comment">#调用博天API https://api.btstu.cn/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">2</span> <span class="comment">#调用一言API https://hitokoto.cn/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">3</span> <span class="comment">#调用一句话API http://yijuzhan.com/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">4</span> <span class="comment">#调用今日诗词API https://www.jinrishici.com/</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h1><ol><li><p>修改主题配置文件：搜索 <code>note:</code> 定位到运行时间代码块，修改 <code>style:</code> 属性</p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span> <span class="comment"># 标签样式</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="创建分类页"><a href="#创建分类页" class="headerlink" title="创建分类页"></a>创建分类页</h1><ol><li><p>创建分类页文件：博客根目录打开cmd窗口，执行<code>hexo new page categories</code></p></li><li><p>打开根目录下的<code>source/categories/index.md</code>这个文件</p></li><li><p>修改文件内容为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我的分类页</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">14</span><span class="string">:55</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="创建标签页"><a href="#创建标签页" class="headerlink" title="创建标签页"></a>创建标签页</h1><ol><li><p>创建标签页文件：博客根目录打开cmd窗口，执行<code>hexo new page tags</code></p></li><li><p>打开根目录下的<code>source/tags/index.md</code>这个文件</p></li><li><p>修改文件内容为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我的标签页</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">14</span><span class="string">:55</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="创建友情链接页"><a href="#创建友情链接页" class="headerlink" title="创建友情链接页"></a>创建友情链接页</h1><ol><li><p>创建友情链接页文件：博客根目录打开cmd窗口，执行<code>hexo new page link</code></p></li><li><p>打开根目录下的<code>source/link/index.md</code>这个文件</p></li><li><p>修改文件内容为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">我的小伙伴们</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">14</span><span class="string">:55</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"link"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="友情链接的添加"><a href="#友情链接的添加" class="headerlink" title="友情链接的添加"></a>友情链接的添加</h1><ul><li><p>在Hexo博客根目录中的<code>source/_data</code>，创建文件<code>link.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">萍水相逢的人</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">随缘遇到的人</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wounded-hearts</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://wounded-hearts.github.io/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">我只管去努力，剩下的交给天意！</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="文章置顶、描述、分类"><a href="#文章置顶、描述、分类" class="headerlink" title="文章置顶、描述、分类"></a>文章置顶、描述、分类</h1><ol><li><p>在主题配置文件中设置文章描述，搜索<code>index_post_content:</code>，修改<code>method：1</code>（详情看代码上面的注释）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure></li><li><p>卸载原始插件： <code>npm uninstall hexo-generator-index --save</code></p></li><li><p>安装置顶插件： <code>npm install hexo-generator-index-pin-top --save</code></p></li><li><p>可以在每篇文章顶部插入如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">个人博客的搭建</span> <span class="comment"># 文章标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-07</span><span class="number">-21</span> <span class="number">13</span><span class="string">:55:59</span> <span class="comment"># 文章发布时间</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">说明：利用hexo和nodejs搭建个人博客</span> <span class="comment"># 文章介绍、说明、描述</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span> <span class="comment"># 文章是否置顶</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">其他</span> <span class="comment"># 文章分类</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">个人博客</span> <span class="comment"># 文章添加标签</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p><code>title:</code>标题名称</p></li><li><p><code>data:</code>日期</p></li><li><p><code>description:</code>对本篇文章的描述</p></li><li><p><code>top:</code>置顶</p></li><li><p><code>categories:</code>文章分类</p></li></ol><h1 id="博客代码块"><a href="#博客代码块" class="headerlink" title="博客代码块"></a>博客代码块</h1><ul><li>代码块高亮：主题配置文件中搜索<code>highlight_theme:</code>修改自己喜欢的即可</li><li>代码块复制按钮：主题配置文件中搜索<code>highlight_copy:</code>默认打开，可false关闭</li><li>代码块收缩按钮：主题配置文件中搜索<code>highlight_shrink:</code>默认关闭（详情看代码注释）</li><li>代码块自动换行：主题配置文件中搜索<code>code_word_wrap:</code>默认关闭</li></ul><h1 id="社交图标链接"><a href="#社交图标链接" class="headerlink" title="社交图标链接"></a>社交图标链接</h1><ul><li>配置文件中搜索<code>social:</code>修改对应的URL即可</li></ul><h1 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h1><ul><li><p>配置文件中搜索<code>reward:</code> </p></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/08/05/ptZkvgcoeabxSm8.png</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/08/05/b1DdQvapRXl6uMA.png</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h1><ul><li><p>配置文件中搜索<code>default_cover:</code>修改对应的URL即可</p></li><li><p>排版方式：配置文件搜索 <code>cover:</code> ，修改 <code>position:</code> 的属性，内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># display the cover or not (是否顯示文章封面)</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># the position of cover in home page (封面顯示的位置)</span></span><br><span class="line">  <span class="comment"># left/right/both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="comment"># When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><ol><li><p>注册第三方评论系统：<a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud官网</a> （可选择其他的，本人只用了它）</p></li><li><p>搜索“hexo搭建博客添加valine评论系统”等字样，查看具体详情</p></li><li><p>主题配置文件中搜索<code>use:</code>并添加<code>Valine</code>内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">use:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Valine</span></span><br><span class="line"><span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line"><span class="attr">load_begin:</span> <span class="literal">false</span> <span class="comment"># The second comment system will auto load when visiting the website</span></span><br><span class="line"><span class="attr">count:</span> <span class="literal">false</span> <span class="comment"># Dispaly comment count in top_img</span></span><br></pre></td></tr></table></figure></li><li><p>主题配置文件中搜索<code>valine:</code>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="comment"># 添加leancloud网站中的对应id</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># 添加leancloud网站中的对应可以 </span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> </span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> </span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span> <span class="comment"># 语言为中文</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">说些什么吧</span> <span class="comment"># 在评论区添加默认提示内容</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> </span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># 添加leancloud网站中的对应REST API 服务器地址 </span></span><br><span class="line">  <span class="attr">bg:</span> </span><br><span class="line">  <span class="attr">emojiCDN:</span> </span><br><span class="line">  <span class="attr">enableQQ:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">requiredFields:</span> <span class="string">nick,mail</span></span><br></pre></td></tr></table></figure></li><li><p>解决未出现评论面板的问题</p><ul><li>主题配置文件共修改2处配置</li><li>对照原始的主题配置文件，看是否自己不小心改错或删错内容了（注意冒号后面的空格）</li></ul></li></ol><h1 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h1><ul><li><p>配置文件中搜索<code>error_404:</code>修改对应的URL和属性</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">error_404:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">subtitle:</span> <span class="string">'Page Not Found'</span></span><br><span class="line">  <span class="attr">background:</span> <span class="string">https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="音乐界面"><a href="#音乐界面" class="headerlink" title="音乐界面"></a>音乐界面</h1><ol><li><p>安装音乐插件hexo-tag-aplayer：<code>npm install --save hexo-tag-aplayer</code></p></li><li><p><strong>博客配置文件</strong>最底部，添加如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>创建音乐界面：<code>hexo new page music</code> （自动创建一个文件夹及音乐配置文件）</p></li><li><p>修改音乐配置文件：打开音乐配置文件，修改meting后的数字（id），还可修改公司名，可以是tencent、netease或是其他公司（本人使用网易云音乐，<strong>只修改id即可</strong>），<code>976703418</code>为我的歌单id，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;976703418&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure></li><li><p>音乐id获取：浏览器打开网易云歌单（登陆），点击<code>生成外链播放器</code>，即可查看列表的id</p></li></ol><h1 id="静态链接"><a href="#静态链接" class="headerlink" title="静态链接"></a>静态链接</h1><ol><li><p>作用：解决了博客链接过长的问题</p></li><li><p>安装链接插件：<code>npm install hexo-abbrlink --save</code></p></li><li><p>修改<strong>博客配置文件</strong>：搜索<code>permalink:</code>，添加内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure></li><li><p>执行<code>hexo clean</code> 和 <code>hexo g</code>，不然会报错</p></li></ol><h1 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h1><ol><li><p>安装搜索插件：<code>npm install hexo-generator-search --save</code></p></li><li><p>修改主题配置文件：搜索<code>local_search:</code>，修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">"We didn't find any results for the search: $&#123;query&#125;"</span> <span class="comment"># if there are no result</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h1><ul><li><p>修改主题配置文件：搜索<code>click_heart:</code>，修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)</span></span><br><span class="line"><span class="attr">fireworks:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">9999</span> <span class="comment"># -1 or 9999</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span></span><br><span class="line"><span class="attr">click_heart:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mouse click effects: words (鼠標點擊效果: 文字)</span></span><br><span class="line"><span class="attr">ClickShowText:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">I</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">LOVE</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">YOU</span></span><br><span class="line">  <span class="attr">fontSize:</span> <span class="string">15px</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h1><ul><li><p>修改主题配置文件：搜索<code>canvas_ribbon_piao:</code>，修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon_piao:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 电脑端</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># 手机端</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="打字特效"><a href="#打字特效" class="headerlink" title="打字特效"></a>打字特效</h1><ul><li><p>修改主题配置文件：搜索<code>activate_power_mode:</code>，修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖動特效)</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo常用命令</title>
      <link href="/posts/33f59116/"/>
      <url>/posts/33f59116/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><ol><li>初始化： <code>hexo init</code> <ul><li>作用：初始化站点（博客），生成一个简单网站所需的各种文件</li></ul></li><li>启动服务： <code>hexo s</code> （s代表server，可写全名）<ul><li>作用：以调试模式，启动hexo服务（在本地运行博客）</li></ul></li><li>清除缓存： <code>hexo clean</code> <ul><li>作用：清除缓存（将public目录删除）</li></ul></li><li>编译文件： <code>hexo g</code> （g代表generate）<ul><li>作用：将新增、修改、更新的文件（博客），生成（编译）网站静态文件，默认都在 <code>public</code> 目录下（目录自动创建），为远程部署做铺垫</li></ul></li><li>远端部署： <code>hexo d</code>（d代表deploy，需装插件）<ul><li>作用：部署站点，在本地生成 <code>.deploy_git</code> 文件夹，并将编译后的文件上传至 <code>GitHub</code> 或 <code>Gitee</code> 等站点</li></ul></li><li>新建页面： <code>hexo new page path_name</code> </li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客的搭建(一)</title>
      <link href="/posts/8bf38f6f/"/>
      <url>/posts/8bf38f6f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="windows系统下安装nodejs和hexo"><a href="#windows系统下安装nodejs和hexo" class="headerlink" title="windows系统下安装nodejs和hexo"></a>windows系统下安装nodejs和hexo</h1><ol><li>安装Git（配置环境变量）</li><li>安装nodejs：<a href="https://nodejs.org" target="_blank" rel="noopener">nodejs官网</a></li><li>创建目录 ： E:\Blogs\Global（可自定义目录）</li><li>打开Git Bash</li><li>设置全局变量：<code>npm config set profix &quot;E:\Blogs\Global&quot;</code> </li><li>设置缓存器：<code>npm config set cache &quot;E:\Blogs\Global&quot;</code></li><li>安装hexo ： <code>npm install -g hexo</code>（需等待一分钟）</li><li>检查hexo ： <code>hexo -v</code><ul><li>若出现版本信息，则表示安装成功，直接下一步即可</li><li>若不出现版本信息，需配置环境变量，再继续检查，环境变量路径为：E:\Blogs\Global（重启Git Bash）</li></ul></li><li>创建博客储存目录：E:/Blogs/Blog（此目录为博客根目录）</li><li>初始化hexo ：<code>hexo init</code>（必须在E:/Blogs/Blog目录下运行cmd窗口）</li><li>本地运行hexo ：<code>hexo s</code>（s代表server）</li><li>本地访问 ： <code>http://localhost:4000/</code>（默认地址，以运行窗口的地址为准）</li></ol><h1 id="博客的基本配置"><a href="#博客的基本配置" class="headerlink" title="博客的基本配置"></a>博客的基本配置</h1><ul><li><p>在博客根目录，打开博客配置文件<code>_config.yml</code>，修改内容如下（文件顶部）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">乐天的博客</span> <span class="comment"># 博客标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">'wounded-hearts'</span>  <span class="comment"># 博客的副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">wounded-hearts</span> <span class="comment"># 作者昵称</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 语言中文</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://wounded-hearts.github.io</span> <span class="comment"># 博客链接</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="安装个人主题"><a href="#安装个人主题" class="headerlink" title="安装个人主题"></a>安装个人主题</h1><ol><li>本人使用的主题：<a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">butterfly主题</a></li><li>其他主题：<ul><li><a href="https://hexo.io/themes" target="_blank" rel="noopener">主题官网</a> </li><li><a href="https://theme-next.js.org/" target="_blank" rel="noopener">Next主题</a>    </li><li><a href="https://www.yunyoujun.cn/" target="_blank" rel="noopener">Yun主题</a></li></ul></li><li>下载butterfly主题：<code>git clone https://github.com/jerryc127/hexo-theme-butterfly themes/butterfly</code></li><li>配置默认主题：<ul><li>配置文件：<code>E:\Blogs\Blog\</code>目录下的<code>_config.yml</code>文件</li><li>修改内容：搜索<code>theme:</code>将默认主题<code>landspace</code>替换为新下载的主题<code>butterfly</code></li><li>安装主题插件（2个）：<code>npm install hexo-renderer-pug hexo-renderer-stylus</code>（必须在E:/Blogs/Blog目录下运行cmd窗口）</li></ul></li><li>本地启动默认主题：<code>hexo s</code>（此默认主题即为butterfly主题）</li></ol><h1 id="配置butterfly主题"><a href="#配置butterfly主题" class="headerlink" title="配置butterfly主题"></a>配置butterfly主题</h1><ol><li><p><strong>注意事项：</strong></p><ul><li><strong>注意原文件的备份，以防手贱，损坏原文件</strong></li><li><strong>所有安装的插件都在博客根目录下的cmd窗口执行</strong></li><li><strong>在配置文件中，每个属性后面都要有一个<code>空格</code>间隔（即冒号后面必须有一个空格）</strong></li><li><strong>安装插件时，电脑尽量不要做其他操作（一直盯着窗口就行，等待时间太长就取消，重新下载）</strong></li></ul></li><li><p><strong>自定义配置文件：</strong></p><ul><li>将 <code>E:\Blogs\Blog\themes\butterfly\</code> 目录中的 <code>_config.yml</code> 复制到 <code>E:\Blogs\Blog\source\_data\</code> 目录中，并重命名为 <code>butterfly.yml</code> （注意：_data目录不存在，就新建，原文件方便更新主题版本）</li></ul></li></ol><h2 id="主页大图片的修改"><a href="#主页大图片的修改" class="headerlink" title="主页大图片的修改"></a>主页大图片的修改</h2><ul><li>打开<code>博客根目录/source/_data/butterfly.yml</code>（主题配置文件），搜索<code>default_top_img:</code>，修改URL即可</li></ul><h2 id="头像的修改"><a href="#头像的修改" class="headerlink" title="头像的修改"></a>头像的修改</h2><ul><li>头像目录：<code>博客根目录/themes/butterfly/source/img/</code>（将头像存放在此目录下，自定义头像大小应与原始文件相等）</li><li>打开主题配置文件，搜索<code>avatar:</code>修改<code>img:</code>的URL（使用本地相对路径或网络地址）</li></ul><h2 id="主页的导航栏的修改"><a href="#主页的导航栏的修改" class="headerlink" title="主页的导航栏的修改"></a>主页的导航栏的修改</h2><ul><li><p>配置文件原始状态（主题配置文件顶部）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="attr">Link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">  <span class="string">List||fa</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Music</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Movie</span> <span class="string">||</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-film</span></span><br></pre></td></tr></table></figure></li><li><p>修改内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">档案:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">清单||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Music</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Movie</span> <span class="string">||</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">友情链接:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="主页座右铭的修改"><a href="#主页座右铭的修改" class="headerlink" title="主页座右铭的修改"></a>主页座右铭的修改</h2><ul><li><p>打开主题配置文件，搜索<code>subtitle:</code>（共有两处，仔细查看内容），修改<code>sub:</code>下的内容</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用搏天api的隨機語錄（簡體） https://api.btstu.cn/</span></span><br><span class="line">  <span class="comment"># source: 2  調用一言網的一句話（簡體） https://hitokoto.cn/</span></span><br><span class="line">  <span class="comment"># source: 3  調用一句網（簡體） http://yijuzhan.com/</span></span><br><span class="line">  <span class="comment"># source: 4  調用今日詩詞（簡體） https://www.jinrishici.com/</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果有英文逗號' , ',請使用轉義字元 &amp;#44;</span></span><br><span class="line">  <span class="comment"># 如果有英文雙引號' " ',請使用轉義字元 &amp;quot;</span></span><br><span class="line">  <span class="comment"># 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">我只管去努力，剩下的交给天意！</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">I</span> <span class="string">just</span> <span class="string">work</span> <span class="string">hard,</span> <span class="string">the</span> <span class="string">rest</span> <span class="string">to</span> <span class="string">God!</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>我们还可以自动获取网络上的好句子，我们只需要将<code>source: false</code>换成下面你想选择的样式（我自己的是false）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">source:</span> <span class="number">1</span> <span class="comment">#调用博天API https://api.btstu.cn/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">2</span> <span class="comment">#调用一言API https://hitokoto.cn/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">3</span> <span class="comment">#调用一句话API http://yijuzhan.com/</span></span><br><span class="line"><span class="attr">source:</span> <span class="number">4</span> <span class="comment">#调用今日诗词API https://www.jinrishici.com/</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="butterfly主题配置官方教程"><a href="#butterfly主题配置官方教程" class="headerlink" title="butterfly主题配置官方教程"></a>butterfly主题配置官方教程</h2><ul><li>说明：更加全面、详细的教程（<strong>若我的看不懂，则可以去此网站学习</strong>）</li><li>URL： <a href="https://demo.jerryc.me" target="_blank" rel="noopener">butterfly主题</a></li></ul><h1 id="部署到github网站"><a href="#部署到github网站" class="headerlink" title="部署到github网站"></a>部署到github网站</h1><ol><li><p>注册github： <a href="https://github.com" target="_blank" rel="noopener">github官网</a></p></li><li><p>准备工作：创建github账号，新建一个新的仓库（其中仓库名字必须是<code>xxx.github.io</code><strong>xxx</strong>是你的Github名字）</p></li><li><p>修改<strong>博客配置</strong>文件（最底部）：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/wounded-hearts/wounded-hearts.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p><code>github:</code> 添加自己github的仓库地址：gitee的仓库地址在 <code>Code</code> 处（最重要的一步）</p></li><li><p>安装部署插件： <code>npm install hexo-deployer-git --save</code></p></li><li><p>在博客根目录执行以下命令（按顺序）：</p><ul><li>清理垃圾： <code>hexo clean</code> </li><li>生成网站静态文件： <code>hexo g</code> </li><li>推送到远端： <code>hexo d</code> </li></ul></li><li><p>互联网访问博客地址： <code>https://wounded-hearts.github.io</code></p></li></ol><h1 id="部署到gitee网站"><a href="#部署到gitee网站" class="headerlink" title="部署到gitee网站"></a>部署到gitee网站</h1><ol><li><p>注册码云：<a href="https://gitee.com" target="_blank" rel="noopener">giree官网</a></p></li><li><p>新建仓库并开启 <code>Gitee Pages 服务</code> （仓库名与网站用户名一致，服务怎么开启 <code>百度</code>）</p></li><li><p>修改<strong>博客配置</strong>文件（个人建议推送时单个推送，先注释一个）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line"><span class="comment">#    github: https://github.com/wounded-hearts/wounded-hearts.github.io.git</span></span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">https://gitee.com/wlet/wlet.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>gitee的仓库地址在 <code>克隆/下载</code> 处</p></li><li><p>在博客根目录执行以下命令：</p><ul><li>清理垃圾： <code>hexo clean</code> </li><li>生成网站静态文件： <code>hexo g</code> </li><li>推送到远端： <code>hexo d</code> </li></ul></li><li><p>手动更新 <code>Gitee Pages 服务</code> （gitee免费版必须手动更新，专业付费版自动更新）</p></li><li><p>互联网访问博客地址： <code>https://wlet.gitee.io</code> </p></li></ol><h1 id="设置SSH-密钥（keys）"><a href="#设置SSH-密钥（keys）" class="headerlink" title="设置SSH 密钥（keys）"></a>设置SSH 密钥（keys）</h1><h2 id="第一步：检查SSH-keys"><a href="#第一步：检查SSH-keys" class="headerlink" title="第一步：检查SSH keys"></a>第一步：检查SSH keys</h2><ol><li>打开<code>Git Bash</code> 并输入：<code>ls -al ~/.ssh</code>（查看<code>.ssh</code>目录下是否存在<code>id_rsa.pub</code> 或<code>id_dsa.pub</code>）</li><li>若不存在此文件，说明不存在<code>SSH keys</code> ，需要进入<strong>第二步</strong>创建一个<code>SSH keys</code></li><li>若存在此文件，直接用<strong>编辑器</strong>打开<code>id_rsa.pub</code>或<code>id_dsa.pub</code>文件，复制全部内容到粘贴板，进入<strong>第三步</strong>或<strong>第四步</strong></li></ol><h2 id="第二步：创建一个新的SSH-key"><a href="#第二步：创建一个新的SSH-key" class="headerlink" title="第二步：创建一个新的SSH key"></a>第二步：创建一个新的SSH key</h2><ol><li><p>打开<code>Git Bash</code> 并输入：ssh-keygen -t rsa -C “<a href="mailto:xxx@xxx.com">xxx@xxx.com</a>“（输入有效的邮箱地址）</p></li><li><p>若出现<code>Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</code>直接回车键Enter</p></li><li><p>创建ssh密码（推荐使用复杂性较高的密码，但必须记住；也可直接<strong>回车</strong>，密码为空）：</p><ul><li><code>Enter passphrase (empty for no passphrase):</code>（输入任意密码）</li><li><code>Enter same passphrase again:</code>（再次确认密码）</li></ul></li><li><p>出现如下所示，表示ssh密码添加成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line"></span><br><span class="line">Your identification has been saved in /c/Users/wlet/.ssh/id_rsa</span><br><span class="line">Your public key has been saved in /c/Users/wlet/.ssh/id_rsa.pub  # 注意文件的绝对路径</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:roPqqjwqd8W3pt9apWQgSC9riX8arn1sToTv1TOQlWA 2696975505@qq.com</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">|    .   E        |</span><br><span class="line">|   . o . . .     |</span><br><span class="line">|    o o . o      |</span><br><span class="line">|   . = . +       |</span><br><span class="line">|  . =.. S o .    |</span><br><span class="line">|   o oo..= o     |</span><br><span class="line">|    o++.o.*      |</span><br><span class="line">|o..oo*=ooo o     |</span><br><span class="line">|B==+++==o..      |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure></li><li><p>在你的ssh-代理上添加上你的新的密钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span>  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Agent pid 59566</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-add ~/.ssh/id_rsa  </span></span><br><span class="line">Enter passphrase for /c/Users/wlet/.ssh/id_rsa:  # 输入刚创建的ssh密码</span><br><span class="line">Identity added: /c/Users/wlet/.ssh/id_rsa (123456789@qq.com)</span><br></pre></td></tr></table></figure></li></ol><h2 id="第三步：在GitHub中添加SSH-key"><a href="#第三步：在GitHub中添加SSH-key" class="headerlink" title="第三步：在GitHub中添加SSH key"></a>第三步：在GitHub中添加SSH key</h2><ol><li>登陆GitHub &gt;&gt; 点击右上角<code>头像</code> &gt;&gt; <code>settings</code> &gt;&gt; <code>SSH and GPG keys</code> &gt;&gt; <code>New SSH key</code> &gt;&gt; Title：自定义标题、Key：粘贴<code>id_rsa.pub</code> 或<code>id_dsa.pub</code>文件内容 &gt;&gt; <code>Add SSH key</code></li><li>输入你的<code>GitHub</code>密码确认身份</li><li><code>Delete</code>可删除此ssh密钥</li></ol><h2 id="第四步：在Gitee中添加SSH-key"><a href="#第四步：在Gitee中添加SSH-key" class="headerlink" title="第四步：在Gitee中添加SSH key"></a>第四步：在Gitee中添加SSH key</h2><ol><li>登陆Gitee &gt;&gt; 点击有上角<code>头像</code> &gt;&gt; <code>设置</code> &gt;&gt; <code>SSH公钥</code> &gt;&gt; 自定义标题、粘贴公钥（<code>id_rsa.pub</code> 或<code>id_dsa.pub</code>文件内容） &gt;&gt; 确认</li><li>输入你的<code>Gitee</code>密码确认身份</li><li>可点击<code>删除</code>此ssh密钥</li></ol><h2 id="第五步：测试密钥"><a href="#第五步：测试密钥" class="headerlink" title="第五步：测试密钥"></a>第五步：测试密钥</h2><ol><li><p>作用：为了确保所有的操作都在工作，现在需要SSHing一下GitHub；当你这么做的时候，你将会被要求输入密码以证实你的行为，就是之前你创建的ssh密码</p></li><li><p>打开Git Bash并输入：ssh -T <code>git@github.com</code>或<code>ssh -T git@gitee.com</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@github.com</span></span><br><span class="line"></span><br><span class="line">The authenticity of host 'github.com (13.229.188.59)' can't be established.</span><br><span class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes  # 输入yes即可</span><br><span class="line"></span><br><span class="line">Warning: Permanently added 'github.com,13.229.188.59' (RSA) to the list of known hosts.</span><br><span class="line">Enter passphrase for key '/c/Users/wlet/.ssh/id_rsa':  # 输入刚才创建的ssh密码</span><br><span class="line"></span><br><span class="line">Hi wounded-hearts! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li><li><p>出现GitHub的用户名，说明你的<code>SSH key</code>成功安装！（本人用户名：<code>wounded-hearts</code>）</p></li><li><p>Gitee同理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh -T git@gitee.com</span></span><br><span class="line"></span><br><span class="line">The authenticity of host 'gitee.com (180.97.125.228)' can't be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:FQGC9Kn/eye1W8icdBgrQp+KkGYoFgbVr17bmjey0Wc.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line"></span><br><span class="line">Warning: Permanently added 'gitee.com,180.97.125.228' (ECDSA) to the list of known hosts.</span><br><span class="line">Enter passphrasefor key '/c/Users/wlet/.ssh/id_rsa':</span><br><span class="line"></span><br><span class="line">Hi wlet! You've successfully authenticated, but GITEE.COM does not provide shell access.</span><br></pre></td></tr></table></figure></li></ol><h2 id="第六步：部署博客"><a href="#第六步：部署博客" class="headerlink" title="第六步：部署博客"></a>第六步：部署博客</h2><ol><li><p>打开<code>GitHub</code>或<code>Gitee</code>中存放博客的仓库，选择<code>SSH</code>链接地址（仓库右上角<code>克隆/下载</code>或<code>Code</code>）</p></li><li><p>打开博客配置文件：<code>_config.yml</code>，如下所示：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">git@gitee.com:wlet/wlet.git</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:wounded-hearts/wounded-hearts.github.io.git</span></span><br><span class="line">    <span class="comment"># gitee: https://gitee.com/wlet/wlet.git  </span></span><br><span class="line">    <span class="comment"># github: https://github.com/wounded-hearts/wounded-hearts.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>运行博客三连：</p><ul><li><code>hexo clean</code>  </li><li><code>hexo g</code>  </li><li><code>hexo d</code>  </li></ul></li><li><p>输入ssh密码（重要操作：<strong>第二步</strong>中创建的密码）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
